(window.webpackJsonp=window.webpackJsonp||[]).push([[846],{999:function(n,e){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"collapse-from-top.vue.js","sources":["../../../../src/components/animations/collapse-from-top.vue"],"sourcesContent":["<template>\\n  <transition v-on=\\"$listeners\\" appear name=\\"x-collapse-from-top-\\">\\n    \x3c!-- @slot (Required) to add content to the transition --\x3e\\n    <slot />\\n  </transition>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import Vue from \'vue\';\\n  import { Component } from \'vue-property-decorator\';\\n\\n  /**\\n   * Renders a transition group wrapping the element passed in the default slot and animating\\n   * it with a scale.\\n   *\\n   * @public\\n   */\\n  @Component\\n  export default class CollapseFromTop extends Vue {}\\n<\/script>\\n\\n<style lang=\\"scss\\" scoped>\\n  .x-collapse-from-top {\\n    &--enter-active,\\n    &--leave-active,\\n    &--enter-active ::v-deep > *,\\n    &--leave-active ::v-deep > * {\\n      transform-origin: top center;\\n      animation-duration: 0.4s;\\n      animation-timing-function: linear;\\n    }\\n\\n    &--enter-active,\\n    &--leave-active {\\n      animation-name: containerAnimation;\\n      overflow: hidden;\\n    }\\n\\n    &--enter-active ::v-deep > *,\\n    &--leave-active ::v-deep > * {\\n      animation-name: contentAnimation;\\n    }\\n\\n    &--leave-active,\\n    &--leave-active > ::v-deep * {\\n      animation-direction: reverse;\\n    }\\n  }\\n\\n  @function easeInOut($x) {\\n    @if $x < 0.5 {\\n      @return 8 * $x * $x * $x * $x;\\n    } @else {\\n      $x: $x - 1;\\n      @return 1 - (8 * $x * $x * $x * $x);\\n    }\\n  }\\n\\n  @keyframes containerAnimation {\\n    @for $step from 0 through 100 {\\n      $scale: easeInOut($step / 100);\\n      #{$step}% {\\n        transform: scaleY(#{$scale});\\n      }\\n    }\\n  }\\n\\n  @keyframes contentAnimation {\\n    @for $step from 0 through 100 {\\n      $scale: easeInOut($step / 100);\\n      $invScale: if($scale > 0, 1 / $scale, 99999999);\\n      #{$step}% {\\n        transform: scaleY(#{$invScale});\\n      }\\n    }\\n  }\\n</style>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\nThe CollapseTop component is intended to be used as animation to wrap an element with v-if or v-show\\nand animate it. The animation consists on scale its vertical size from 0 to 1, and after this show\\nthe content with an opacity transition\\n\\nUsed wrapping a component:\\n\\n```vue\\n<CollapseFromTop>\\n  <ComponentOrElement v-if=\\"open\\"/>\\n</CollapseFromTop>\\n```\\n</docs>\\n"],"names":["const"],"mappings":";;;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);