(window.webpackJsonp=window.webpackJsonp||[]).push([[754],{1042:function(A,e){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"store.decorators.js","sources":["../../../../src/components/decorators/store.decorators.ts"],"sourcesContent":["import Vue, { ComponentOptions } from \'vue\';\\nimport { createDecorator } from \'vue-class-component\';\\nimport { getGetterPath } from \'../../plugins/x-plugin.utils\';\\nimport { DecoratorFor } from \'../../utils/index\';\\nimport { ExtractGetters, ExtractState, XModuleName } from \'../../x-modules/x-modules.types\';\\n\\n/**\\n * Generates a computed property which returns the selected state.\\n *\\n * The decorated property needs to be public for type inference to work.\\n *\\n * @param module - The {@link XModuleName} of the getter.\\n * @param path - The state path.\\n * @returns Decorator with the state properties of the module.\\n * @public\\n */\\nexport function State<Module extends XModuleName, Path extends keyof ExtractState<Module>>(\\n  module: Module,\\n  path: Path\\n): DecoratorFor<ExtractState<Module>[Path]> {\\n  return createDecorator((options, key) => {\\n    if (!options.computed) {\\n      options.computed = {};\\n    }\\n    Object.assign(options.computed, {\\n      [key]() {\\n        return this.$store.state.x[module][path];\\n      }\\n    } as ThisType<Vue>);\\n  });\\n}\\n\\n/**\\n * Generates a computed property which returns the selected getter value.\\n *\\n * The decorated property needs to be public for type inference to work.\\n *\\n * @param module - The {@link XModuleName} of the getter.\\n * @param getter - The getter name.\\n * @returns Decorator with the getters of the module.\\n * @public\\n */\\nexport function Getter<Module extends XModuleName, GetterName extends keyof ExtractGetters<Module>>(\\n  module: Module,\\n  getter: GetterName\\n): DecoratorFor<ExtractGetters<Module>[GetterName]> {\\n  return createDecorator((options: ComponentOptions<Vue>, key: string) => {\\n    if (!options.computed) {\\n      options.computed = {};\\n    }\\n    const getterPath = getGetterPath(module, getter);\\n    Object.assign(options.computed, {\\n      [key]() {\\n        return this.$store.getters[getterPath];\\n      }\\n    } as ThisType<Vue>);\\n  });\\n}\\n"],"names":[],"mappings":";;;AAMA;;;;;;;;;;SAUgB,KAAK,CACnB,MAAc,EACd,IAAU;IAEV,OAAO,eAAe,CAAC,UAAC,OAAO,EAAE,GAAG;;QAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACrB,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;SACvB;QACD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAE;YAC9B,GAAC,GAAG,IAAJ;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;aAC1C;cACe,EAAC,CAAC;KACrB,CAAC,CAAC;AACL,CAAC;AAED;;;;;;;;;;SAUgB,MAAM,CACpB,MAAc,EACd,MAAkB;IAElB,OAAO,eAAe,CAAC,UAAC,OAA8B,EAAE,GAAW;;QACjE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACrB,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;SACvB;QACD,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAE;YAC9B,GAAC,GAAG,IAAJ;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aACxC;cACe,EAAC,CAAC;KACrB,CAAC,CAAC;AACL;;;;"}')}}]);