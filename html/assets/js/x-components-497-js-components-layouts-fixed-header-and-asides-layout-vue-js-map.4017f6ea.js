(window.webpackJsonp=window.webpackJsonp||[]).push([[867],{1150:function(n,e){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"fixed-header-and-asides-layout.vue.js","sources":["../../../../src/components/layouts/fixed-header-and-asides-layout.vue"],"sourcesContent":["<template>\\n  <MainScroll>\\n    <Scroll\\n      @scroll=\\"setPosition\\"\\n      id=\\"main-scroll\\"\\n      class=\\"x-layout x-layout--fixed-header-and-asides\\"\\n      :class=\\"{ \'dev-mode\': devMode }\\"\\n    >\\n      <div\\n        key=\\"header-backdrop\\"\\n        class=\\"x-layout__header-backdrop\\"\\n        :class=\\"{ \'x-layout__header-backdrop--is-visible\': isBackdropVisible }\\"\\n      />\\n\\n      <header\\n        v-if=\\"hasContent(\'header\')\\"\\n        key=\\"header\\"\\n        class=\\"x-layout__header x-list x-list--horizontal\\"\\n      >\\n        \x3c!-- @slot Slot that is be used for insert content into the Header. --\x3e\\n        <slot name=\\"header\\">\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">HEADER</span>\\n        </slot>\\n      </header>\\n\\n      <div v-if=\\"hasContent(\'sub-header\')\\" key=\\"sub-header\\" class=\\"x-layout__sub-header\\">\\n        <div class=\\"x-layout__sub-header-content\\">\\n          \x3c!-- @slot Slot that can be used to insert content into below the header. --\x3e\\n          <slot name=\\"sub-header\\">\\n            <span v-if=\\"devMode\\" class=\\"slot-helper\\">SUB HEADER</span>\\n          </slot>\\n        </div>\\n      </div>\\n\\n      <section v-if=\\"hasContent(\'toolbar\')\\" key=\\"toolbar\\" class=\\"x-layout__toolbar\\">\\n        <slot name=\\"toolbar\\">\\n          \x3c!-- @slot Slot that can be used to insert content above the main. --\x3e\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">TOOLBAR</span>\\n        </slot>\\n      </section>\\n\\n      <main v-if=\\"hasContent(\'main\')\\" key=\\"main\\" class=\\"x-layout__main x-list x-list--vertical\\">\\n        \x3c!-- @slot Slot that is be used for insert content into the Main. --\x3e\\n        <slot name=\\"main\\">\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">MAIN</span>\\n        </slot>\\n      </main>\\n\\n      <BaseIdModal\\n        v-if=\\"hasContent(\'left-aside\')\\"\\n        key=\\"left-aside\\"\\n        :animation=\\"leftAsideAnimation\\"\\n        modalId=\\"left-aside\\"\\n        class=\\"x-layout__aside x-layout__aside--left\\"\\n      >\\n        \x3c!-- @slot Slot that is be used for insert content into the left aside. --\x3e\\n        <slot name=\\"left-aside\\">\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">LEFT ASIDE</span>\\n        </slot>\\n      </BaseIdModal>\\n\\n      <BaseIdModal\\n        v-if=\\"hasContent(\'right-aside\')\\"\\n        key=\\"right-aside\\"\\n        :animation=\\"rightAsideAnimation\\"\\n        modalId=\\"right-aside\\"\\n        class=\\"x-layout__aside x-layout__aside--right\\"\\n      >\\n        \x3c!-- @slot Slot that is be used for insert content into the right aside. --\x3e\\n        <slot name=\\"right-aside\\">\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">RIGHT ASIDE</span>\\n        </slot>\\n      </BaseIdModal>\\n\\n      <div v-if=\\"hasContent(\'scroll-to-top\')\\" key=\\"scroll-to-top\\" class=\\"x-layout__scroll-to-top\\">\\n        <slot name=\\"scroll-to-top\\">\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">SCROLL TO TOP</span>\\n        </slot>\\n      </div>\\n    </Scroll>\\n  </MainScroll>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import { Component } from \'vue-property-decorator\';\\n  import { mixins } from \'vue-class-component\';\\n  import MainScroll from \'../../x-modules/scroll/components/main-scroll.vue\';\\n  import { TranslateFromLeft, TranslateFromRight } from \'../animations\';\\n  import BaseIdModal from \'../modals/base-id-modal.vue\';\\n  import Scroll from \'../../x-modules/scroll/components/scroll.vue\';\\n  import LayoutsMixin from \'./layouts.mixin\';\\n\\n  /**\\n   * Component for use as Layout to be filled with the rest of the components.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    components: {\\n      BaseIdModal,\\n      MainScroll,\\n      Scroll\\n    }\\n  })\\n  export default class FixedHeaderAndAsidesLayout extends mixins(LayoutsMixin) {\\n    protected scrollPosition = 0;\\n    protected rightAsideAnimation = TranslateFromRight;\\n    protected leftAsideAnimation = TranslateFromLeft;\\n\\n    protected setPosition(position: number): void {\\n      this.scrollPosition = position;\\n    }\\n\\n    protected get isBackdropVisible(): boolean {\\n      return this.scrollPosition > 0;\\n    }\\n  }\\n<\/script>\\n\\n<style scoped lang=\\"scss\\">\\n  @import \'../../design-system/utilities/dev-mode\';\\n\\n  .x-layout {\\n    // custom properties\\n    display: grid;\\n    align-content: stretch;\\n    min-height: 100%;\\n\\n    // layout\\n    max-height: 100%;\\n    --x-size-margin-max-width: calc((100vw - var(--x-size-max-width-layout, 1440px)) / 2);\\n    --x-size-margin-layout: max(\\n      var(--x-size-min-margin-layout, 20px),\\n      var(--x-size-margin-max-width)\\n    );\\n\\n    grid-template-rows:\\n      [page-start header-start]\\n      auto\\n      [header-end sub-header-start]\\n      auto\\n      [sub-header-end toolbar-start]\\n      auto\\n      [toolbar-end main-start]\\n      1fr\\n      [main-end page-end];\\n\\n    grid-template-columns:\\n      [page-start]\\n      var(--x-size-margin-layout)\\n      [max-width-start]\\n      1fr\\n      [max-width-end]\\n      var(--x-size-margin-layout)\\n      [page-end];\\n\\n    &__header {\\n      // layout\\n      position: sticky;\\n      top: -0.5px;\\n      z-index: 2;\\n      grid-row: header;\\n      grid-column: page;\\n      max-height: var(--x-size-max-height-layout-header, auto);\\n      padding: 0 var(--x-size-margin-layout);\\n\\n      //color\\n      background: var(--x-color-background-layout-header, transparent);\\n      border-color: var(--x-size-border-color-layout-header, transparent);\\n\\n      // border\\n      border-width: var(--x-size-border-width-layout-header, 0);\\n      border-style: solid;\\n    }\\n\\n    &__sub-header {\\n      // layout\\n      grid-row: sub-header;\\n      grid-column: page;\\n      padding: 0 var(--x-size-margin-layout);\\n\\n      //color\\n      background: var(--x-color-background-layout-sub-header, transparent);\\n      border-color: var(--x-size-border-color-layout-sub-header, transparent);\\n\\n      // border\\n      border-width: var(--x-size-border-width-layout-sub-header, 0);\\n      border-style: solid;\\n    }\\n\\n    &__toolbar {\\n      // layout\\n      grid-row: toolbar;\\n      grid-column: max-width;\\n    }\\n\\n    &__main {\\n      // layout\\n      grid-row: main;\\n      grid-column: max-width;\\n    }\\n\\n    &__aside {\\n      &.x-modal {\\n        // layout\\n        z-index: 3;\\n        flex-flow: row nowrap;\\n\\n        ::v-deep .x-modal__content {\\n          background-color: transparent;\\n          height: 100%;\\n          width: var(--x-size-width-layout-aside, 300px);\\n        }\\n      }\\n\\n      // others\\n      pointer-events: none;\\n      ::v-deep > *:not(.slot-helper) {\\n        pointer-events: all;\\n      }\\n\\n      &--right.x-modal {\\n        justify-content: flex-end;\\n      }\\n    }\\n\\n    &__scroll-to-top {\\n      position: fixed;\\n      z-index: 1;\\n      bottom: var(--x-size-margin-bottom-layout-scroll-to-top, 16px);\\n      right: var(--x-size-margin-right-layout-scroll-to-top, 16px);\\n    }\\n\\n    &__header-backdrop {\\n      // layout\\n      grid-row: page;\\n      grid-column: page;\\n      position: sticky;\\n      top: -0.5px;\\n      z-index: 1;\\n      height: var(--x-size-height-layout-backdrop, 40vh);\\n      width: 100%;\\n      pointer-events: none;\\n\\n      // color\\n      background-color: var(\\n        --x-color-background-layout-header-backdrop,\\n        var(--x-color-base-neutral-100, white)\\n      );\\n      mask: linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));\\n\\n      // transition\\n      opacity: 0;\\n      transition: opacity 0.2s ease-out;\\n\\n      &--is-visible {\\n        opacity: 1;\\n      }\\n    }\\n  }\\n</style>\\n\\n<docs lang=\\"mdx\\">\\n## Layout\\n\\nThis component has the following layout with fixed headers and collapsible fixed asides:\\n\\n|            |   header   |               |\\n| :--------: | :--------: | :-----------: |\\n| left-aside | sub-header |  right-aside  |\\n|            |  toolbar   |               |\\n|            |    main    |               |\\n|            |            | scroll-to-top |\\n\\n## Design Tokens\\n\\nThe component has also the following `Design Tokens` to configure it:\\n\\n|                    token                    | default value |\\n| :-----------------------------------------: | :-----------: |\\n|       --x-size-height-layout-backdrop       |     40vh      |\\n|         --x-size-width-layout-aside         |     300px     |\\n|         --x-size-min-margin-layout          |     20px      |\\n|      --x-size-max-height-layout-header      |     auto      |\\n|          --x-size-max-width-layout          |    1440px     |\\n| --x-color-background-layout-header-backdrop |     white     |\\n|     --x-color-background-layout-header      |  transparent  |\\n|     --x-size-border-color-layout-header     |  transparent  |\\n|     --x-size-border-width-layout-header     |      0px      |\\n|   --x-color-background-layout-sub-header    |  transparent  |\\n|   --x-size-border-color-layout-sub-header   |  transparent  |\\n|   --x-size-border-width-layout-sub-header   |      0px      |\\n\\n|                    token                    |                    use                    |\\n| :-----------------------------------------: | :---------------------------------------: |\\n|       --x-size-height-layout-backdrop       |  The height for header gradient backdrop  |\\n|         --x-size-width-layout-aside         |          The width of the asides          |\\n|         --x-size-min-margin-layout          | The min horizontal margin for the Layout  |\\n|      --x-size-max-height-layout-header      |   The max height for the Layout Header    |\\n|          --x-size-max-width-layout          |       The max width for the Layout        |\\n| --x-color-background-layout-header-backdrop | The background color of the head backdrop |\\n|     --x-color-background-layout-header      |    The background color of the header     |\\n|     --x-size-border-color-layout-header     |      The border color of the header       |\\n|     --x-size-border-width-layout-header     |       The border with of the header       |\\n|   --x-color-background-layout-sub-header    |  The background color of the sub header   |\\n|   --x-size-border-color-layout-sub-header   |    The border color of the sub header     |\\n|   --x-size-border-width-layout-sub-header   |     The border with of the sub header     |\\n</docs>\\n"],"names":["const"],"mappings":";;;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);