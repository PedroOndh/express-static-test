(window.webpackJsonp=window.webpackJsonp||[]).push([[545],{1331:function(e,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"history-query.vue.js","sources":["../../../../../src/x-modules/history-queries/components/history-query.vue"],"sourcesContent":["<template>\\n  <div class=\\"x-suggestion-group x-history-query\\">\\n    <BaseSuggestion\\n      class=\\"x-history-query__suggestion\\"\\n      v-bind=\\"{ suggestion, suggestionSelectedEvents, query }\\"\\n      data-test=\\"history-query\\"\\n      feature=\\"history_query\\"\\n    >\\n      <template #default=\\"{ suggestion, queryHTML }\\">\\n        \x3c!-- eslint-disable max-len --\x3e\\n        \x3c!--\\n          @slot History Query content\\n              @binding {Suggestion} suggestion - History Query suggestion data\\n              @binding {string} queryHTML - Suggestion\'s query with the matching part inside a span tag\\n        --\x3e\\n        \x3c!-- eslint-enable max-len --\x3e\\n        <slot v-bind=\\"{ suggestion, queryHTML }\\" />\\n      </template>\\n    </BaseSuggestion>\\n    <RemoveHistoryQuery\\n      class=\\"x-history-query__remove\\"\\n      :historyQuery=\\"suggestion\\"\\n      data-test=\\"remove-history-query\\"\\n    >\\n      \x3c!--\\n          @slot History Query remove button content\\n              @binding {Suggestion} suggestion - History Query suggestion data\\n        --\x3e\\n      <slot name=\\"remove-button-content\\" v-bind=\\"{ suggestion }\\">âœ•</slot>\\n    </RemoveHistoryQuery>\\n  </div>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import { HistoryQuery as HistoryQueryModel } from \'@empathyco/x-types\';\\n  import Vue from \'vue\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import { Getter } from \'../../../components/decorators/store.decorators\';\\n  import BaseSuggestion from \'../../../components/suggestions/base-suggestion.vue\';\\n  import { xComponentMixin } from \'../../../components/x-component.mixin\';\\n  import { XEventsTypes } from \'../../../wiring/events.types\';\\n  import { historyQueriesXModule } from \'../x-module\';\\n  import RemoveHistoryQuery from \'./remove-history-query.vue\';\\n\\n  /**\\n   * This component renders a history query suggestion combining two buttons: one for selecting this\\n   * suggestion as the search query, and another one to remove this query suggestion from the\\n   * history queries.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    mixins: [xComponentMixin(historyQueriesXModule)],\\n    components: { RemoveHistoryQuery, BaseSuggestion }\\n  })\\n  export default class HistoryQuery extends Vue {\\n    /**\\n     * The history query suggestion to render.\\n     *\\n     * @public\\n     */\\n    @Prop({ required: true })\\n    protected suggestion!: HistoryQueryModel;\\n\\n    /**\\n     * The normalized query of the history-queries module.\\n     *\\n     * @internal\\n     */\\n    @Getter(\'historyQueries\', \'normalizedQuery\')\\n    public query!: string;\\n\\n    /**\\n     * The list of events that are going to be emitted when the suggestion button is pressed.\\n     *\\n     * @internal\\n     * @returns The {@link XEvent | XEvents} to emit.\\n     */\\n    protected get suggestionSelectedEvents(): Partial<XEventsTypes> {\\n      return {\\n        UserSelectedAHistoryQuery: this.suggestion\\n      };\\n    }\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\n### Basic usage\\n\\nThis component only requires a prop called `suggestion`\\n\\n```vue\\n<HistoryQuery :suggestion=\\"historyQuery\\" />\\n```\\n\\n### Customizing slots content\\n\\nSuggestion and remove buttons contents can be customized.\\n\\nThe default slot allows you to replace the content of the suggestion button. It has two properties,\\nthe suggestion itself, and a `string` of HTML with the matched query.\\n\\nThe other slot is called `remove-button-content`, and allows you to set the content of the button\\nthat serves to remove this query from the history. This slot only has one property, the suggestion.\\n\\n````vue\\n<HistoryQuery :suggestion=\\"historyQuery\\">\\n  <template #default=\\"{ suggestion, queryHTML }\\">\\n    <img class=\\"x-history-query__history-icon\\" src=\\"./history-icon.svg\\"/>\\n    <span class=\\"x-history-query__matching-part\\" v-html=\\"queryHTML\\"/>\\n  </template>\\n\\n  <template #remove-button-content=\\"{ suggestion }\\">\\n    <img class=\\"x-history-query__remove-icon\\" src=\\"./remove-icon.svg\\"/>\\n  </template>\\n</HistoryQuery>\\n``` ## Events A list of events that the component will emit: - `UserSelectedAHistoryQuery`: the\\nevent is emitted after the user clicks the button. The event payload is the history query data.\\n````\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);