(window.webpackJsonp=window.webpackJsonp||[]).push([[1041],{1307:function(e,t){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"sorted-filters.vue.js","sources":["../../../../../../src/x-modules/facets/components/lists/sorted-filters.vue"],"sourcesContent":["<script lang=\\"ts\\">\\n  import { BooleanFilter, Filter, isBooleanFilter } from \'@empathyco/x-types\';\\n  import { mixins } from \'vue-class-component\';\\n  import { Component } from \'vue-property-decorator\';\\n  import { CreateElement, VNode } from \'vue\';\\n  import { xComponentMixin, XProvide } from \'../../../../components\';\\n  import { isArrayEmpty } from \'../../../../utils\';\\n  import { facetsXModule } from \'../../x-module\';\\n  import FiltersInjectionMixin from \'./filters-injection.mixin\';\\n\\n  /**\\n   * Component that sorts a list of filters and returns them using the default scoped slot.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    mixins: [xComponentMixin(facetsXModule)]\\n  })\\n  export default class SortedFilters extends mixins(FiltersInjectionMixin) {\\n    /**\\n     * An array of filters with the selected filters at the beginning of the list.\\n     *\\n     * @returns Array of filters.\\n     * @internal\\n     */\\n    @XProvide(\'filters\')\\n    public get sortedFilters(): Filter[] {\\n      if (!isArrayEmpty(this.renderedFilters) && isBooleanFilter(this.renderedFilters[0])) {\\n        return ([...this.renderedFilters] as BooleanFilter[]).sort(({ selected }) => {\\n          return selected ? -1 : 1;\\n        });\\n      }\\n\\n      return this.renderedFilters;\\n    }\\n\\n    render(h: CreateElement): VNode {\\n      return this.$scopedSlots.default?.({ filters: this.sortedFilters })?.[0] ?? h();\\n    }\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Example\\n\\nThe sorted filters component takes a list of filters and returns this new filters list sorted by the\\n`selected` filter property.\\n\\n### Remarks\\n\\n- The component can receive the filters list by property or using the XInjection feature.\\n- It also provides the resultant list bound in the default slot or with the XProvide feature.\\n\\nBoth XInjection and XProvide features are from the extended FiltersInjectionMixin. You don\'t have to\\nuse XInjection and XProvide together, e.g. you can use pass the filters using a prop and then\\nreturns the result with XProvide.\\n\\n### Basic usage\\n\\n#### Using props and binding the result\\n\\n```vue\\n<template>\\n  <Facets v-slot=\\"{ facet }\\">\\n    <SortedFilters :filters=\\"facet.filters\\" #default=\\"{ sortedFilters }\\">\\n      <Filters :items=\\"sortedFilters\\" v-slot=\\"{ filter }\\">\\n        <SimpleFilter :filter=\\"filter\\" />\\n      </Filters>\\n    </SortedFilters>\\n  </Facets>\\n</template>\\n\\n<script>\\n  import { Facets, SimpleFilter, Filters } from \'@empathyco/x-components\';\\n\\n  export default {\\n    components: {\\n      Facets,\\n      Filters,\\n      SimpleFilter\\n    }\\n  };\\n<\/script>\\n```\\n\\n#### Using XInject and XProvide\\n\\n```vue\\n<Facets v-slot=\\"{ facet }\\">\\n  <FiltersSearch :filters=\\"facet.filters\\">\\n    <SortedFilters>\\n      <Filters v-slot=\\"{ filter }\\">\\n        <SimpleFilter :filter=\\"filter\\"/>\\n      </Filters>\\n    </SortedFilters>\\n  </FiltersSearch>\\n</Facets>\\n\\n<script>\\n  import { Facets, FiltersSearch, SimpleFilter, Filters } from \'@empathyco/x-components\';\\n\\n  export default {\\n    components: {\\n      Facets,\\n      FiltersSearch,\\n      Filters,\\n      SimpleFilter\\n    }\\n  };\\n<\/script>\\n```\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);