(window.webpackJsonp=window.webpackJsonp||[]).push([[1006],{1275:function(e,A){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"clear-filters.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../../src/x-modules/facets/components/clear-filters.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nimport { Facet, Filter, isFacetFilter } from '@empathyco/x-types';\\nimport Vue from 'vue';\\nimport { Component, Prop } from 'vue-property-decorator';\\nimport { Getter, xComponentMixin } from '../../../components';\\nimport BaseEventButton from '../../../components/base-event-button.vue';\\nimport { VueCSSClasses } from '../../../utils';\\nimport { XEventsTypes } from '../../../wiring';\\nimport { facetsXModule } from '../x-module';\\n\\n/**\\n * Renders a simple button, emitting the needed events when clicked.\\n *\\n * @public\\n */\\n@Component({\\n  components: { BaseEventButton },\\n  mixins: [xComponentMixin(facetsXModule)]\\n})\\nexport default class ClearFilters extends Vue {\\n  /**\\n   * It handles if the ClearFilters button is always visible no matter if there are not\\n   * filters selected. If false, the ClearFilters button is not visible whether\\n   * there are no filters selected.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: false })\\n  public alwaysVisible!: boolean;\\n\\n  /**\\n   * Array of facets ids that will be passed to event like payload.\\n   *\\n   * @public\\n   */\\n  @Prop()\\n  public facetsIds?: Array<Facet['id']>;\\n\\n  /**\\n   * Get the selected filters from store.\\n   *\\n   * @internal\\n   */\\n  @Getter('facets', 'selectedFilters')\\n  public allSelectedFilters!: Filter[];\\n\\n  /**\\n   * If alwaysVisible prop is true, ClearAllFilters button is always shown, but disabled\\n   * if there are no filters selected.\\n   * If alwaysVisible prop is false, ClearAllFilters button is shown whether there\\n   * are some filter selected.\\n   *\\n   * @returns True if alwaysVisible is true or in the opposite case true or false depends\\n   * on if there are selected filters or not.\\n   *\\n   * @internal\\n   */\\n  protected get show(): boolean {\\n    return this.alwaysVisible || this.areThereSelectedFilters;\\n  }\\n\\n  /**\\n   * Get selected filters.\\n   * If there are facets ids, get selected filters whose facet id match with some of facets ids.\\n   * If there aren't facets ids, get selected filters.\\n   *\\n   * @returns Array of selected filters depends on there are facets ids or not.\\n   * @internal\\n   */\\n  protected get facetsSelectedFilters(): Filter[] {\\n    if (this.facetsIds) {\\n      return this.allSelectedFilters.filter(\\n        filter => isFacetFilter(filter) && this.facetsIds!.includes(filter.facetId)\\n      );\\n    } else {\\n      return this.allSelectedFilters;\\n    }\\n  }\\n\\n  /**\\n   * Check if there are selected filters.\\n   *\\n   * @returns True or false depends on if there are facets ids and if there are selected filters.\\n   * @internal\\n   */\\n  protected get areThereSelectedFilters(): boolean {\\n    return !!this.facetsSelectedFilters.length;\\n  }\\n\\n  /**\\n   * The events that will be emitted when the button clear filters is clicked.\\n   *\\n   * @returns The events to be emitted when the button clear filters is clicked.\\n   * @internal\\n   */\\n  protected get events(): Partial<XEventsTypes> {\\n    return this.facetsIds\\n      ? {\\n          UserClickedClearAllFilters: this.facetsIds\\n        }\\n      : {\\n          UserClickedClearAllFilters: undefined\\n        };\\n  }\\n\\n  /**\\n   * Dynamic CSS classes to apply to the component.\\n   *\\n   * @returns The dynamic CSS classes to apply to the component.\\n   * @internal\\n   */\\n  protected get cssClasses(): VueCSSClasses {\\n    return {\\n      'x-clear-filters--has-not-selected-filters': !this.areThereSelectedFilters,\\n      'x-clear-filters--has-selected-filters': this.areThereSelectedFilters\\n    };\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;AASA;IAA0C,gCAAG;IAA7C;;KAkGC;IA5DC,sBAAc,8BAAI;;;;;;;;;;;;aAAlB;YACE,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,uBAAuB,CAAC;SAC3D;;;OAAA;IAUD,sBAAc,+CAAqB;;;;;;;;;aAAnC;YAAA,iBAQC;YAPC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CACnC,UAAA,MAAM,IAAI,OAAA,aAAa,CAAC,MAAM,CAAC,IAAI,KAAI,CAAC,SAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAA,CAC5E,CAAC;aACH;iBAAM;gBACL,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAChC;SACF;;;OAAA;IAQD,sBAAc,iDAAuB;;;;;;;aAArC;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;SAC5C;;;OAAA;IAQD,sBAAc,gCAAM;;;;;;;aAApB;YACE,OAAO,IAAI,CAAC,SAAS;kBACjB;oBACE,0BAA0B,EAAE,IAAI,CAAC,SAAS;iBAC3C;kBACD;oBACE,0BAA0B,EAAE,SAAS;iBACtC,CAAC;SACP;;;OAAA;IAQD,sBAAc,oCAAU;;;;;;;aAAxB;YACE,OAAO;gBACL,2CAA2C,EAAE,CAAC,IAAI,CAAC,uBAAuB;gBAC1E,uCAAuC,EAAE,IAAI,CAAC,uBAAuB;aACtE,CAAC;SACH;;;OAAA;IAxFD;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;uDACM;IAQ/B;QADC,IAAI,EAAE;mDAC+B;IAQtC;QADC,MAAM,CAAC,QAAQ,EAAE,iBAAiB,CAAC;4DACC;IAzBlB,YAAY;QAJhC,SAAS,CAAC;YACT,UAAU,EAAE,EAAE,eAAe,iBAAA,EAAE;YAC/B,MAAM,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACzC,CAAC;OACmB,YAAY,CAkGhC;IAAD,mBAAC;CAAA,CAlGyC,GAAG;;;;\"}")}}]);