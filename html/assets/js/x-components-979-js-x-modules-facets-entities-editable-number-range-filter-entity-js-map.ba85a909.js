(window.webpackJsonp=window.webpackJsonp||[]).push([[1044],{1310:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"editable-number-range-filter.entity.js\",\"sources\":[\"../../../../../src/x-modules/facets/entities/editable-number-range-filter.entity.ts\"],\"sourcesContent\":[\"import {\\n  EditableNumberRangeFilter,\\n  Facet,\\n  Filter,\\n  isEditableNumberRangeFilter\\n} from '@empathyco/x-types';\\nimport { Store } from 'vuex';\\nimport { RootXStoreState } from '../../../store/store.types';\\nimport { addFacetIfNotPresent } from './add-facet-if-not-present';\\nimport { FilterEntity } from './types';\\n\\n/**\\n * Allows selecting and deselecting a filter of {@link @empathyco/x-types#EditableNumberRangeFilter\\n * | EditableNumberRangeFilter}.\\n *\\n * @internal\\n */\\nexport class EditableNumberRangeFilterEntity implements FilterEntity {\\n  public constructor(protected store: Store<RootXStoreState>) {}\\n\\n  static accepts(filter: Filter): boolean {\\n    return isEditableNumberRangeFilter(filter);\\n  }\\n\\n  /**\\n   * It sets {@link @empathyco/x-types#EditableNumberRangeFilter | EditableNumberRangeFilter} to\\n   * false and reset the {@link @empathyco/x-types#EditableNumberRangeFilter\\n   * | EditableNumberRangeFilter} values to null.\\n   *\\n   * @param filter - The filter to deselect.\\n   */\\n  deselect(filter: EditableNumberRangeFilter): void {\\n    const newFilter: EditableNumberRangeFilter = {\\n      ...filter,\\n      selected: false,\\n      range: { min: null, max: null }\\n    };\\n    newFilter.id = this.getNewFilterId(newFilter);\\n    this.removePreviousFilter(filter.facetId);\\n    this.store.commit('x/facets/setFilter', newFilter);\\n    addFacetIfNotPresent(this.store, filter.facetId, 'EditableNumberRangeFacet');\\n  }\\n\\n  /**\\n   * It selects the {@link @empathyco/x-types#EditableNumberRangeFilter\\n   * | EditableNumberRangeFilter}.\\n   *\\n   * @param filter - The filter to select.\\n   * @remarks If the filter has no selected range, then filter is deselected when this\\n   * method is called.\\n   */\\n  select(filter: EditableNumberRangeFilter): void {\\n    const newFilterId = this.getNewFilterId(filter);\\n    this.removePreviousFilter(filter.facetId);\\n    this.store.commit('x/facets/setFilter', {\\n      ...filter,\\n      id: newFilterId,\\n      selected: this.isSelected(filter)\\n    });\\n    addFacetIfNotPresent(this.store, filter.facetId, 'EditableNumberRangeFacet');\\n  }\\n\\n  /**\\n   * Generates a new filter id using the range values.\\n   *\\n   * @param filter - The filter to generate its new id.\\n   * @returns The new filter id.\\n   * @internal\\n   */\\n  protected getNewFilterId(filter: EditableNumberRangeFilter): string {\\n    return `${filter.facetId}:${String(filter.range.min)}_${String(filter.range.max)}`;\\n  }\\n\\n  /**\\n   * It returns if the filter range min or the filter range max is not null.\\n   *\\n   * @param filter - The filter to determine if it is selected or not.\\n   * @returns True if filter range min or filter range max is not null.\\n   * @internal\\n   */\\n  protected isSelected(filter: EditableNumberRangeFilter): boolean {\\n    return filter.range.min !== null || filter.range.max !== null;\\n  }\\n\\n  /**\\n   * Removes the previous filter of this facet from the store, only if it exists.\\n   *\\n   * @param facetId - The facet to remove its only filter.\\n   * @internal\\n   */\\n  protected removePreviousFilter(facetId: Facet['id']): void {\\n    const previousFilter = this.getFilterByFacet(facetId);\\n    if (previousFilter) {\\n      this.store.commit('x/facets/removeFilter', previousFilter);\\n    }\\n  }\\n\\n  /**\\n   * Retrieves the filter of the given facet id from the store.\\n   *\\n   * @param facetId -  The facet id to retrieve its filter.\\n   * @returns The filter of the facet if it exists.\\n   * @internal\\n   */\\n  protected getFilterByFacet(facetId: Facet['id']): EditableNumberRangeFilter | undefined {\\n    return this.store.getters['x/facets/facets'][facetId]?.filters?.[0];\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;AAWA;;;;;;;IAOE,yCAA6B,KAA6B;QAA7B,UAAK,GAAL,KAAK,CAAwB;KAAI;IAEvD,uCAAO,GAAd,UAAe,MAAc;QAC3B,OAAO,2BAA2B,CAAC,MAAM,CAAC,CAAC;KAC5C;;;;;;;;IASD,kDAAQ,GAAR,UAAS,MAAiC;QACxC,IAAM,SAAS,yBACV,MAAM,KACT,QAAQ,EAAE,KAAK,EACf,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAChC,CAAC;QACF,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;QACnD,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;KAC9E;;;;;;;;;IAUD,gDAAM,GAAN,UAAO,MAAiC;QACtC,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oBAAoB,wBACjC,MAAM,KACT,EAAE,EAAE,WAAW,EACf,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACjC,CAAC;QACH,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;KAC9E;;;;;;;;IASS,wDAAc,GAAxB,UAAyB,MAAiC;QACxD,OAAU,MAAM,CAAC,OAAO,SAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,SAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAG,CAAC;KACpF;;;;;;;;IASS,oDAAU,GAApB,UAAqB,MAAiC;QACpD,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC;KAC/D;;;;;;;IAQS,8DAAoB,GAA9B,UAA+B,OAAoB;QACjD,IAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC;SAC5D;KACF;;;;;;;;IASS,0DAAgB,GAA1B,UAA2B,OAAoB;;QAC7C,OAAO,MAAA,MAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,0CAAE,OAAO,0CAAG,CAAC,CAAC,CAAC;KACrE;IACH,sCAAC;AAAD,CAAC;;;;\"}")}}]);