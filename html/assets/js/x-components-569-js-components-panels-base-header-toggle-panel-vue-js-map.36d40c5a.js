(window.webpackJsonp=window.webpackJsonp||[]).push([[894],{1174:function(e,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"base-header-toggle-panel.vue.js","sources":["../../../../src/components/panels/base-header-toggle-panel.vue"],"sourcesContent":["<template>\\n  <div class=\\"x-header-toggle-panel\\">\\n    \x3c!-- @slot (Required) Slot that is be used for replacing the whole header. --\x3e\\n    <slot name=\\"header\\" v-bind=\\"{ toggleOpen, open }\\">\\n      \x3c!-- header-toggle-panel__header --\x3e\\n      <button\\n        @click=\\"toggleOpen\\"\\n        class=\\"x-header-toggle-panel__header\\"\\n        data-test=\\"toggle-panel-header\\"\\n      >\\n        \x3c!-- @slot (Required) Slot used to just pass the content. --\x3e\\n        <slot name=\\"header-content\\" v-bind=\\"{ open }\\"></slot>\\n      </button>\\n    </slot>\\n\\n    <BaseTogglePanel :open=\\"open\\" :animation=\\"animation\\">\\n      \x3c!-- @slot (Required) Default content. --\x3e\\n      <slot />\\n    </BaseTogglePanel>\\n  </div>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import Vue from \'vue\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import { NoElement } from \'../no-element\';\\n  import BaseTogglePanel from \'./base-toggle-panel.vue\';\\n\\n  /**\\n   * Toggle panel which uses the base toggle panel, adds a header and manage the\\n   * open / close state of the panel.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    components: { BaseTogglePanel }\\n  })\\n  export default class BaseHeaderTogglePanel extends Vue {\\n    /**\\n     * Animation component that will be used to animate the base-toggle-panel.\\n     *\\n     * @public\\n     */\\n    @Prop({ default: () => NoElement })\\n    protected animation!: Vue | string;\\n\\n    /**\\n     * Handles if the panel is open by default.\\n     *\\n     * @public\\n     */\\n    @Prop({ default: false })\\n    protected startCollapsed!: boolean;\\n\\n    /**\\n     * Handles if the base panel is open or closed.\\n     *\\n     * @internal\\n     */\\n    protected open = !this.startCollapsed;\\n\\n    /**\\n     * Toggles the open property.\\n     *\\n     * @internal\\n     */\\n    protected toggleOpen(): void {\\n      this.open = !this.open;\\n      this.emitOpenStatusEvent();\\n    }\\n\\n    /**\\n     * Emits open status event.\\n     *\\n     * @internal\\n     */\\n    protected emitOpenStatusEvent(): void {\\n      this.$emit(this.open ? \'open\' : \'close\');\\n    }\\n  }\\n<\/script>\\n\\n<style lang=\\"scss\\" scoped>\\n  .x-header-toggle-panel__header {\\n    cursor: pointer;\\n  }\\n</style>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\nToggle panel which uses the base toggle panel, adds a header and manage the open / close state of\\nthe panel.\\n\\n### Basic usage\\n\\n```vue\\n<BaseHeaderTogglePanel :animation=\\"collapseHeight\\" :start-collapsed=\\"false\\">\\n  <template #header-content=\\"{ open }\\">\\n    <p>Header, open: {{ open ? \'close\' : \'open\' }}</p>\\n  </template>\\n  <template>\\n    <p>Default content</p>\\n  </template>\\n</BaseHeaderTogglePanel>\\n```\\n\\n### Custom header\\n\\n```vue\\n<BaseHeaderTogglePanel :animation=\\"collapseHeight\\" :start-collapsed=\\"true\\">\\n  <template #header=\\"{ toggleOpen, open }\\">\\n    <p>Header, open: {{ open ? \'close\' : \'open\' }}</p>\\n    <button @click=\\"toggleOpen\\">Toggle</button>\\n  </template>\\n  <template>\\n    <p>Default content</p>\\n  </template>\\n</BaseHeaderTogglePanel>\\n```\\n\\n## Events\\n\\nA list of events that the component will emit:\\n\\n- `open`: the event is emitted after the user clicks the element and opens it.\\n- `close`: the event is emitted after the user clicks the element and closes it.\\n</docs>\\n"],"names":["const"],"mappings":";;;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);