(window.webpackJsonp=window.webpackJsonp||[]).push([[988],{1259:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"empathize.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../../src/x-modules/empathize/components/empathize.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nimport Vue from 'vue';\\nimport Component from 'vue-class-component';\\nimport { Prop } from 'vue-property-decorator';\\nimport { XOn } from '../../../components/decorators/bus.decorators';\\nimport { Debounce } from '../../../components/decorators/debounce.decorators';\\nimport { NoElement } from '../../../components/no-element';\\nimport { xComponentMixin } from '../../../components/x-component.mixin';\\nimport { WireMetadata, XEvent } from '../../../wiring';\\nimport { empathizeXModule } from '../x-module';\\n\\n/**\\n * Component containing the empathize. It has a required slot to define its content and two props\\n * to define when to open and close it: eventsToOpenEmpathize and eventsToCloseEmpathize.\\n *\\n * @public\\n */\\n@Component({\\n  mixins: [xComponentMixin(empathizeXModule)]\\n})\\nexport default class Empathize extends Vue {\\n  /**\\n   * Animation component that will be used to animate the empathize.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: () => NoElement })\\n  protected animation!: Vue;\\n\\n  /**\\n   * Array of {@link XEvent | xEvents} to open the empathize.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: () => ['UserFocusedSearchBox', 'UserIsTypingAQuery', 'UserClickedSearchBox'] })\\n  protected eventsToOpenEmpathize!: XEvent[];\\n\\n  /**\\n   * Array of {@link XEvent | xEvents} to close the empathize.\\n   *\\n   * @public\\n   */\\n  @Prop({\\n    default: () => [\\n      'UserClosedEmpathize',\\n      'UserSelectedASuggestion',\\n      'UserPressedEnter',\\n      'UserBlurredSearchBox'\\n    ]\\n  })\\n  protected eventsToCloseEmpathize!: XEvent[];\\n\\n  /**\\n   * The modal container is open.\\n   *\\n   * @internal\\n   */\\n  protected isOpen = false;\\n\\n  /**\\n   * Open empathize. This method will be executed on any event in\\n   * {@link Empathize.eventsToOpenEmpathize} and on DOM event `focusin` on Empathize root element.\\n   *\\n   * @param payload - The payload of the {@link XEvent}, that is unused in this case.\\n   * @param metadata - The {@link WireMetadata} of the event, used to emit the Empathize XEvents.\\n   *\\n   * @internal\\n   */\\n  @XOn(component => (component as Empathize).eventsToOpenEmpathize)\\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars-experimental\\n  open(payload: unknown, metadata: WireMetadata): void {\\n    this.changeOpenState(true, metadata);\\n  }\\n\\n  /**\\n   * Close empathize. This method will be executed on any event in\\n   * {@link Empathize.eventsToCloseEmpathize} and on DOM event `focusout` on Empathize root\\n   * element.\\n   *\\n   * @param payload - The payload of the {@link XEvent}, that is unused in this case.\\n   * @param metadata - The {@link WireMetadata} of the event, used to emit the Empathize XEvents.\\n   *\\n   * @internal\\n   */\\n  @XOn(component => (component as Empathize).eventsToCloseEmpathize)\\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars-experimental\\n  close(payload: unknown, metadata: WireMetadata): void {\\n    this.changeOpenState(false, metadata);\\n  }\\n\\n  /**\\n   * Changes the state of {@link Empathize.isOpen} assigning to it the value of `newOpenState`\\n   * parameter. Also emits the {@link XEvent | XEvents} `EmpathizeOpened` or `EmpathizeClosed` if\\n   * the state really changes.\\n   *\\n   * @param newOpenState - The new state to assign to {@link Empathize.isOpen}.\\n   * @param metadata - The {@link WireMetadata} to emit the {@link XEvent | XEvents}. If is\\n   * undefined, a this component is used as source of info for the metadata.\\n   *\\n   * @internal\\n   */\\n  @Debounce(0)\\n  changeOpenState(newOpenState: boolean, metadata: WireMetadata): void {\\n    if (this.isOpen !== newOpenState) {\\n      this.isOpen = newOpenState;\\n      this.$x.emit(\\n        this.isOpen ? 'EmpathizeOpened' : 'EmpathizeClosed',\\n        undefined,\\n        metadata ?? { moduleName: 'empathize', target: this.$el }\\n      );\\n    }\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;;;;;AA2BA;;;;;;AASA;IAAuC,6BAAG;IAA1C;QAAA,qEA4FC;;;;;;QAvDW,YAAM,GAAG,KAAK,CAAC;;KAuD1B;;;;;;;;;;;IA1CC,wBAAI,GAAJ,UAAK,OAAgB,EAAE,QAAsB;QAC3C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACtC;;;;;;;;;;;;IAcD,yBAAK,GAAL,UAAM,OAAgB,EAAE,QAAsB;QAC5C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KACvC;;;;;;;;;;;;IAcD,mCAAe,GAAf,UAAgB,YAAqB,EAAE,QAAsB;QAC3D,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;YAChC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;YAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CACV,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAG,iBAAiB,EACnD,SAAS,EACT,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAC1D,CAAC;SACH;KACF;IApFD;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,cAAM,OAAA,SAAS,GAAA,EAAE,CAAC;gDACT;IAQ1B;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,cAAM,OAAA,CAAC,sBAAsB,EAAE,oBAAoB,EAAE,sBAAsB,CAAC,GAAA,EAAE,CAAC;4DACrD;IAe3C;QARC,IAAI,CAAC;YACJ,OAAO,EAAE,cAAM,OAAA;gBACb,qBAAqB;gBACrB,yBAAyB;gBACzB,kBAAkB;gBAClB,sBAAsB;aACvB,GAAA;SACF,CAAC;6DAC0C;IAoB5C;QAFC,GAAG,CAAC,UAAA,SAAS,IAAI,OAAC,SAAuB,CAAC,qBAAqB,GAAA,CAAC;yCAIhE;IAcD;QAFC,GAAG,CAAC,UAAA,SAAS,IAAI,OAAC,SAAuB,CAAC,sBAAsB,GAAA,CAAC;0CAIjE;IAcD;QADC,QAAQ,CAAC,CAAC,CAAC;oDAUX;IA3FkB,SAAS;QAH7B,SAAS,CAAC;YACT,MAAM,EAAE,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;SAC5C,CAAC;OACmB,SAAS,CA4F7B;IAAD,gBAAC;CAAA,CA5FsC,GAAG;;;;\"}")}}]);