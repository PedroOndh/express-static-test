(window.webpackJsonp=window.webpackJsonp||[]).push([[1049],{1314:function(e,t){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"raw-filter.entity.js","sources":["../../../../../src/x-modules/facets/entities/raw-filter.entity.ts"],"sourcesContent":["import { isRawFilter, RawFilter } from \'@empathyco/x-types\';\\nimport { Store } from \'vuex\';\\nimport { FilterEntity } from \'./types\';\\n\\n/**\\n * Allows selecting and deselecting a filter of {@link @empathyco/x-types#RawFilter | RawFilter}.\\n *\\n * @internal\\n */\\nexport class RawFilterEntity implements FilterEntity {\\n  public static accepts = isRawFilter;\\n\\n  public constructor(protected store: Store<unknown>) {}\\n\\n  /**\\n   * It deselects the {@link @empathyco/x-types#RawFilter | RawFilter}.\\n   *\\n   * @param filter - The filter to deselect.\\n   * @remarks As the {@link @empathyco/x-types#RawFilter.selected} is always true,\\n   * the deselection just removes the filter from the store.\\n   */\\n  deselect(filter: RawFilter): void {\\n    this.store.commit(\'x/facets/removeFilter\', filter);\\n  }\\n\\n  /**\\n   * It selects the {@link @empathyco/x-types#RawFilter | RawFilter}.\\n   *\\n   * @param filter - The filter to select.\\n   * @remarks As the {@link @empathyco/x-types#RawFilter.selected} is always true,\\n   * there is no need to set this property.\\n   */\\n  select(filter: RawFilter): void {\\n    this.store.commit(\'x/facets/setFilter\', filter);\\n  }\\n}\\n"],"names":[],"mappings":";;AAIA;;;;;;IAQE,yBAA6B,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;KAAI;;;;;;;;IAStD,kCAAQ,GAAR,UAAS,MAAiB;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;KACpD;;;;;;;;IASD,gCAAM,GAAN,UAAO,MAAiB;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;KACjD;IAxBa,uBAAO,GAAG,WAAW,CAAC;IAyBtC,sBAAC;CA1BD;;;;"}')}}]);