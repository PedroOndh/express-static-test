(window.webpackJsonp=window.webpackJsonp||[]).push([[597],{1379:function(e,A){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"wiring.js\",\"sources\":[\"../../../../src/x-modules/next-queries/wiring.ts\"],\"sourcesContent\":[\"import {\\n  namespacedWireCommit,\\n  namespacedWireDispatch\\n} from '../../wiring/namespaced-wires.factory';\\nimport { NamespacedWireCommit, NamespacedWireDispatch } from '../../wiring/namespaced-wiring.types';\\nimport { createWiring } from '../../wiring/wiring.utils';\\n\\n/**\\n * `nextQueries` {@link XModuleName | XModule name}.\\n *\\n * @internal\\n */\\nconst moduleName = 'nextQueries';\\n/**\\n * WireCommit for {@link NextQueriesXModule}.\\n *\\n * @internal\\n */\\nconst wireCommit: NamespacedWireCommit<typeof moduleName> = namespacedWireCommit(moduleName);\\n/**\\n * WireDispatch for {@link NextQueriesXModule}.\\n *\\n * @internal\\n */\\nconst wireDispatch: NamespacedWireDispatch<typeof moduleName> = namespacedWireDispatch(moduleName);\\n\\n/**\\n * Sets the next queries state `query`.\\n *\\n * @public\\n */\\nexport const setNextQueriesQuery = wireCommit('setQuery');\\n\\n/**\\n * Sets the next queries state `query` from url.\\n *\\n * @public\\n */\\nconst setUrlParams = wireDispatch('setUrlParams');\\n\\n/**\\n * Sets the next queries state `params`.\\n *\\n * @public\\n */\\nexport const setNextQueriesExtraParams = wireCommit('setParams');\\n\\n/**\\n * Requests and stores the next queries.\\n *\\n * @public\\n */\\nexport const fetchAndSaveNextQueriesWire = wireDispatch('fetchAndSaveNextQueries');\\n\\n/**\\n * Sets the next queries state `query` with the last query in history queries.\\n *\\n * @public\\n */\\nexport const setQueryFromLastHistoryQueryWire = wireDispatch('setQueryFromLastHistoryQuery');\\n\\n/**\\n * Sets the next queries state `searchedQueries` with the list of history queries.\\n *\\n * @public\\n */\\nexport const setSearchedQueries = wireCommit('setSearchedQueries');\\n\\n/**\\n * Wiring configuration for the {@link NextQueriesXModule | next queries module}.\\n *\\n * @internal\\n */\\nexport const nextQueriesWiring = createWiring({\\n  UserAcceptedAQuery: {\\n    setNextQueriesQuery\\n  },\\n  SessionHistoryQueriesChanged: {\\n    setSearchedQueries,\\n    // TODO setQueryFromLastHistoryQuery it has to be called only one time\\n    setQueryFromLastHistoryQueryWire\\n  },\\n  NextQueriesRequestChanged: {\\n    fetchAndSaveNextQueriesWire\\n  },\\n  ExtraParamsChanged: {\\n    setNextQueriesExtraParams\\n  },\\n  ParamsLoadedFromUrl: {\\n    setUrlParams\\n  }\\n});\\n\"],\"names\":[],\"mappings\":\";;;AAOA;;;;;AAKA,IAAM,UAAU,GAAG,aAAa,CAAC;AACjC;;;;;AAKA,IAAM,UAAU,GAA4C,oBAAoB,CAAC,UAAU,CAAC,CAAC;AAC7F;;;;;AAKA,IAAM,YAAY,GAA8C,sBAAsB,CAAC,UAAU,CAAC,CAAC;AAEnG;;;;;IAKa,mBAAmB,GAAG,UAAU,CAAC,UAAU,EAAE;AAE1D;;;;;AAKA,IAAM,YAAY,GAAG,YAAY,CAAC,cAAc,CAAC,CAAC;AAElD;;;;;IAKa,yBAAyB,GAAG,UAAU,CAAC,WAAW,EAAE;AAEjE;;;;;IAKa,2BAA2B,GAAG,YAAY,CAAC,yBAAyB,EAAE;AAEnF;;;;;IAKa,gCAAgC,GAAG,YAAY,CAAC,8BAA8B,EAAE;AAE7F;;;;;IAKa,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,EAAE;AAEnE;;;;;IAKa,iBAAiB,GAAG,YAAY,CAAC;IAC5C,kBAAkB,EAAE;QAClB,mBAAmB,qBAAA;KACpB;IACD,4BAA4B,EAAE;QAC5B,kBAAkB,oBAAA;;QAElB,gCAAgC,kCAAA;KACjC;IACD,yBAAyB,EAAE;QACzB,2BAA2B,6BAAA;KAC5B;IACD,kBAAkB,EAAE;QAClB,yBAAyB,2BAAA;KAC1B;IACD,mBAAmB,EAAE;QACnB,YAAY,cAAA;KACb;CACF;;;;\"}")}}]);