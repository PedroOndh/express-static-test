(window.webpackJsonp=window.webpackJsonp||[]).push([[994],{1264:function(e,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"extra-params.vue.js","sources":["../../../../../src/x-modules/extra-params/components/extra-params.vue"],"sourcesContent":["<script lang=\\"ts\\">\\n  import Vue from \'vue\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import { State, xComponentMixin, XEmit } from \'../../../components\';\\n  import { Dictionary } from \'../../../utils\';\\n  import { extraParamsXModule } from \'../x-module\';\\n\\n  /**\\n   * It emits a {@link ExtraParamsXEvents.ExtraParamsProvided} with the values\\n   * received as a prop.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    mixins: [xComponentMixin(extraParamsXModule)]\\n  })\\n  export default class ExtraParams extends Vue {\\n    /**\\n     * Emits the initial extra params, overriding with the state extra params, just in case, those\\n     * values were already set by XComponents initialization (url, plugin config, etc.).\\n     */\\n    mounted(): void {\\n      this.$x.emit(\'ExtraParamsInitialized\', this.values);\\n      this.$x.emit(\'ExtraParamsProvided\', { ...this.values, ...this.storeExtraParams });\\n    }\\n\\n    /**\\n     * (Required) A Dictionary where the keys are the extra param names and its values.\\n     *\\n     * @remarks Emits the {@link ExtraParamsXEvents.ExtraParamsProvided} when the\\n     * component is rendered or the values changed.\\n     *\\n     * @public\\n     */\\n    @XEmit(\'ExtraParamsProvided\', { deep: true })\\n    @Prop({ required: true })\\n    public values!: Dictionary<unknown>;\\n\\n    /**\\n     * State extra params. Used to override the initial extra params.\\n     */\\n    @State(\'extraParams\', \'params\')\\n    public storeExtraParams!: Dictionary<unknown>;\\n\\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\\n    render(): void {}\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Events\\n\\n- [`ExtraParamsProvided`][1]\\n\\n[1](./../../api/x-components.extraparamsxevents.extraparamsprovided.md)\\n\\n## See it in action\\n\\n_See how the event is triggered when the component is rendered._\\n\\n```vue\\n<template>\\n  <ExtraParams :values=\\"values\\" />\\n</template>\\n\\n<script>\\n  import { ExtraParams } from \'@empathyco/x-components/extra-params\';\\n\\n  export default {\\n    name: \'ExtraParamsDemo\',\\n    components: {\\n      ExtraParams\\n    },\\n    data() {\\n      return {\\n        values: {\\n          warehouse: 1234\\n        }\\n      };\\n    }\\n  };\\n<\/script>\\n```\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);