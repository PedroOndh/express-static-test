(window.webpackJsonp=window.webpackJsonp||[]).push([[889],{1170:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"base-id-modal.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../src/components/modals/base-id-modal.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nimport Vue from 'vue';\\nimport { Component, Prop } from 'vue-property-decorator';\\nimport { XOn } from '../decorators/bus.decorators';\\nimport { WireMetadata } from '../../wiring/wiring.types';\\nimport { isElementEqualOrContained } from '../../utils/html';\\nimport BaseModal from './base-modal.vue';\\n\\n/**\\n * Component containing a modal expecting a required prop, named `modalId`. It reacts to\\n * `UserClickedOpenModal`, `UserClickedCloseModal` and `UserClickedOutOfModal` events, when their\\n * payload matches the component's 'modalId' prop, to handle its open/close state. The default\\n * slot offers the possibility to customise the modal content.\\n *\\n * @public\\n */\\n@Component({\\n  components: { BaseModal }\\n})\\nexport default class BaseIdModal extends Vue {\\n  /** Animation to use for opening/closing the modal. */\\n  @Prop()\\n  public animation?: Vue | string;\\n\\n  /** The modalId to use for the open and close event listeners. */\\n  @Prop({ required: true })\\n  public modalId!: string;\\n\\n  /** Whether the modal is open or not. */\\n  protected isOpen = false;\\n\\n  /** The element that opened the modal. */\\n  protected openerElement?: HTMLElement;\\n\\n  /**\\n   * Opens the modal.\\n   *\\n   * @param modalId - The payload of the {@link XEventsTypes.UserClickedOpenModal} event.\\n   * @param metadata - The metadata of the emitted event.\\n   * @public\\n   */\\n  @XOn('UserClickedOpenModal')\\n  openModal(modalId: string, metadata: WireMetadata): void {\\n    if (!this.isOpen && this.modalId === modalId) {\\n      this.openerElement = metadata.target;\\n      this.isOpen = true;\\n    }\\n  }\\n\\n  /**\\n   * Closes the modal.\\n   *\\n   * @param payload - The payload of the closing events:\\n   * {@link XEventsTypes.UserClickedCloseModal} or {@link XEventsTypes.UserClickedOutOfModal}.\\n   *\\n   * @public\\n   */\\n  @XOn(['UserClickedCloseModal', 'UserClickedOutOfModal'])\\n  closeModal(payload: string): void {\\n    if (this.isOpen && this.modalId === payload) {\\n      this.isOpen = false;\\n    }\\n  }\\n\\n  /**\\n   * Emits a {@link XEventsTypes.UserClickedOutOfModal} event unless the passed event target\\n   * is the button that opened the modal.\\n   *\\n   * @param event - The event that triggered the close attempt.\\n   * @public\\n   */\\n  protected emitClickOutOfModal(event: MouseEvent | FocusEvent): void {\\n    // Prevents clicking the open button when the panel is already open to close the panel.\\n    if (\\n      !this.openerElement ||\\n      !isElementEqualOrContained(this.openerElement, event.target as HTMLElement)\\n    ) {\\n      this.$x.emit('UserClickedOutOfModal', this.modalId, { target: this.$el as HTMLElement });\\n    }\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;;AAmBA;;;;;;;;AAWA;IAAyC,+BAAG;IAA5C;QAAA,qEA6DC;;QAnDW,YAAM,GAAG,KAAK,CAAC;;KAmD1B;;;;;;;;IAtCC,+BAAS,GAAT,UAAU,OAAe,EAAE,QAAsB;QAC/C,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC5C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;KACF;;;;;;;;;IAWD,gCAAU,GAAV,UAAW,OAAe;QACxB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC3C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;KACF;;;;;;;;IASS,yCAAmB,GAA7B,UAA8B,KAA8B;;QAE1D,IACE,CAAC,IAAI,CAAC,aAAa;YACnB,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,MAAqB,CAAC,EAC3E;YACA,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,GAAkB,EAAE,CAAC,CAAC;SAC1F;KACF;IAzDD;QADC,IAAI,EAAE;kDACyB;IAIhC;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gDACD;IAgBxB;QADC,GAAG,CAAC,sBAAsB,CAAC;gDAM3B;IAWD;QADC,GAAG,CAAC,CAAC,uBAAuB,EAAE,uBAAuB,CAAC,CAAC;iDAKvD;IA3CkB,WAAW;QAH/B,SAAS,CAAC;YACT,UAAU,EAAE,EAAE,SAAS,WAAA,EAAE;SAC1B,CAAC;OACmB,WAAW,CA6D/B;IAAD,kBAAC;CAAA,CA7DwC,GAAG;;;;\"}")}}]);