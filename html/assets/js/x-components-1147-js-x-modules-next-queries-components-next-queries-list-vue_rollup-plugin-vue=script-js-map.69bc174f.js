(window.webpackJsonp=window.webpackJsonp||[]).push([[583],{1366:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"next-queries-list.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../../src/x-modules/next-queries/components/next-queries-list.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nimport { NextQuery } from '@empathyco/x-types';\\nimport { mixins } from 'vue-class-component';\\nimport { Component, Prop } from 'vue-property-decorator';\\nimport { Getter } from '../../../components/decorators/store.decorators';\\nimport { NoElement } from '../../../components/no-element';\\nimport { ItemsListInjectionMixin } from '../../../components/items-list-injection.mixin';\\nimport ItemsList from '../../../components/items-list.vue';\\nimport { xComponentMixin } from '../../../components/x-component.mixin';\\nimport { groupItemsBy } from '../../../utils/array';\\nimport { ListItem } from '../../../utils/types';\\nimport ResultsList from '../../search/components/results-list.vue';\\nimport { NextQueriesGroup } from '../types';\\nimport { nextQueriesXModule } from '../x-module';\\n\\n/**\\n * Component that inserts groups of next queries in different positions of the injected search\\n * items list, based on the provided configuration.\\n *\\n * @public\\n */\\n@Component({\\n  components: {\\n    ResultsList,\\n    NoElement,\\n    ItemsList\\n  },\\n  mixins: [xComponentMixin(nextQueriesXModule)]\\n})\\nexport default class NextQueriesList extends mixins(ItemsListInjectionMixin) {\\n  /**\\n   * Animation component that will be used to animate the next queries groups.\\n   *\\n   * @public\\n   */\\n  @Prop()\\n  protected animation?: Vue | string;\\n\\n  /**\\n   * The first index to insert a group of next queries at.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: 24 })\\n  public offset!: number;\\n\\n  /**\\n   * The items cycle size to keep inserting next queries groups at.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: 24 })\\n  public frequency!: number;\\n\\n  /**\\n   * The maximum amount of next queries to add in a single group.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: 4 })\\n  public maxNextQueriesPerGroup!: number;\\n\\n  /**\\n   * The maximum number of groups to insert into the injected list items list.\\n   *\\n   * @public\\n   */\\n  @Prop()\\n  public maxGroups!: number;\\n\\n  /**\\n   * The state next queries.\\n   *\\n   * @internal\\n   */\\n  @Getter('nextQueries', 'nextQueries')\\n  public nextQueries!: NextQuery[];\\n\\n  /**\\n   * The grouped next queries based on the given config.\\n   *\\n   * @returns A list of next queries groups.\\n   * @internal\\n   */\\n  protected get nextQueriesGroups(): NextQueriesGroup[] {\\n    return Object.values(\\n      groupItemsBy(this.nextQueries, (_, index) =>\\n        Math.floor(index / this.maxNextQueriesPerGroup)\\n      )\\n    )\\n      .slice(0, this.maxGroups)\\n      .map(nextQueries => ({\\n        modelName: 'NextQueriesGroup' as const,\\n        id: nextQueries.map(nextQuery => nextQuery.query).join(','),\\n        nextQueries\\n      }));\\n  }\\n\\n  /**\\n   * New list of {@link ListItem}s to render.\\n   *\\n   * @returns The new list of {@link ListItem}s with the next queries groups inserted.\\n   * @internal\\n   */\\n  public override get items(): ListItem[] {\\n    if (!this.injectedListItems) {\\n      return this.nextQueriesGroups;\\n    }\\n\\n    return this.nextQueriesGroups.reduce(\\n      (items, nextQueriesGroup, index) => {\\n        const targetIndex = this.offset + this.frequency * index;\\n        if (targetIndex <= items.length) {\\n          items.splice(targetIndex, 0, nextQueriesGroup);\\n        }\\n        return items;\\n      },\\n      [...this.injectedListItems]\\n    );\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;AAiCA;;;;;;AAcA;IAA6C,mCAA+B;IAA5E;;KA2FC;IApCC,sBAAc,8CAAiB;;;;;;;aAA/B;YAAA,iBAYC;YAXC,OAAO,MAAM,CAAC,MAAM,CAClB,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,CAAC,EAAE,KAAK;gBACtC,OAAA,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAI,CAAC,sBAAsB,CAAC;aAAA,CAChD,CACF;iBACE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;iBACxB,GAAG,CAAC,UAAA,WAAW,IAAI,QAAC;gBACnB,SAAS,EAAE,kBAA2B;gBACtC,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,KAAK,GAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC3D,WAAW,aAAA;aACZ,IAAC,CAAC,CAAC;SACP;;;OAAA;IAQD,sBAAoB,kCAAK;;;;;;;aAAzB;YAAA,iBAeC;YAdC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,OAAO,IAAI,CAAC,iBAAiB,CAAC;aAC/B;YAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAClC,UAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK;gBAC7B,IAAM,WAAW,GAAG,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzD,IAAI,WAAW,IAAI,KAAK,CAAC,MAAM,EAAE;oBAC/B,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC;iBAChD;gBACD,OAAO,KAAK,CAAC;aACd,oBACG,IAAI,CAAC,iBAAiB,EAC3B,CAAC;SACH;;;OAAA;IAnFD;QADC,IAAI,EAAE;sDAC4B;IAQnC;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;mDACC;IAQvB;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;sDACI;IAQ1B;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;mEACkB;IAQvC;QADC,IAAI,EAAE;sDACmB;IAQ1B;QADC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC;wDACJ;IA/Cd,eAAe;QARnC,SAAS,CAAC;YACT,UAAU,EAAE;gBACV,WAAW,aAAA;gBACX,SAAS,WAAA;gBACT,SAAS,WAAA;aACV;YACD,MAAM,EAAE,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;SAC9C,CAAC;OACmB,eAAe,CA2FnC;IAAD,sBAAC;CA3FD,CAA6C,MAAM,CAAC,uBAAuB,CAAC;;;;\"}")}}]);