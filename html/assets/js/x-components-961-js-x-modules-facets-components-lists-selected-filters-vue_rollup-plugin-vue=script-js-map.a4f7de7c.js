(window.webpackJsonp=window.webpackJsonp||[]).push([[1038],{1304:function(e,t){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"selected-filters.vue_rollup-plugin-vue=script.js","sources":["../../../../../../src/x-modules/facets/components/lists/selected-filters.vue?rollup-plugin-vue=script.ts"],"sourcesContent":["\\n\\n\\n\\n\\n\\n\\nimport { Facet, Filter } from \'@empathyco/x-types\';\\nimport { Component, Prop, Vue } from \'vue-property-decorator\';\\nimport { Getter } from \'../../../../components/decorators/store.decorators\';\\nimport { NoElement } from \'../../../../components\';\\nimport { xComponentMixin } from \'../../../../components/x-component.mixin\';\\nimport { FiltersByFacet } from \'../../store/types\';\\nimport { facetsXModule } from \'../../x-module\';\\n\\n/**\\n * Provides a scoped slot with the selected filters from every facet, or from the facet which\\n * facet id is passed as property.\\n *\\n * The default slot renders the length of the selected filters array.\\n * The property \\"alwaysVisible\\" handles if the component is rendered if no filters are selected.\\n *\\n * @public\\n */\\n@Component({\\n  mixins: [xComponentMixin(facetsXModule)],\\n  components: {\\n    NoElement\\n  }\\n})\\nexport default class SelectedFilters extends Vue {\\n  /**\\n   * If a facet id is passed as prop, the component filters the selected filters for that facet.\\n   *\\n   * @public\\n   */\\n  @Prop()\\n  protected facetId: Facet[\'id\'] | undefined;\\n\\n  /**\\n   * It handles if the SelectedFilters component is always rendered no matter if no filters are\\n   * selected.\\n   * If true, the SelectedFilters component is always rendered.\\n   * If false, the SelectedFilters component is not rendered whether no filters are selected.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: false })\\n  protected alwaysVisible!: boolean;\\n\\n  /**\\n   * Array of selected filters from every facet.\\n   *\\n   * @public\\n   */\\n  @Getter(\'facets\', \'selectedFilters\')\\n  public selectedFiltersGetter!: Filter[];\\n\\n  /**\\n   * Dictionary of selected filters grouped by facet.\\n   *\\n   * @public\\n   */\\n  @Getter(\'facets\', \'selectedFiltersByFacet\')\\n  public selectedFiltersByFacet!: FiltersByFacet;\\n\\n  /**\\n   * It returns an array of selected filters. If a facet id is passed as prop to the component,\\n   * only the selected filters of that facet are returned. If not, it returns selected filters of\\n   * every facet.\\n   *\\n   * @returns Array of selected filters.\\n   *\\n   * @internal\\n   */\\n  protected get selectedFilters(): Filter[] {\\n    return this.facetId === undefined\\n      ? this.selectedFiltersGetter\\n      : this.selectedFiltersByFacet[this.facetId] ?? [];\\n  }\\n\\n  /**\\n   * If \\"alwaysVisible\\" prop is true, returns true.\\n   * If \\"alwaysVisible\\" prop is false, returns true or false depending on if there are some\\n   * filter selected.\\n   *\\n   * @returns True if \\"alwaysVisible\\" is true. True or false depending on if there are some filter\\n   * selected.\\n   *\\n   * @internal\\n   */\\n  protected get show(): boolean {\\n    return this.alwaysVisible || this.selectedFilters.length > 0;\\n  }\\n}\\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA;;;;;;;;;AAeA;IAA6C,mCAAG;IAAhD;;KAgEC;IAnBC,sBAAc,4CAAe;;;;;;;;;;aAA7B;;YACE,OAAO,IAAI,CAAC,OAAO,KAAK,SAAS;kBAC7B,IAAI,CAAC,qBAAqB;kBAC1B,MAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,mCAAI,EAAE,CAAC;SACrD;;;OAAA;IAYD,sBAAc,iCAAI;;;;;;;;;;;aAAlB;YACE,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;SAC9D;;;OAAA;IAxDD;QADC,IAAI,EAAE;oDACoC;IAW3C;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;0DACS;IAQlC;QADC,MAAM,CAAC,QAAQ,EAAE,iBAAiB,CAAC;kEACI;IAQxC;QADC,MAAM,CAAC,QAAQ,EAAE,wBAAwB,CAAC;mEACI;IAlC5B,eAAe;QANnC,SAAS,CAAC;YACT,MAAM,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YACxC,UAAU,EAAE;gBACV,SAAS,WAAA;aACV;SACF,CAAC;OACmB,eAAe,CAgEnC;IAAD,sBAAC;CAAA,CAhE4C,GAAG;;;;"}')}}]);