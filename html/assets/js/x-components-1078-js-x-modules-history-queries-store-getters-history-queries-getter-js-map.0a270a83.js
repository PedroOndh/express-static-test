(window.webpackJsonp=window.webpackJsonp||[]).push([[558],{1343:function(e,A){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"history-queries.getter.js","sources":["../../../../../../src/x-modules/history-queries/store/getters/history-queries.getter.ts"],"sourcesContent":["import { HistoryQuery } from \'@empathyco/x-types\';\\nimport { GettersClass } from \'../../../../store/getters.types\';\\nimport { normalizeString } from \'../../../../utils/normalize\';\\nimport { HistoryQueriesState, HistoryQueriesXStoreModule } from \'../types\';\\n\\n/**\\n * Class implementation for the {@link HistoryQueriesGetters.historyQueries} getter.\\n *\\n * @public\\n */\\nexport class HistoryQueriesGetter implements GettersClass<HistoryQueriesXStoreModule> {\\n  /**\\n   * Default implementation for the {@link HistoryQueriesGetters.historyQueries} getter.\\n   *\\n   * @param state - Current {@link https://vuex.vuejs.org/guide/state.html | state} of the history\\n   * queries module.\\n   * @returns The filtered subset of queries, matching with the current query.\\n   */\\n  historyQueries({ query, historyQueries, config }: HistoryQueriesState): HistoryQuery[] {\\n    return query\\n      ? historyQueries.filter(\\n          this.searchInHistoryQueries(normalizeString(query), config.hideIfEqualsQuery)\\n        )\\n      : historyQueries;\\n  }\\n\\n  /**\\n   * Creates a function for searching in the history queries array the items that match the current\\n   * query.\\n   *\\n   * @param normalizedQuery - The normalized query for search into the array.\\n   * @param hideIfEqualsQuery - If `true`, removes items that are exactly like the current query.\\n   * @returns A filter function for searching into the array of history queries with the provided\\n   * params.\\n   * @internal\\n   */\\n  protected searchInHistoryQueries(\\n    normalizedQuery: string,\\n    hideIfEqualsQuery: boolean\\n  ): (historyQuery: HistoryQuery) => boolean {\\n    return (historyQuery: HistoryQuery) => {\\n      const normalizedHistoryQuery = normalizeString(historyQuery.query);\\n      const matchesQuery = normalizedHistoryQuery.includes(normalizedQuery);\\n      return hideIfEqualsQuery\\n        ? matchesQuery && normalizedHistoryQuery !== normalizedQuery\\n        : matchesQuery;\\n    };\\n  }\\n}\\n\\nconst historyQueriesGetter = new HistoryQueriesGetter();\\n\\n// eslint-disable-next-line jsdoc/require-description-complete-sentence\\n/**\\n * {@inheritDoc HistoryQueriesGetter.historyQueries}\\n *\\n * @public\\n */\\nexport const historyQueries = historyQueriesGetter.historyQueries.bind(historyQueriesGetter);\\n"],"names":[],"mappings":";;AAKA;;;;;;IAKA;KAsCC;;;;;;;;IA9BC,6CAAc,GAAd,UAAe,EAAsD;YAApD,KAAK,WAAA,EAAE,cAAc,oBAAA,EAAE,MAAM,YAAA;QAC5C,OAAO,KAAK;cACR,cAAc,CAAC,MAAM,CACnB,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAC9E;cACD,cAAc,CAAC;KACpB;;;;;;;;;;;IAYS,qDAAsB,GAAhC,UACE,eAAuB,EACvB,iBAA0B;QAE1B,OAAO,UAAC,YAA0B;YAChC,IAAM,sBAAsB,GAAG,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACnE,IAAM,YAAY,GAAG,sBAAsB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YACtE,OAAO,iBAAiB;kBACpB,YAAY,IAAI,sBAAsB,KAAK,eAAe;kBAC1D,YAAY,CAAC;SAClB,CAAC;KACH;IACH,2BAAC;AAAD,CAAC,IAAA;AAED,IAAM,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAExD;AACA;;;;;IAKa,cAAc,GAAG,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB;;;;"}')}}]);