(window.webpackJsonp=window.webpackJsonp||[]).push([[913],{1191:function(e,A){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"base-result-link.vue_rollup-plugin-vue=script.js","sources":["../../../../src/components/result/base-result-link.vue?rollup-plugin-vue=script.ts"],"sourcesContent":["\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nimport { Result } from \'@empathyco/x-types\';\\nimport Vue from \'vue\';\\nimport { Component, Inject, Prop } from \'vue-property-decorator\';\\nimport { PropsWithType } from \'../../utils/types\';\\nimport { XEventsTypes } from \'../../wiring/events.types\';\\n\\n/**\\n * Component to be reused that renders an `<a>` wrapping the result contents.\\n *\\n * @remarks\\n * It has the logic to emit {@link XEventsTypes.UserClickedAResult} to the bus on click mouse\\n * events. Additionally, this component may be injected other events to be emitted on click\\n * event, so, depending where it\'s used its father component may provide this events.\\n *\\n * @public\\n */\\n@Component\\nexport default class BaseResultLink extends Vue {\\n  /**\\n   * The rendered DOM element.\\n   *\\n   * @internal\\n   */\\n  public $el!: HTMLElement;\\n  /**\\n   * The list of additional events to be emitted by the component when user clicks the link.\\n   *\\n   * @internal\\n   */\\n  @Inject({ from: \'resultClickExtraEvents\', default: [] })\\n  protected resultClickExtraEvents!: PropsWithType<XEventsTypes, Result>[];\\n\\n  /**\\n   * (Required) The {@link @empathyco/x-types#Result | result} information.\\n   *\\n   * @public\\n   */\\n  @Prop({ required: true })\\n  protected result!: Result;\\n\\n  /**\\n   * Emits the {@link XEventsTypes.UserClickedAResult} when user clicks on the result, and also\\n   * additional events if have been injected in the component.\\n   *\\n   * @internal\\n   */\\n  protected emitUserClickedAResult(): void {\\n    this.$x.emit(\'UserClickedAResult\', this.result, { target: this.$el });\\n    this.resultClickExtraEvents.forEach(event => {\\n      this.$x.emit(event, this.result, { target: this.$el });\\n    });\\n  }\\n}\\n"],"names":[],"mappings":";;;;AAwBA;;;;;;;;;;AAWA;IAA4C,kCAAG;IAA/C;;KAmCC;;;;;;;IANW,+CAAsB,GAAhC;QAAA,iBAKC;QAJC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,UAAA,KAAK;YACvC,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SACxD,CAAC,CAAC;KACJ;IArBD;QADC,MAAM,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;kEACiB;IAQzE;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;kDACC;IArBP,cAAc;QADlC,SAAS;OACW,cAAc,CAmClC;IAAD,qBAAC;CAAA,CAnC2C,GAAG;;;;"}')}}]);