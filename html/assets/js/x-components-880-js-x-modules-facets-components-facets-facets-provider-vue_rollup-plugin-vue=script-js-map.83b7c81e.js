(window.webpackJsonp=window.webpackJsonp||[]).push([[1008],{1277:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"facets-provider.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../../../src/x-modules/facets/components/facets/facets-provider.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\nimport { Facet, Filter } from '@empathyco/x-types';\\nimport Vue from 'vue';\\nimport { Component, Prop, Watch } from 'vue-property-decorator';\\nimport { XOn } from '../../../../components';\\nimport { xComponentMixin } from '../../../../components/x-component.mixin';\\nimport { areFiltersDifferent } from '../../../../utils/filters';\\nimport { FacetsGroup } from '../../service/types';\\nimport { GroupId } from '../../store/types';\\nimport { facetsXModule } from '../../x-module';\\n\\n/**\\n * This component allows to provide facets by prop, to add them to the state of the\\n * `Facets X-Module`. These facets will be added to the `Facets X-Module` state together with\\n * the facets emitted by the `Search X-Module` through the {@link SearchXEvents.FacetsChanged}\\n * event.\\n *\\n * @public\\n */\\n@Component({\\n  mixins: [xComponentMixin(facetsXModule)]\\n})\\nexport default class FacetsProvider extends Vue {\\n  /**\\n   * An facet group identifier to distinguish the provided facets from other facets like the\\n   * `Search X-Module` facets.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: 'provided-facets' })\\n  public groupId!: GroupId;\\n\\n  /**\\n   * The facets to provide to the `Facets X-Module` state. They have to include the\\n   * {@link @empathyco/x-types#Filter | filters}.\\n   *\\n   * @internal\\n   */\\n  @Prop({ required: true })\\n  public facets!: Facet[];\\n\\n  /**\\n   * Temporarily stores the selected filters from the {@link FacetsProvider.facets} prop.\\n   * This is necessary to handle the {@link FacetsXEvents.UserChangedSelectedFilters} event.\\n   *\\n   * @internal\\n   */\\n  protected selectedFilters: Filter[] | null = null;\\n\\n  /**\\n   * A computed property to group the facets and the groupId. This is used by the watcher.\\n   *\\n   * @returns The FacetGroup with the facets and the group id.\\n   *\\n   * @internal\\n   */\\n  protected get facetsGroup(): FacetsGroup {\\n    return { id: this.groupId, facets: this.facets };\\n  }\\n\\n  /**\\n   * Emits the {@link FacetsXEvents.UserChangedSelectedFilters} event when the user changes\\n   * the selected filters.\\n   *\\n   * @param selectedFilters - The new list of selected filters.\\n   * @internal\\n   */\\n  @XOn('SelectedFiltersChanged')\\n  emitSelectedFiltersChanged(selectedFilters: Filter[]): void {\\n    if (\\n      this.selectedFilters === null ||\\n      areFiltersDifferent(this.selectedFilters, selectedFilters)\\n    ) {\\n      this.$x.emit('UserChangedSelectedFilters', selectedFilters);\\n    }\\n    this.selectedFilters = null;\\n  }\\n\\n  /**\\n   * Emits the {@link FacetsXEvents.FacetsGroupProvided} event with the\\n   * {@link FacetsProvider.facetsGroup} as payload. It also extracts and saves the selected\\n   * filters.\\n   */\\n  @Watch('facetsGroup', { immediate: true })\\n  provideFacets(): void {\\n    if (this.facetsGroup.facets) {\\n      this.$x.emit('FacetsGroupProvided', this.facetsGroup);\\n      this.extractSelectedFilters(this.facets);\\n    }\\n  }\\n\\n  /**\\n   * Extracts the selected filters from the facets and stores them in the\\n   * {@link FacetsProvider.selectedFilters} property.\\n   *\\n   * @param facets - The facets from whom extract the selected filters.\\n   * @internal\\n   */\\n  protected extractSelectedFilters(facets: Facet[]): void {\\n    this.selectedFilters = facets\\n      .flatMap(facet => facet.filters)\\n      .filter(filter => filter.selected);\\n  }\\n\\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\\n  render(): void {}\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;;;;;;;AAWA;IAA4C,kCAAG;IAA/C;QAAA,qEAoFC;;;;;;;QA3DW,qBAAe,GAAoB,IAAI,CAAC;;KA2DnD;IAlDC,sBAAc,uCAAW;;;;;;;;aAAzB;YACE,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;SAClD;;;OAAA;;;;;;;;IAUD,mDAA0B,GAA1B,UAA2B,eAAyB;QAClD,IACE,IAAI,CAAC,eAAe,KAAK,IAAI;YAC7B,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,eAAe,CAAC,EAC1D;YACA,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,4BAA4B,EAAE,eAAe,CAAC,CAAC;SAC7D;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC7B;;;;;;IAQD,sCAAa,GAAb;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1C;KACF;;;;;;;;IASS,+CAAsB,GAAhC,UAAiC,MAAe;QAC9C,IAAI,CAAC,eAAe,GAAG,MAAM;aAC1B,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,OAAO,GAAA,CAAC;aAC/B,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,QAAQ,GAAA,CAAC,CAAC;KACtC;;IAGD,+BAAM,GAAN,eAAiB;IA3EjB;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC;mDACZ;IASzB;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;kDACD;IA6BxB;QADC,GAAG,CAAC,wBAAwB,CAAC;oEAS7B;IAQD;QADC,KAAK,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;uDAMzC;IAnEkB,cAAc;QAHlC,SAAS,CAAC;YACT,MAAM,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SACzC,CAAC;OACmB,cAAc,CAoFlC;IAAD,qBAAC;CAAA,CApF2C,GAAG;;;;\"}")}}]);