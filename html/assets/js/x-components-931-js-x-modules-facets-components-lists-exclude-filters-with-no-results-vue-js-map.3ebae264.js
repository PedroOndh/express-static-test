(window.webpackJsonp=window.webpackJsonp||[]).push([[1027],{1294:function(e,t){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"exclude-filters-with-no-results.vue.js\",\"sources\":[\"../../../../../../src/x-modules/facets/components/lists/exclude-filters-with-no-results.vue\"],\"sourcesContent\":[\"<script lang=\\\"ts\\\">\\n  import { Filter, isBooleanFilter } from '@empathyco/x-types';\\n  import { CreateElement, VNode } from 'vue';\\n  import { mixins } from 'vue-class-component';\\n  import { Component } from 'vue-property-decorator';\\n  import { xComponentMixin, XProvide } from '../../../../components';\\n  import { facetsXModule } from '../../x-module';\\n  import FiltersInjectionMixin from './filters-injection.mixin';\\n\\n  /**\\n   * The `ExcludeFiltersWithNoResults` component filters the provided list of filters, excluding\\n   * those which have the `totalResults` property exactly equal to `0`. It won't remove filters with\\n   * no `totalResults` property.\\n   *\\n   * The new list of filters is bound to the default scoped slot. As this component does not render\\n   * no root element, this default slot must contain a single root node.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    mixins: [xComponentMixin(facetsXModule)]\\n  })\\n  export default class ExcludeFiltersWithNoResults extends mixins(FiltersInjectionMixin) {\\n    /**\\n     * Removes the filters that have exactly 0 results associated.\\n     *\\n     * @returns A sublist of the filters prop, excluding the ones with no results.\\n     * @internal\\n     */\\n    @XProvide('filters')\\n    public get filtersWithResults(): Filter[] {\\n      return this.renderedFilters.filter(\\n        filter => !isBooleanFilter(filter) || filter.totalResults !== 0\\n      );\\n    }\\n\\n    render(h: CreateElement): VNode {\\n      return this.$scopedSlots.default?.({ filters: this.filtersWithResults })?.[0] ?? h();\\n    }\\n  }\\n<\/script>\\n\\n<docs lang=\\\"mdx\\\">\\n## Example\\n\\nThe `ExcludeFiltersWithNoResults` component filters the provided list of filter, excluding those\\nwhich have the `totalResults` property exactly equal to `0`. It won't remove filters with no\\n`totalResults` property.\\n\\nThe new list of filters is bound to the default scoped slot. As this component does not render no\\nroot element, this default slot must contain a single root node.\\n\\n### Important\\n\\nThe component has two ways of receive the filters list, it can be injected by another component or\\nbe send it as a prop. If the component doesnt have a parent component that receive and exposed a\\nfilters list to their children, it is mandatory to send it as prop.\\n\\n### Basic Usage\\n\\n```vue\\n<template>\\n  <ExcludeFiltersWithNoResults v-slot=\\\"{ filters }\\\" :filters=\\\"filters\\\">\\n    <div>\\n      <span v-for=\\\"filter in filters\\\" :key=\\\"filter.id\\\">{{ filter.label }}</span>\\n    </div>\\n  </ExcludeFiltersWithNoResults>\\n</template>\\n\\n<script>\\n  import { ExcludeFiltersWithNoResults } from '@empathyco/x-components/facets';\\n\\n  export default {\\n    components: {\\n      ExcludeFiltersWithNoResults\\n    },\\n    data() {\\n      return {\\n        filters: [\\n          {\\n            // This is the only filter that will be removed.\\n            facetId: 'category',\\n            id: 'category:men',\\n            modelName: 'SimpleFilter',\\n            selected: false,\\n            label: 'Men',\\n            totalResults: 0\\n          },\\n          {\\n            facetId: 'category',\\n            id: 'category:women',\\n            modelName: 'SimpleFilter',\\n            selected: false,\\n            label: 'Women',\\n            totalResults: 10\\n          },\\n          {\\n            facetId: 'category',\\n            id: 'category:kids',\\n            modelName: 'SimpleFilter',\\n            selected: false,\\n            label: 'Kids',\\n            totalResults: undefined\\n          }\\n        ]\\n      };\\n    }\\n  };\\n<\/script>\\n```\\n\\n> **Using injection**: It can receive the filters list by injection. It only works if it has a\\n> parent component that receives and exposes the filters list. Using the injection, It is not\\n> necessary to send the prop to the child components, it has to be send it in the parent component,\\n> the rest of components will inject this list.\\n\\n```vue\\n<template>\\n  <ExcludeFiltersWithNoResults :filters=\\\"filters\\\">\\n    <FiltersSearch>\\n      <Filters v-slot=\\\"{ filter }\\\">\\n        <SimpleFilter :filter=\\\"filter\\\" data-test=\\\"brand-filter\\\" />\\n      </Filters>\\n    </FiltersSearch>\\n  </ExcludeFiltersWithNoResults>\\n</template>\\n\\n<script>\\n  import {\\n    ExcludeFiltersWithNoResults,\\n    FiltersSearch,\\n    Filters,\\n    SimpleFilter\\n  } from '@empathyco/x-components/facets';\\n\\n  export default {\\n    components: {\\n      ExcludeFiltersWithNoResults,\\n      FiltersSearch,\\n      Filters,\\n      SimpleFilter\\n    },\\n    data() {\\n      return {\\n        filters: [\\n          {\\n            // This is the only filter that will be removed.\\n            facetId: 'category',\\n            id: 'category:men',\\n            modelName: 'SimpleFilter',\\n            selected: false,\\n            label: 'Men',\\n            totalResults: 0\\n          },\\n          {\\n            facetId: 'category',\\n            id: 'category:women',\\n            modelName: 'SimpleFilter',\\n            selected: false,\\n            label: 'Women',\\n            totalResults: 10\\n          },\\n          {\\n            facetId: 'category',\\n            id: 'category:kids',\\n            modelName: 'SimpleFilter',\\n            selected: false,\\n            label: 'Kids',\\n            totalResults: undefined\\n          }\\n        ]\\n      };\\n    }\\n  };\\n<\/script>\\n```\\n</docs>\\n\"],\"names\":[\"const\"],\"mappings\":\";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\"}")}}]);