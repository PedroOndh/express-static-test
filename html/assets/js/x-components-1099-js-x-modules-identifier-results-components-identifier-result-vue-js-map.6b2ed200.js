(window.webpackJsonp=window.webpackJsonp||[]).push([[565],{1350:function(e,t){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"identifier-result.vue.js","sources":["../../../../../src/x-modules/identifier-results/components/identifier-result.vue"],"sourcesContent":["<template>\\n  <span\\n    v-if=\\"query\\"\\n    v-html=\\"highlightedQueryHTML\\"\\n    class=\\"x-identifier-result\\"\\n    data-test=\\"identifier-result\\"\\n  ></span>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import { Result } from \'@empathyco/x-types\';\\n  import Vue from \'vue\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import { Getter, State } from \'../../../components/decorators/store.decorators\';\\n  import { xComponentMixin } from \'../../../components/x-component.mixin\';\\n  import { identifierResultsXModule } from \'../x-module\';\\n\\n  /**\\n   * This component renders an identifier result value and highlights its matching part with the\\n   * query from the state. Receives as prop the {@link @empathyco/x-types#Result | result data}.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    mixins: [xComponentMixin(identifierResultsXModule)]\\n  })\\n  export default class IdentifierResult extends Vue {\\n    /**\\n     * (Required) The {@link @empathyco/x-types#Result | result} information.\\n     *\\n     * @public\\n     */\\n    @Prop({ required: true })\\n    protected result!: Result;\\n\\n    /**\\n     * Query from the module state.\\n     *\\n     * @public\\n     */\\n    @State(\'identifierResults\', \'query\')\\n    public query!: string;\\n\\n    /**\\n     * The RegExp with the current query from the state adding the separatorChars after each\\n     * matching character.\\n     *\\n     * @public\\n     */\\n    @Getter(\'identifierResults\', \'identifierHighlightRegexp\')\\n    public identifierHighlightRegexp!: RegExp;\\n\\n    /**\\n     * Highlights the matching part of the identifier result with the query from the state.\\n     *\\n     * @returns String - The identifier result s query with the matching part inside a `<span>` tag.\\n     * @public\\n     */\\n    protected get highlightedQueryHTML(): string {\\n      const identifierValue = this.result.identifier.value;\\n      if (identifierValue && this.identifierHighlightRegexp) {\\n        return identifierValue.replace(\\n          this.identifierHighlightRegexp,\\n          \'<span class=\\"x-identifier-result__matching-part\\">$1</span>\'\\n        );\\n      }\\n      return identifierValue;\\n    }\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\nThis component renders an identifier result value and highlights its matching part with the query\\nfrom the state. Receives as prop the result data\\n\\n### Basic usage:\\n\\n```vue\\n<IdentifierResult v-bind=\\"{ result }\\" />\\n```\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);