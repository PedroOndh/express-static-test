(window.webpackJsonp=window.webpackJsonp||[]).push([[999],{1269:function(A,n){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"snippet-config-extra-params.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../../src/x-modules/extra-params/components/snippet-config-extra-params.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\nimport Vue from 'vue';\\nimport { Component, Watch, Inject } from 'vue-property-decorator';\\nimport { xComponentMixin } from '../../../components';\\nimport { Dictionary, forEach } from '../../../utils';\\nimport { SnippetConfig } from '../../../x-installer';\\nimport { extraParamsXModule } from '../x-module';\\nimport ExtraParams from './extra-params.vue';\\n\\n/**\\n * Extracts the extra parameters from the {@link SnippetConfig} and syncs it with the request\\n * objects of every x-module.\\n *\\n * @public\\n */\\n@Component({\\n  components: { ExtraParams },\\n  mixins: [xComponentMixin(extraParamsXModule)]\\n})\\nexport default class SnippetConfigExtraParams extends Vue {\\n  /**\\n   * It injects {@link SnippetConfig} provided by an ancestor as snippetConfig.\\n   *\\n   * @internal\\n   */\\n  @Inject('snippetConfig')\\n  public snippetConfig!: SnippetConfig;\\n\\n  /**\\n   * Custom object containing the extra params from the snippet config.\\n   *\\n   * @remarks This object keeps manually the desired snippet config properties to avoid\\n   * unnecessary re-renders.\\n   *\\n   * @internal\\n   */\\n  protected extraParams: Dictionary<unknown> = {};\\n\\n  /**\\n   * Collection of properties from the snippet config not allowed to be sent as extra params.\\n   *\\n   * @internal\\n   */\\n  protected notAllowedExtraParams: Array<keyof SnippetConfig> = ['callbacks'];\\n\\n  /**\\n   * Updates the extraParams object when the snippet config changes.\\n   *\\n   * @param snippetConfig - The new snippet config.\\n   *\\n   * @internal\\n   */\\n  @Watch('snippetConfig', { deep: true, immediate: true })\\n  syncExtraParams({\\n    instance,\\n    scope,\\n    lang,\\n    searchLang,\\n    consent,\\n    documentDirection,\\n    currency,\\n    ...snippetExtraParams\\n  }: SnippetConfig): void {\\n    forEach(snippetExtraParams, (name, value) => {\\n      if (this.notAllowedExtraParams.includes(name)) {\\n        return;\\n      }\\n      this.$set(this.extraParams, name, value);\\n    });\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA;;;;;;AAUA;IAAsD,4CAAG;IAAzD;QAAA,qEAmDC;;;;;;;;;QAlCW,iBAAW,GAAwB,EAAE,CAAC;;;;;;QAOtC,2BAAqB,GAA+B,CAAC,WAAW,CAAC,CAAC;;KA2B7E;;;;;;;;IAjBC,kDAAe,GAAf,UAAgB,EASA;QAVhB,iBAiBC;QAfC,IAAA,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,UAAU,gBAAA,EACV,OAAO,aAAA,EACP,iBAAiB,uBAAA,EACjB,QAAQ,cAAA,EACL,kBAAkB,cARP,uFASf,CADsB;QAErB,OAAO,CAAC,kBAAkB,EAAE,UAAC,IAAI,EAAE,KAAK;YACtC,IAAI,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC7C,OAAO;aACR;YACD,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC1C,CAAC,CAAC;KACJ;IA3CD;QADC,MAAM,CAAC,eAAe,CAAC;mEACa;IA2BrC;QADC,KAAK,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;mEAiBvD;IAlDkB,wBAAwB;QAJ5C,SAAS,CAAC;YACT,UAAU,EAAE,EAAE,WAAW,aAAA,EAAE;YAC3B,MAAM,EAAE,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;SAC9C,CAAC;OACmB,wBAAwB,CAmD5C;IAAD,+BAAC;CAAA,CAnDqD,GAAG;;;;\"}")}}]);