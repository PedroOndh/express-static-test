(window.webpackJsonp=window.webpackJsonp||[]).push([[540],{1327:function(e,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"clear-history-queries.vue.js","sources":["../../../../../src/x-modules/history-queries/components/clear-history-queries.vue"],"sourcesContent":["<template>\\n  <BaseEventButton\\n    class=\\"x-button x-clear-history-queries\\"\\n    :class=\\"dynamicClasses\\"\\n    :disabled=\\"isHistoryQueriesEmpty\\"\\n    :events=\\"clearHistoryQueriesEvents\\"\\n    data-test=\\"clear-history-queries\\"\\n  >\\n    \x3c!-- @slot (Required) Button content with a message, an icon or both --\x3e\\n    <slot>âœ•</slot>\\n  </BaseEventButton>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import { HistoryQuery } from \'@empathyco/x-types\';\\n  import Vue from \'vue\';\\n  import { Component } from \'vue-property-decorator\';\\n  import { State } from \'../../../components/decorators/store.decorators\';\\n  import BaseEventButton from \'../../../components/base-event-button.vue\';\\n  import { xComponentMixin } from \'../../../components/x-component.mixin\';\\n  import { VueCSSClasses } from \'../../../utils/types\';\\n  import { XEventsTypes } from \'../../../wiring/events.types\';\\n  import { historyQueriesXModule } from \'../x-module\';\\n\\n  /**\\n   * A button that when is pressed, emits the\\n   * {@link HistoryQueriesXEvents.UserPressedClearHistoryQueries} event, expressing the user\\n   * intention to clear the whole history of queries.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    components: { BaseEventButton },\\n    mixins: [xComponentMixin(historyQueriesXModule)]\\n  })\\n  export default class ClearHistoryQueries extends Vue {\\n    /**\\n     * The whole history queries.\\n     *\\n     * @internal\\n     */\\n    @State(\'historyQueries\', \'historyQueries\')\\n    public historyQueries!: HistoryQuery[];\\n\\n    /**\\n     * Returns if the array of history queries is empty.\\n     *\\n     * @returns `true` if the {@link historyQueries} array is empty, `false` otherwise.\\n     * @internal\\n     */\\n    protected get isHistoryQueriesEmpty(): boolean {\\n      return this.historyQueries.length === 0;\\n    }\\n\\n    /**\\n     * Dynamic CSS classes to add to the root element of this component.\\n     *\\n     * @returns A booleans dictionary where each key is the class name to add, and the boolean value\\n     * tells if it should be added or not.\\n     * @internal\\n     */\\n    protected get dynamicClasses(): VueCSSClasses {\\n      return {\\n        \'x-clear-history-queries--is-empty\': this.isHistoryQueriesEmpty\\n      };\\n    }\\n\\n    /**\\n     * The list of events that are going to be emitted when the button is pressed.\\n     *\\n     * @internal\\n     */\\n    protected clearHistoryQueriesEvents: Partial<XEventsTypes> = {\\n      UserPressedClearHistoryQueries: undefined\\n    };\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\n### Basic example\\n\\nThe component exposes a single default slot, where you can add icons or text.\\n\\n```vue\\n<ClearHistoryQueries>\\n  <img class=\\"x-history-query__icon\\" src=\\"./my-icon.svg\\"/>\\n</ClearHistoryQueries>\\n```\\n\\n## Events\\n\\nA list of events that the component will emit:\\n\\n- `UserPressedClearHistoryQueries`: the event is emitted after the user clicks the button.\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);