(window.webpackJsonp=window.webpackJsonp||[]).push([[835],{998:function(e,A){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"animations.mixin.js\",\"sources\":[\"../../../../src/components/animations/animations.mixin.ts\"],\"sourcesContent\":[\"import Vue, { ComponentOptions } from 'vue';\\n\\n/**\\n * Type options for the property that will be animated.\\n */\\ntype AnimatedProperty = 'height' | 'width';\\n\\n/**\\n * Adds parametrized methods to a component to allow the collapsing of the provided property.\\n *\\n * @param property - The property that will be animated.\\n * @returns Mixin for the module.\\n * @public\\n */\\nexport function createCollapseAnimationMixin(property: AnimatedProperty): ComponentOptions<Vue> {\\n  const scrollProperty = property === 'width' ? 'scrollWidth' : 'scrollHeight';\\n\\n  return {\\n    methods: {\\n      /**\\n       * Changes the element's animated property from 0 to the element's content size.\\n       *\\n       * @param element - The DOM element that is going to be animated.\\n       * @internal\\n       */\\n      expand(element: HTMLElement): void {\\n        element.style[property] = '0';\\n        element.style[property] = `${element[scrollProperty]}px`;\\n      },\\n      /**\\n       * Removes the animated property from the element.\\n       *\\n       * @param element - The DOM element that is going to be animated.\\n       * @internal\\n       */\\n      cleanUpAnimationStyles(element: HTMLElement): void {\\n        element.style.removeProperty(property);\\n      },\\n      /**\\n       * Changes the element's animated property from the element's content size to 0.\\n       *\\n       * @param element - The DOM element that is going to be animated.\\n       * @internal\\n       */\\n      collapse(element: HTMLElement): void {\\n        element.style[property] = `${element[scrollProperty]}px`;\\n        // This is intended. We want to provoke a layer repaint to apply this style.\\n        element.getBoundingClientRect();\\n        element.style[property] = '0';\\n      }\\n    }\\n  };\\n}\\n\"],\"names\":[],\"mappings\":\"AAOA;;;;;;;SAOgB,4BAA4B,CAAC,QAA0B;IACrE,IAAM,cAAc,GAAG,QAAQ,KAAK,OAAO,GAAG,aAAa,GAAG,cAAc,CAAC;IAE7E,OAAO;QACL,OAAO,EAAE;;;;;;;YAOP,MAAM,EAAN,UAAO,OAAoB;gBACzB,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;gBAC9B,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAM,OAAO,CAAC,cAAc,CAAC,OAAI,CAAC;aAC1D;;;;;;;YAOD,sBAAsB,EAAtB,UAAuB,OAAoB;gBACzC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;aACxC;;;;;;;YAOD,QAAQ,EAAR,UAAS,OAAoB;gBAC3B,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAM,OAAO,CAAC,cAAc,CAAC,OAAI,CAAC;;gBAEzD,OAAO,CAAC,qBAAqB,EAAE,CAAC;gBAChC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;aAC/B;SACF;KACF,CAAC;AACJ;;;;\"}")}}]);