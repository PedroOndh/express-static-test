(window.webpackJsonp=window.webpackJsonp||[]).push([[750],{1038:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"bus.decorators.js\",\"sources\":[\"../../../../src/components/decorators/bus.decorators.ts\"],\"sourcesContent\":[\"import { Subscription } from 'rxjs';\\nimport { filter } from 'rxjs/operators';\\nimport Vue, { WatchOptions } from 'vue';\\nimport { createDecorator } from 'vue-class-component';\\nimport { clone } from '../../utils/clone';\\nimport { AnyFunction, DecoratorFor } from '../../utils/types';\\nimport { XEvent, XEventPayload } from '../../wiring/events.types';\\nimport { WireMetadata } from '../../wiring/wiring.types';\\n\\n/**\\n * Creates a subscription to an {@link XEvent}, an array of {@link XEvent} or a component property (\\n * reacting to its changes via a watcher) filtering out the passed metadata, if any, and\\n * un-subscribes on the beforeDestroy hook.\\n *\\n * @remarks\\n * The decorated property needs to be public for type inference to work.\\n *\\n * @param xEvent - The {@link XEvent}, an array of {@link XEvent} or a component property.\\n * @param metadataFilteringOptions - The {@link WireMetadata} options to filter out a callback\\n * execution.\\n * @returns Decorator that creates a subscription to an {@link XEvent} and un-subscribes on the\\n * beforeDestroy hook.\\n * @public\\n */\\nexport function XOn<Event extends XEvent>(\\n  xEvent: Event | Event[] | ((component: Vue) => Event | Event[]),\\n  metadataFilteringOptions: Partial<WireMetadata> = {}\\n): DecoratorFor<(payload: XEventPayload<Event>, metadata: WireMetadata) => void> {\\n  return createDecorator((options, key) => {\\n    // eslint-disable-next-line @typescript-eslint/unbound-method\\n    const originalCreated = options.created;\\n    Object.assign(options, {\\n      created(this: Vue) {\\n        originalCreated?.apply(this);\\n        const componentCreateSubscription = createSubscription.bind(this);\\n        const subscriptionMetadata: SubscriptionMetadata<Event> = {\\n          event: [],\\n          callback: (this as any)[key], // `this` isn't correctly typed here\\n          metadataFilteringOptions\\n        };\\n\\n        let subscription: Subscription;\\n        if (typeof xEvent === 'function') {\\n          this.$watch(\\n            () => xEvent(this),\\n            newEvents => {\\n              subscription?.unsubscribe();\\n              subscriptionMetadata.event = newEvents;\\n              subscription = componentCreateSubscription(subscriptionMetadata);\\n            },\\n            { immediate: true }\\n          );\\n        } else {\\n          subscriptionMetadata.event = xEvent;\\n          subscription = componentCreateSubscription(subscriptionMetadata);\\n        }\\n\\n        this.$on('hook:beforeDestroy', () => subscription.unsubscribe()); // Using Vue\\n        // bus to subscribe to the lifecycle hook 'beforeDestroy' instead of 'capturing' the\\n        // original component's 'beforeDestroy' method to override it plus calling\\n        // originalBeforeDestroy.apply(this) to preserve the existing original hook functionality\\n      }\\n    });\\n  });\\n}\\n\\n/**\\n * Create a subscription for the given events executing the passed callback and filtering out based\\n * on the passed metadata options.\\n *\\n * @param this - The vue component.\\n * @param subscriptionMetadata - The {@link SubscriptionMetadata}.\\n * @returns A\\n * {@link https://www.learnrxjs.io/learn-rxjs/concepts/rxjs-primer#subscription | subscription}.\\n * @internal\\n */\\nfunction createSubscription<Event extends XEvent>(\\n  this: Vue,\\n  subscriptionMetadata: SubscriptionMetadata<Event>\\n): Subscription {\\n  const { event, callback, metadataFilteringOptions } = subscriptionMetadata;\\n  const eventArray = Array.isArray(event) ? event : [event];\\n  const subscription = new Subscription();\\n  eventArray.forEach(xEvent => {\\n    subscription.add(\\n      this.$x\\n        .on(xEvent, true)\\n        .pipe(filter(({ metadata }) => filterMetadataOptions(metadataFilteringOptions, metadata)))\\n        .subscribe(({ eventPayload, metadata }) => callback(eventPayload, metadata))\\n    );\\n  });\\n  return subscription;\\n}\\n\\n/**\\n * Checks if the metadata options passed to the decorator match the metadata of the emitted event.\\n *\\n * @param filteringOptions - The decorator options.\\n * @param eventOptions - The emitted event metadata.\\n * @returns True if options are empty or match the metadata.\\n * @internal\\n */\\nfunction filterMetadataOptions<WireMetadataKey extends keyof WireMetadata>(\\n  filteringOptions: Partial<WireMetadata>,\\n  eventOptions: WireMetadata\\n): boolean {\\n  return (Object.keys(filteringOptions) as WireMetadataKey[])\\n    .filter(key => filteringOptions[key] !== undefined)\\n    .every(key => filteringOptions[key] === eventOptions[key]);\\n}\\n\\n/**\\n * The subscription metadata containing an/a list of {@link XEvent}, the callback function to\\n * execute and the metadataOptions to filter out the execution of the callback.\\n *\\n * @internal\\n */\\ninterface SubscriptionMetadata<Event extends XEvent> {\\n  /**\\n   * An {@link XEvent} or a list of them.\\n   */\\n  event: Event | Event[];\\n  /**\\n   * A callback function to execute in the subscription.\\n   */\\n  callback: AnyFunction;\\n  /**\\n   * The metadataFilteringOptions to filter out the execution of the callback.\\n   */\\n  metadataFilteringOptions: Partial<WireMetadata>;\\n}\\n\\n/**\\n * Emits the provided event whenever the decorated property changes.\\n *\\n * @param xEvent - The event to emit.\\n * @param watcherOptions - Options for Vue's watcher.\\n * @returns Decorator that makes the component emit an event when the decorated property changes.\\n * @public\\n */\\nexport function XEmit<Event extends XEvent>(\\n  xEvent: Event,\\n  { immediate = true, deep = false }: WatchOptions = {}\\n): DecoratorFor<XEventPayload<Event> | undefined> {\\n  return createDecorator((options, key) => {\\n    // eslint-disable-next-line @typescript-eslint/unbound-method\\n    const originalCreated = options.created;\\n    options.created = function (this: Vue) {\\n      originalCreated?.apply(this);\\n      if ((this as any)[key] !== undefined) {\\n        this.$watch(\\n          key,\\n          newValue => {\\n            this.$x.emit(\\n              xEvent,\\n              typeof newValue === 'object' && newValue !== null ? clone(newValue) : newValue\\n            );\\n          },\\n          { immediate, deep }\\n        );\\n      }\\n    };\\n  });\\n}\\n\"],\"names\":[],\"mappings\":\"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\"}")}}]);