(window.webpackJsonp=window.webpackJsonp||[]).push([[971],{1244:function(e,A){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"namespaced-wires.factory.js","sources":["../../../src/wiring/namespaced-wires.factory.ts"],"sourcesContent":["import { XModuleName } from \'../x-modules/x-modules.types\';\\nimport {\\n  NamespacedWireCommit,\\n  NamespacedWireCommitWithoutPayload,\\n  NamespacedWireDispatch,\\n  NamespacedWireDispatchWithoutPayload\\n} from \'./namespaced-wiring.types\';\\nimport {\\n  wireCommit,\\n  wireCommitWithoutPayload,\\n  wireDispatch,\\n  wireDispatchWithoutPayload\\n} from \'./wires.factory\';\\nimport { PayloadFactoryData } from \'./wiring.types\';\\nimport { getStateAndGettersFromModule } from \'./wiring.utils\';\\n\\n/**\\n * Creates a namespaced {@link (wireCommit:1)} for the module name passed.\\n *\\n * @param moduleName - The module name for scoping the {@link (wireCommit:1)}.\\n * @returns A function which creates a namespaced wire for the {@link (wireCommit:1)}.\\n *\\n * @public\\n */\\nexport function namespacedWireCommit<ModuleName extends XModuleName>(\\n  moduleName: ModuleName\\n): NamespacedWireCommit<ModuleName> {\\n  return (mutation: string, payload?: unknown) =>\\n    wireCommit(`x/${moduleName}/${mutation}`, getPayload(moduleName, payload));\\n}\\n\\n/**\\n * Creates a namespaced {@link wireCommitWithoutPayload} for the module name passed.\\n *\\n * @param moduleName - The module name for scoping the {@link wireCommitWithoutPayload}.\\n * @returns A function which creates a namespaced wire for the {@link wireCommitWithoutPayload}.\\n *\\n * @public\\n */\\nexport function namespacedWireCommitWithoutPayload<ModuleName extends XModuleName>(\\n  moduleName: ModuleName\\n): NamespacedWireCommitWithoutPayload<ModuleName> {\\n  return mutation => wireCommitWithoutPayload(`x/${moduleName}/${mutation as string}`);\\n}\\n\\n/**\\n * Creates a namespaced {@link (wireDispatch:1)} for the module name passed.\\n *\\n * @param moduleName - The module name for scoping the {@link (wireDispatch:1)}.\\n * @returns A function which creates a namespaced wire for the {@link (wireDispatch:1)}.\\n *\\n * @public\\n */\\nexport function namespacedWireDispatch<ModuleName extends XModuleName>(\\n  moduleName: ModuleName\\n): NamespacedWireDispatch<ModuleName> {\\n  return (action: string, payload?: unknown) =>\\n    wireDispatch(`x/${moduleName}/${action}`, getPayload(moduleName, payload));\\n}\\n\\n/**\\n * Creates a namespaced {@link wireDispatchWithoutPayload} for the module name passed.\\n *\\n * @param moduleName - The module name for scoping the {@link wireDispatchWithoutPayload}.\\n * @returns A function which creates a namespaced wire for the {@link wireDispatchWithoutPayload}.\\n *\\n * @public\\n */\\nexport function namespacedWireDispatchWithoutPayload<ModuleName extends XModuleName>(\\n  moduleName: ModuleName\\n): NamespacedWireDispatchWithoutPayload<ModuleName> {\\n  return action => wireDispatchWithoutPayload(`x/${moduleName}/${action as string}`);\\n}\\n\\n/**\\n * Decision maker of if the payload is a function which receives the\\n * {@link StoreModuleStateAndGetters | module state and getters}, the payload and the metadata,\\n * returns the payload for or a static value.\\n *\\n * @param moduleName - The {@link XModuleName | module name} for scoping the state and getters.\\n * @param payload - The payload for the wire which can be a retrieving function or a static value.\\n * @returns The function which will retrieve data from the store or the static value.\\n *\\n * @internal\\n */\\nfunction getPayload(moduleName: XModuleName, payload: unknown): unknown {\\n  return typeof payload === \'function\'\\n    ? ({ state, getters, eventPayload, metadata }: PayloadFactoryData<XModuleName>) =>\\n        payload({\\n          ...getStateAndGettersFromModule(state, getters, moduleName),\\n          eventPayload,\\n          metadata\\n        })\\n    : payload;\\n}\\n"],"names":[],"mappings":";;;;AAgBA;;;;;;;;SAQgB,oBAAoB,CAClC,UAAsB;IAEtB,OAAO,UAAC,QAAgB,EAAE,OAAiB;QACzC,OAAA,UAAU,CAAC,OAAK,UAAU,SAAI,QAAU,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAAA,CAAC;AAC/E,CAAC;AAED;;;;;;;;SAQgB,kCAAkC,CAChD,UAAsB;IAEtB,OAAO,UAAA,QAAQ,IAAI,OAAA,wBAAwB,CAAC,OAAK,UAAU,SAAI,QAAoB,CAAC,GAAA,CAAC;AACvF,CAAC;AAED;;;;;;;;SAQgB,sBAAsB,CACpC,UAAsB;IAEtB,OAAO,UAAC,MAAc,EAAE,OAAiB;QACvC,OAAA,YAAY,CAAC,OAAK,UAAU,SAAI,MAAQ,EAAE,UAAU,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAAA,CAAC;AAC/E,CAAC;AAED;;;;;;;;SAQgB,oCAAoC,CAClD,UAAsB;IAEtB,OAAO,UAAA,MAAM,IAAI,OAAA,0BAA0B,CAAC,OAAK,UAAU,SAAI,MAAkB,CAAC,GAAA,CAAC;AACrF,CAAC;AAED;;;;;;;;;;;AAWA,SAAS,UAAU,CAAC,UAAuB,EAAE,OAAgB;IAC3D,OAAO,OAAO,OAAO,KAAK,UAAU;UAChC,UAAC,EAA2E;gBAAzE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAE,YAAY,kBAAA,EAAE,QAAQ,cAAA;YACvC,OAAA,OAAO,uBACF,4BAA4B,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,KAC3D,YAAY,cAAA,EACZ,QAAQ,UAAA,IACR;SAAA;UACJ,OAAO,CAAC;AACd;;;;"}')}}]);