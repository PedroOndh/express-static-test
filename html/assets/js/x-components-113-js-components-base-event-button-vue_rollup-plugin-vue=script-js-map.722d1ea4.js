(window.webpackJsonp=window.webpackJsonp||[]).push([[577],{1022:function(e,A){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"base-event-button.vue_rollup-plugin-vue=script.js","sources":["../../../src/components/base-event-button.vue?rollup-plugin-vue=script.ts"],"sourcesContent":["\\n\\n\\n\\n\\n\\n\\n\\nimport Vue from \'vue\';\\nimport { Component, Prop } from \'vue-property-decorator\';\\nimport { XEvent, XEventsTypes } from \'../wiring\';\\n\\n/**\\n * Component to be reused that renders a `<button>` with the logic of emitting events to the bus\\n * on click. The events are passed as an object to prop {@link XEventsTypes | events}.\\n * The keys are the event name and the values are the payload of each event. All events are\\n * emitted with its respective payload. If any event doesn\'t need payload a `undefined` must be\\n * passed as value.\\n *\\n * @public\\n */\\n@Component\\nexport default class BaseEventButton extends Vue {\\n  /**\\n   * (Required) A object where the keys are the {@link XEvent} and the values\\n   * are the payload of each event.\\n   *\\n   * @public\\n   */\\n  @Prop({ required: true })\\n  protected events!: Partial<XEventsTypes>;\\n\\n  protected emitEvents(): void {\\n    Object.entries(this.events).forEach(([event, payload]) => {\\n      this.$x.emit(event as XEvent, payload, { target: this.$el as HTMLElement });\\n    });\\n  }\\n}\\n"],"names":[],"mappings":";;;;AAYA;;;;;;;;;AAUA;IAA6C,mCAAG;IAAhD;;KAeC;IALW,oCAAU,GAApB;QAAA,iBAIC;QAHC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,EAAgB;gBAAf,KAAK,QAAA,EAAE,OAAO,QAAA;YAClD,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAe,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,GAAkB,EAAE,CAAC,CAAC;SAC7E,CAAC,CAAC;KACJ;IAND;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;mDACgB;IARtB,eAAe;QADnC,SAAS;OACW,eAAe,CAenC;IAAD,sBAAC;CAAA,CAf4C,GAAG;;;;"}')}}]);