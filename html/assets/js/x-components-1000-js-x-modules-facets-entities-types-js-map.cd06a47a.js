(window.webpackJsonp=window.webpackJsonp||[]).push([[529],{1317:function(e,t){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"types.js","sources":["../../../../../src/x-modules/facets/entities/types.ts"],"sourcesContent":["import { Store } from \'vuex\';\\nimport { Filter } from \'@empathyco/x-types\';\\nimport { RootXStoreState } from \'../../../store/store.types\';\\n\\n/**\\n * Contains business logic to select or deselect a filter of a certain type.\\n *\\n * @internal\\n */\\nexport interface FilterEntity {\\n  /** Selects the filter. */\\n  select(filter: Filter): void;\\n  /** Deselects the filter. */\\n  deselect(filter: Filter): void;\\n}\\n\\n/** Constructor of a {@link FilterEntity}.\\n *\\n * @internal\\n */\\nexport interface FilterEntityConstructor {\\n  new (store: Store<RootXStoreState>): FilterEntity;\\n  /**\\n   * Checks if this class can create an instance with the passed filter DTO.\\n   *\\n   * @param filter - The filter to check if this class can create an instance with it.\\n   * @returns True if this class can create an instance with it. False otherwise.\\n   */\\n  accepts(filter: Filter): boolean;\\n}\\n\\n/**\\n * The FilterEntityModifier constructor.\\n *\\n * @param store - The {@link https://vuex.vuejs.org/api/#vuex-store | Vuex Store} that modifier\\n * uses.\\n * @param entity - The {@link FilterEntity } that the modifier modifies.\\n *\\n * @internal\\n */\\nexport interface FilterEntityModifier {\\n  new (store: Store<RootXStoreState>, entity: FilterEntity): FilterEntity;\\n}\\n\\n/**\\n * The base class for any Modifier. It delegates to the `entity` methods by default.\\n *\\n * @internal\\n */\\nexport abstract class BaseFilterEntityModifier implements FilterEntity {\\n  public constructor(protected store: Store<RootXStoreState>, protected entity: FilterEntity) {}\\n\\n  /**\\n   * Selects the filter passed by parameter.\\n   *\\n   * @param filter - The filter to select.\\n   */\\n  select(filter: Filter): void {\\n    this.entity.select(filter);\\n  }\\n\\n  /**\\n   * Deselects the filter passed by parameter.\\n   *\\n   * @param filter - The filter to deselect.\\n   */\\n  deselect(filter: Filter): void {\\n    this.entity.deselect(filter);\\n  }\\n}\\n"],"names":[],"mappings":"AA4CA;;;;;;IAME,kCAA6B,KAA6B,EAAY,MAAoB;QAA7D,UAAK,GAAL,KAAK,CAAwB;QAAY,WAAM,GAAN,MAAM,CAAc;KAAI;;;;;;IAO9F,yCAAM,GAAN,UAAO,MAAc;QACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC5B;;;;;;IAOD,2CAAQ,GAAR,UAAS,MAAc;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC9B;IACH,+BAAC;AAAD,CAAC;;;;"}')}}]);