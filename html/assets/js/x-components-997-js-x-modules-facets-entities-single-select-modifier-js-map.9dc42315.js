(window.webpackJsonp=window.webpackJsonp||[]).push([[1051],{1316:function(A,e){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"single-select.modifier.js","sources":["../../../../../src/x-modules/facets/entities/single-select.modifier.ts"],"sourcesContent":["import {\\n  isFacetFilter,\\n  isHierarchicalFilter,\\n  FacetFilter,\\n  Facet,\\n  Filter,\\n  HierarchicalFilter\\n} from \'@empathyco/x-types\';\\nimport { BaseFilterEntityModifier } from \'./types\';\\n\\n/**\\n * Allows only to select only one filter from the same facet at the same time.\\n *\\n * @internal\\n */\\nexport class SingleSelectModifier extends BaseFilterEntityModifier {\\n  /**\\n   * Selects the passed filter, and then deselects any other filter of the same facet.\\n   *\\n   * @param filter - The filter to select.\\n   */\\n  select(filter: FacetFilter): void {\\n    this.getOtherFilters(filter).forEach(this.deselect.bind(this));\\n    this.entity.select(filter);\\n  }\\n\\n  /**\\n   * Retrieves the rest of selected filters of the same facet than the one given.\\n   *\\n   * @param filter - The filter to find its relatives.\\n   * @returns A list of selected filters that belong to the same facet than the filter passed.\\n   * @remarks It takes into account if the passed filter is an\\n   * {@link @empathyco/x-types#HierarchicalFilter | HierarchicalFilter} to exclude the ancestors and\\n   * descendants.\\n   *\\n   * @internal\\n   */\\n  protected getOtherFilters(filter: FacetFilter): FacetFilter[] {\\n    /* This check seems dumb, but when you instantiate this modifier using the factory, the types\\n      `FacetFilter` parameter type is lost, so we should check it to avoid unexpected crashes\\n      due to a wrong configuration. */\\n    if (isHierarchicalFilter(filter)) {\\n      const ancestorsIds = this.getAncestorsIds(filter);\\n      const descendantsIds = this.getDescendantsIds(filter);\\n      return this.getFacetFilters(filter.facetId).filter(\\n        storeFilter =>\\n          !ancestorsIds.includes(storeFilter.id) && !descendantsIds.includes(storeFilter.id)\\n      );\\n    } else if (isFacetFilter(filter)) {\\n      return this.getFacetFilters(filter.facetId).filter(\\n        storeFilter => storeFilter.id !== filter.id && storeFilter.selected\\n      );\\n    } else {\\n      // TODO Add a warning in case a non facet filter is passed here.\\n      return [];\\n    }\\n  }\\n\\n  /**\\n   * Returns the ancestors Filters Ids of the passed filter.\\n   *\\n   * @param filter - The {@link @empathyco/x-types#Filter | Filter} which obtain the ancestors from.\\n   * @param ids - (Optional) an Array with the Ids used to execute the method recursively.\\n   * @returns An Array with the ancestors ids.\\n   * @internal\\n   */\\n  protected getAncestorsIds(\\n    filter: HierarchicalFilter,\\n    ids: Array<Filter[\'id\']> = [filter.id]\\n  ): Array<Filter[\'id\']> {\\n    return filter?.parentId\\n      ? this.getAncestorsIds(\\n          this.store.state.x.facets.filters[filter.parentId] as HierarchicalFilter,\\n          [filter.parentId, ...ids]\\n        )\\n      : ids;\\n  }\\n\\n  /**\\n   * Returns the descendants Filters Ids of the passed filter.\\n   *\\n   * @param filter - The {@link @empathyco/x-types#Filter | Filter} which obtain the descendants\\n   * from.\\n   * @param ids - (Optional) an Array with the Ids used to execute the method recursively.\\n   * @returns An Array with the descendants ids.\\n   * @internal\\n   */\\n  protected getDescendantsIds(\\n    filter: HierarchicalFilter,\\n    ids: Array<Filter[\'id\']> = [filter.id]\\n  ): Array<Filter[\'id\']> {\\n    return filter?.children\\n      ? filter?.children.flatMap(descendantId =>\\n          this.getAncestorsIds(\\n            this.store.state.x.facets.filters[descendantId] as HierarchicalFilter,\\n            [descendantId, ...ids]\\n          )\\n        )\\n      : ids;\\n  }\\n\\n  /**\\n   * Retrieves All the filters from the given facet.\\n   *\\n   * @param facetId - The facet id to retrieve its filters.\\n   * @returns The filters from the given facet.\\n   * @internal\\n   */\\n  protected getFacetFilters(facetId: Facet[\'id\']): FacetFilter[] {\\n    return (\\n      ((this.store.getters[\'x/facets/facets\'] as Record<Facet[\'id\'], Facet>)[facetId]\\n        ?.filters as FacetFilter[]) ?? []\\n    );\\n  }\\n}\\n"],"names":[],"mappings":";;;;AAUA;;;;;;IAK0C,wCAAwB;IAAlE;;KAmGC;;;;;;IA7FC,qCAAM,GAAN,UAAO,MAAmB;QACxB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC5B;;;;;;;;;;;;IAaS,8CAAe,GAAzB,UAA0B,MAAmB;;;;QAI3C,IAAI,oBAAoB,CAAC,MAAM,CAAC,EAAE;YAChC,IAAM,cAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAClD,IAAM,gBAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAChD,UAAA,WAAW;gBACT,OAAA,CAAC,cAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;aAAA,CACrF,CAAC;SACH;aAAM,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;YAChC,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAChD,UAAA,WAAW,IAAI,OAAA,WAAW,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,IAAI,WAAW,CAAC,QAAQ,GAAA,CACpE,CAAC;SACH;aAAM;;YAEL,OAAO,EAAE,CAAC;SACX;KACF;;;;;;;;;IAUS,8CAAe,GAAzB,UACE,MAA0B,EAC1B,GAAsC;QAAtC,oBAAA,EAAA,OAA4B,MAAM,CAAC,EAAE,CAAC;QAEtC,OAAO,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ;cACnB,IAAI,CAAC,eAAe,CAClB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAuB,iBACvE,MAAM,CAAC,QAAQ,GAAK,GAAG,EACzB;cACD,GAAG,CAAC;KACT;;;;;;;;;;IAWS,gDAAiB,GAA3B,UACE,MAA0B,EAC1B,GAAsC;QAFxC,iBAYC;QAVC,oBAAA,EAAA,OAA4B,MAAM,CAAC,EAAE,CAAC;QAEtC,OAAO,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ;cACnB,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC,OAAO,CAAC,UAAA,YAAY;gBACnC,OAAA,KAAI,CAAC,eAAe,CAClB,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAuB,iBACpE,YAAY,GAAK,GAAG,EACtB;aAAA,CACF;cACD,GAAG,CAAC;KACT;;;;;;;;IASS,8CAAe,GAAzB,UAA0B,OAAoB;;QAC5C,QACE,MAAC,MAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAgC,CAAC,OAAO,CAAC,0CAC3E,OAAyB,mCAAI,EAAE,EACnC;KACH;IACH,2BAAC;AAAD,CAnGA,CAA0C,wBAAwB;;;;"}')}}]);