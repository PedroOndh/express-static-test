(window.webpackJsonp=window.webpackJsonp||[]).push([[949],{1224:function(t,e){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"status-store.utils.js","sources":["../../../../src/store/utils/status-store.utils.ts"],"sourcesContent":["/**\\n * Status state type, containing a property to hold the status property.\\n *\\n * @public\\n */\\nexport interface StatusState {\\n  /** The request status. Useful for changing the displayed component depending on whether the\\n   * request has succeeded, has not been fulfilled or has failed. */\\n  status: RequestStatus;\\n}\\n\\n/**\\n * Status mutations, containing a method to change the current status.\\n *\\n * @public\\n */\\nexport interface StatusMutations {\\n  /**\\n   * Sets the request status.\\n   *\\n   * @param status - The new request status.\\n   */\\n  setStatus(status: RequestStatus): void;\\n}\\n\\n/**\\n * The possible status of a request:\\n * - Success: The request has resolved successfully.\\n * - Loading: The request is in process, waiting for a response.\\n * - Error: The request has failed.\\n *\\n * @public\\n */\\nexport type RequestStatus = \'success\' | \'loading\' | \'error\' | \'initial\';\\n\\n/**\\n * Sets the request status. Can be used as a mutation.\\n *\\n * @param state - The {@link https://vuex.vuejs.org/guide/state.html | state} provided by Vuex.\\n * @param status - The new request status.\\n * @public\\n */\\nexport function setStatus(state: StatusState, status: RequestStatus): void {\\n  state.status = status;\\n}\\n"],"names":[],"mappings":"AAmCA;;;;;;;SAOgB,SAAS,CAAC,KAAkB,EAAE,MAAqB;IACjE,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACxB;;;;"}')}}]);