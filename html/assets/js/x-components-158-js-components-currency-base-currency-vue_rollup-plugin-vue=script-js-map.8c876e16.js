(window.webpackJsonp=window.webpackJsonp||[]).push([[741],{1037:function(e,n){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"base-currency.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../src/components/currency/base-currency.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\nimport Vue from 'vue';\\nimport { Component, Prop } from 'vue-property-decorator';\\nimport { currencyFormatter } from '../../utils/currency-formatter';\\nimport { XInject } from '../decorators/injection.decorators';\\n\\n/**\\n * Renders the value received as a property which always must be a JavaScript number, with the\\n * proper format provided as a string property or by injection. The rendered tag is a span in\\n * order to render a default inline HTML element.\\n *\\n * Regarding the format or mask to be defined as string:\\n * - Use 'i' to define integer numbers.\\n * - Use 'd' to define decimal numbers. You can define the length of the decimal part. If the\\n * format doesn't include decimals, it is filled with zeros until reach the length defined with\\n * 'd's.\\n * - Integer separator must be defined between the 3rd and the 4th integer 'i' of a group.\\n * - Decimal separator must be defined between the last 'i' and the first 'd'. It can be more\\n * than one character.\\n * - If you want to hide the decimal part if it's zero, you can add the `?` symbol after the\\n * decimal characters (e.g. 'i.iii,dd?', for `1234` you would get `1.234` instead of `1.234,00`).\\n * - Set whatever you need around the integers and decimals marks.\\n * - Default mask: 'i.iii,dd' which returns '1.345,67'.\\n *\\n * @remarks The number of 'd', which is the maximum decimal length, MUST matches with the length\\n * of decimals provided from the adapter. Otherwise, when the component truncate the decimal\\n * part, it deletes significant digits.\\n *\\n * @example\\n * Basic example:\\n *\\n * ```vue\\n * <BaseCurrency\\n *   :value=\\\"123456.789\\\"\\n *   format=\\\"i.iiii,dddd €\\\"\\n * />\\n * ```\\n *\\n * It will render: `123.456,7890 €`.\\n *\\n * See docs below for more examples.\\n *\\n * @public\\n */\\n@Component\\nexport default class BaseCurrency extends Vue {\\n  /**\\n   * Numeric value to be formatted.\\n   *\\n   * @remarks Pass the value with 'v-bind:value' (or ':value' shortcut) instead of plain string.\\n   * @remarks Be careful using numbers under Number.MAX_SAFE_INTEGER to avoid unexpected errors.\\n   *\\n   * @public\\n   */\\n  @Prop({ required: true })\\n  protected value!: number;\\n\\n  /**\\n   * The format as string.\\n   *\\n   * @public\\n   */\\n  @Prop()\\n  protected format?: string;\\n\\n  /**\\n   * The injected format as string.\\n   *\\n   * @public\\n   */\\n  @XInject('currencyFormat')\\n  public injectedFormat!: string;\\n\\n  /**\\n   * A format which can be passed through prop or injected.\\n   *\\n   * @returns A format as string.\\n   *\\n   * @internal\\n   */\\n  protected get renderedFormat(): string {\\n    return (\\n      this.format ??\\n      this.injectedFormat ??\\n      //TODO: add here logger\\n      //eslint-disable-next-line no-console\\n      console.warn('It is necessary to pass a prop or inject the format')\\n    );\\n  }\\n\\n  /**\\n   * Returns the formatted result as string.\\n   *\\n   * @returns Formatted number.\\n   *\\n   * @internal\\n   */\\n  protected get currency(): string {\\n    return currencyFormatter(this.value, this.renderedFormat);\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;IAA0C,gCAAG;IAA7C;;KAuDC;IApBC,sBAAc,wCAAc;;;;;;;;aAA5B;;YACE,QACE,MAAA,MAAA,IAAI,CAAC,MAAM,mCACX,IAAI,CAAC,cAAc;;;YAGnB,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,EACnE;SACH;;;OAAA;IASD,sBAAc,kCAAQ;;;;;;;;aAAtB;YACE,OAAO,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAC3D;;;OAAA;IA5CD;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;+CACA;IAQzB;QADC,IAAI,EAAE;gDACmB;IAQ1B;QADC,OAAO,CAAC,gBAAgB,CAAC;wDACK;IA1BZ,YAAY;QADhC,SAAS;OACW,YAAY,CAuDhC;IAAD,mBAAC;CAAA,CAvDyC,GAAG;;;;\"}")}}]);