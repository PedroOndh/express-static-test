(window.webpackJsonp=window.webpackJsonp||[]).push([[658],{1434:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"main-scroll.vue_rollup-plugin-vue=script.js\",\"sources\":[\"../../../../../src/x-modules/scroll/components/main-scroll.vue?rollup-plugin-vue=script.ts\"],\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\nimport Vue from 'vue';\\nimport { Component, Prop, Watch } from 'vue-property-decorator';\\nimport { XEmit } from '../../../components/decorators/bus.decorators';\\nimport { XProvide } from '../../../components/decorators/injection.decorators';\\nimport { State } from '../../../components/decorators/store.decorators';\\nimport { NoElement } from '../../../components/no-element';\\nimport { xComponentMixin } from '../../../components/x-component.mixin';\\nimport { VueCSSClasses } from '../../../utils/index';\\nimport { scrollXModule } from '../x-module';\\nimport { ScrollObserverKey } from './scroll.const';\\nimport { ScrollVisibilityObserver } from './scroll.types';\\n\\n/**\\n * Extends the scroll making it able to sync the first visible element, and allowing\\n * the children position to be restored.\\n *\\n * Each child element that wants to have this support must be wrapped in a {@link MainScrollItem}\\n * component.\\n *\\n * @public\\n */\\n@Component({\\n  components: { NoElement },\\n  mixins: [xComponentMixin(scrollXModule)]\\n})\\n/* eslint-disable @typescript-eslint/unbound-method */\\nexport default class MainScroll extends Vue {\\n  /**\\n   * If `true`, sets this scroll instance to the main of the application. Being the main\\n   * scroll implies that features like restoring the scroll when the query changes, or storing\\n   * the scroll position in the URL will be enabled for this container.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: false, type: Boolean })\\n  public useWindow!: boolean;\\n\\n  /**\\n   * Timeout in milliseconds to abort trying to restore the scroll position to the target\\n   * element.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: 5000 })\\n  public restoreScrollTimeoutMs!: number;\\n\\n  /**\\n   * Intersection percentage to consider an element visible.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: 0.3 })\\n  public threshold!: number;\\n\\n  /**\\n   * Adjusts the size of the scroll container bounds.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: '0px' })\\n  public margin!: string;\\n\\n  /**\\n   * The elements that are currently considered visible.\\n   *\\n   * @internal\\n   */\\n  protected intersectingElements: HTMLElement[] = [];\\n\\n  /**\\n   * Intersection observer to determine visibility of the elements.\\n   *\\n   * @returns An intersection observer to detect elements visibility.\\n   * @internal\\n   */\\n  protected intersectionObserver: IntersectionObserver | null = null;\\n\\n  /**\\n   * Stores the identifier of the timeout that will consider the scroll failed to restore.\\n   *\\n   * @internal\\n   */\\n  protected restoreScrollFailTimeoutId?: number;\\n\\n  /**\\n   * Pending identifier scroll position to restore. If it matches the {@link MainScrollItem.item}\\n   * `id` property, this component should be scrolled into view.\\n   *\\n   * @internal\\n   */\\n  @State('scroll', 'pendingScrollTo')\\n  public pendingScrollTo!: string;\\n\\n  /**\\n   * Creates an `IntersectionObserver` to detect the first visible elements. Children of this\\n   * component should register themselves if they want to be observed.\\n   *\\n   * @returns The intersection observer.\\n   * @public\\n   */\\n  @XProvide(ScrollObserverKey)\\n  public get visibleElementsObserver(): ScrollVisibilityObserver | null {\\n    const observer = this.intersectionObserver;\\n    return observer\\n      ? {\\n          observe: observer.observe.bind(observer),\\n          unobserve: element => {\\n            this.removeVisibleElement(element);\\n            observer.unobserve(element);\\n          }\\n        }\\n      : null;\\n  }\\n\\n  /**\\n   * The first visible element contained in this component.\\n   *\\n   * @returns The first visible element in this component.\\n   * @internal\\n   */\\n  @XEmit('UserScrolledToElement')\\n  public get firstVisibleElement(): string | '' {\\n    if (this.intersectingElements.length === 0) {\\n      return '';\\n    }\\n    const firstVisibleElement = this.intersectingElements.reduce(\\n      (firstVisibleElement, anotherElement) => {\\n        // FIXME: This algorithm only takes into account LTR layouts\\n        const firstVisibleElementBounds = firstVisibleElement.getBoundingClientRect();\\n        const anotherElementBounds = anotherElement.getBoundingClientRect();\\n        return anotherElementBounds.left <= firstVisibleElementBounds.left &&\\n          anotherElementBounds.top <= firstVisibleElementBounds.top\\n          ? anotherElement\\n          : firstVisibleElement;\\n      }\\n    );\\n\\n    return firstVisibleElement === this.$el.querySelector('[data-scroll]')\\n      ? ''\\n      : firstVisibleElement.dataset.scroll!;\\n  }\\n\\n  /**\\n   * Initialise the observer after mounting the component.\\n   */\\n  mounted(): void {\\n    this.intersectionObserver = new IntersectionObserver(this.updateVisibleElements, {\\n      root: this.useWindow ? document : this.$el,\\n      threshold: this.threshold,\\n      rootMargin: this.margin\\n    });\\n  }\\n\\n  /**\\n   * Disconnects the intersection observer.\\n   *\\n   * @internal\\n   */\\n  beforeDestroy(): void {\\n    this.intersectionObserver?.disconnect();\\n    this.$x.emit('UserScrolledToElement', '');\\n  }\\n\\n  /**\\n   * Disconnects the previous observer.\\n   *\\n   * @param _new - The new `IntersectionObserver`.\\n   * @param old - The new `IntersectionObserver`.\\n   * @internal\\n   */\\n  @Watch('intersectionObserver')\\n  protected disconnectPreviousObserver(\\n    _new: IntersectionObserver | null,\\n    old: IntersectionObserver | null\\n  ): void {\\n    old?.disconnect();\\n  }\\n\\n  /**\\n   * If there is a pending scroll, starts a countdown to stop trying to restore the scroll.\\n   *\\n   * @param pendingScrollTo - The position the scroll should be restored to.\\n   * @internal\\n   */\\n  @Watch('pendingScrollTo')\\n  protected failRestoringScroll(pendingScrollTo: string | null): void {\\n    // TODO Move this logic to the wiring. A cancelable delay operator is needed\\n    clearTimeout(this.restoreScrollFailTimeoutId);\\n    if (pendingScrollTo) {\\n      this.restoreScrollFailTimeoutId = setTimeout(() => {\\n        this.$x.emit('ScrollRestoreFailed');\\n      }, this.restoreScrollTimeoutMs);\\n    }\\n  }\\n\\n  /**\\n   * Removes an element from the {@link MainScroll.intersectingElements} list.\\n   *\\n   * @param element - The element to remove from the visible elements.\\n   * @internal\\n   */\\n  protected removeVisibleElement(element: HTMLElement): void {\\n    const index = this.intersectingElements.indexOf(element);\\n    if (index !== -1) {\\n      this.intersectingElements.splice(index, 1);\\n    }\\n  }\\n\\n  /**\\n   * Updates the visible elements given a list of intersection observer entries.\\n   *\\n   * @param entries - The entries from whom update the visibility.\\n   * @internal\\n   */\\n  protected updateVisibleElements(entries: IntersectionObserverEntry[]): void {\\n    entries.forEach(entry => {\\n      const target = entry.target as HTMLElement;\\n      if (entry.isIntersecting) {\\n        this.intersectingElements.push(target);\\n      } else {\\n        this.removeVisibleElement(target);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * Adds the dynamic css classes to the component.\\n   *\\n   * @returns The class to be added to the component.\\n   *\\n   * @internal\\n   */\\n  protected get dynamicClasses(): VueCSSClasses {\\n    return {\\n      'x-main-scroll--no-transition': !!this.pendingScrollTo\\n    };\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\"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\"}")}}]);