(window.webpackJsonp=window.webpackJsonp||[]).push([[547],{1333:function(e,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"remove-history-query.vue.js","sources":["../../../../../src/x-modules/history-queries/components/remove-history-query.vue"],"sourcesContent":["<template>\\n  <BaseEventButton class=\\"x-button x-remove-history-query\\" :events=\\"removeHistoryQueryEvent\\">\\n    \x3c!--  @slot (Required) Button content with a text, an icon or both --\x3e\\n    <slot />\\n  </BaseEventButton>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import { HistoryQuery } from \'@empathyco/x-types\';\\n  import Vue from \'vue\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import BaseEventButton from \'../../../components/base-event-button.vue\';\\n  import { xComponentMixin } from \'../../../components/x-component.mixin\';\\n  import { XEventsTypes } from \'../../../wiring/events.types\';\\n  import { historyQueriesXModule } from \'../x-module\';\\n\\n  /**\\n   * Button that when it is pressed emits the\\n   * {@link HistoryQueriesXEvents.UserPressedRemoveHistoryQuery} event, expressing the user\\n   * intention to remove a query in the history.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    components: { BaseEventButton },\\n    mixins: [xComponentMixin(historyQueriesXModule)]\\n  })\\n  export default class RemoveHistoryQuery extends Vue {\\n    /**\\n     * The historyQuery that will be removed when clicking the clear button.\\n     *\\n     * @public\\n     */\\n    @Prop({ required: true })\\n    protected historyQuery!: HistoryQuery;\\n\\n    /**\\n     * The event handler that will be triggered when clicking on the clear history query button.\\n     *\\n     * @remarks\\n     * * {@link HistoryQueriesXEvents.UserPressedRemoveHistoryQuery}: historyQuery\\n     *\\n     * @returns The {@link XEvent | XEvents} to emit.\\n     * @public\\n     */\\n    protected get removeHistoryQueryEvent(): Partial<XEventsTypes> {\\n      return { UserPressedRemoveHistoryQuery: this.historyQuery };\\n    }\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\n### Basic Example\\n\\nYou can customize the content that this component renders. To do so, simply use the default slot.\\n\\n```vue\\n<RemoveHistoryQuery :historyQuery=\\"historyQuery\\">\\n  <img class=\\"x-history-query__icon\\" src=\\"./my-awesome-clear-icon.svg\\"/>\\n</RemoveHistoryQuery>\\n```\\n\\n## Events\\n\\nA list of events that the component will emit:\\n\\n- `UserPressedRemoveHistoryQuery`: the event is emitted after the user clicks the button. The event\\n  payload is the history query data.\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);