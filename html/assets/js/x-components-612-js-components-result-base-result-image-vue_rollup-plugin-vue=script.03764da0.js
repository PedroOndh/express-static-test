(window.webpackJsonp=window.webpackJsonp||[]).push([[418,400],{289:function(e,t,n){"use strict";n.r(t),n.d(t,"NoElement",(function(){return r}));var r=n(3).default.extend({render:function(e){var t,n;return null!==(n=null===(t=this.$slots.default)||void 0===t?void 0:t[0])&&void 0!==n?n:e()}})},640:function(e,t,n){"use strict";n.r(t);var r=n(1),i=n(3),o=n(0),s=n(289),a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.hasEnteredView=!1,t.failedImages=[],t.hasImageLoaded=!1,t}return Object(r.__extends)(t,e),Object.defineProperty(t.prototype,"isIntersectionObserverAvailable",{get:function(){return"IntersectionObserver"in window},enumerable:!1,configurable:!0}),t.prototype.mounted=function(){this.hasEnteredView=!this.isIntersectionObserverAvailable,this.isIntersectionObserverAvailable&&this.createObserver()},Object.defineProperty(t.prototype,"imageSrc",{get:function(){var e=this;if(this.hasEnteredView&&this.result.images.length>0){var t=this.result.images.find((function(t){return!e.failedImages.includes(t)}));return null!=t?t:""}return""},enumerable:!1,configurable:!0}),t.prototype.createObserver=function(){var e=this.$refs.image;new IntersectionObserver(this.observerHandler.bind(this)).observe(e)},t.prototype.observerHandler=function(e,t){var n=this;e.forEach((function(e){e.isIntersecting&&(n.hasEnteredView=!0,t.disconnect())}))},t.prototype.flagImageAsFailed=function(){this.failedImages.push(this.imageSrc)},Object.defineProperty(t.prototype,"hasAllImagesFailed",{get:function(){return this.failedImages.length===this.result.images.length},enumerable:!1,configurable:!0}),t.prototype.flagImageLoaded=function(){this.hasImageLoaded=!0},Object(r.__decorate)([Object(o.c)({default:function(){return s.NoElement}})],t.prototype,"animation",void 0),Object(r.__decorate)([Object(o.c)({required:!0})],t.prototype,"result",void 0),t=Object(r.__decorate)([Object(o.a)({components:{NoElement:s.NoElement}})],t)}(i.default);t.default=a}}]);