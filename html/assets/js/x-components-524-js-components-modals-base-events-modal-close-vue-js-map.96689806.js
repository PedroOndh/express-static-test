(window.webpackJsonp=window.webpackJsonp||[]).push([[877],{1159:function(e,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"base-events-modal-close.vue.js","sources":["../../../../src/components/modals/base-events-modal-close.vue"],"sourcesContent":["<template>\\n  <BaseEventButton\\n    v-on=\\"$listeners\\"\\n    :events=\\"events\\"\\n    class=\\"x-button x-events-modal-close-button\\"\\n    data-test=\\"close-modal\\"\\n  >\\n    \x3c!-- @slot (Required) Button content with a text, an icon or both --\x3e\\n    <slot />\\n  </BaseEventButton>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import Vue from \'vue\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import { PropsWithType } from \'../../utils/types\';\\n  import { XEventsTypes } from \'../../wiring/events.types\';\\n  import BaseEventButton from \'../base-event-button.vue\';\\n\\n  /**\\n   * Component contains an event button that emits {@link XEventsTypes.UserClickedCloseEventsModal}\\n   * when clicked. It has a default slot to customize its contents.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    components: { BaseEventButton }\\n  })\\n  export default class BaseEventsModalClose extends Vue {\\n    @Prop({ default: \'UserClickedCloseEventsModal\' })\\n    protected closingEvent!: PropsWithType<XEventsTypes, void>;\\n\\n    protected get events(): Partial<XEventsTypes> {\\n      return { [this.closingEvent]: undefined };\\n    }\\n  }\\n<\/script>\\n\\n<docs lang=\\"mdx\\">\\n## Examples\\n\\nThe `BaseEventsModalClose` component can be used to close the `BaseEventsModal` component.\\n\\n### Basic example\\n\\nOn clicked, the component closes the `BaseEventsModal`. The only needed thing is the content that\\nthe button should render, that can be any thing: a text, an image, an icon, a combination of the two\\nof them...\\n\\n```vue\\n<template>\\n  <BaseEventsCloseButton>\\n    <img src=\\"./close-button-icon.svg\\" />\\n  </BaseEventsCloseButton>\\n</template>\\n\\n<script>\\n  import { BaseEventsModalClose } from \'@empathyco/x-components\';\\n\\n  export default {\\n    name: \'BaseEventsModalCloseTest\',\\n    components: {\\n      BaseEventsModalClose\\n    }\\n  };\\n<\/script>\\n```\\n\\n### Defining another event to emit when clicking the button\\n\\nBy default it uses the same `closingEvent` that the `BaseEventsModal` is listening by default too.\\nThis event can be changed using the `closingEvent` prop.\\n\\n```vue\\n<template>\\n  <BaseEventsModalClose closingEvent=\\"UserClosedEmpathize\\">Ã—</BaseEventsModalClose>\\n</template>\\n\\n<script>\\n  import { BaseEventsModalClose } from \'@empathyco/x-components\';\\n\\n  export default {\\n    name: \'BaseEventsModalCloseTest\',\\n    components: {\\n      BaseEventsModalClose\\n    }\\n  };\\n<\/script>\\n```\\n\\n## Events\\n\\nA list of events that the component will emit:\\n\\n- `UserClickedCloseEventsModal`: the event is emitted after the user clicks the button.\\n</docs>\\n"],"names":["const"],"mappings":";;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);