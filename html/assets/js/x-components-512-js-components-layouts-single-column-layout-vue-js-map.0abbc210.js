(window.webpackJsonp=window.webpackJsonp||[]).push([[873],{1155:function(n,e){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"single-column-layout.vue.js","sources":["../../../../src/components/layouts/single-column-layout.vue"],"sourcesContent":["<template>\\n  <div class=\\"x-layout x-layout--single-column\\" :class=\\"{ \'dev-mode\': devMode }\\">\\n    <header v-if=\\"hasContent(\'header\')\\" class=\\"x-layout__header x-list x-list--horizontal\\">\\n      \x3c!-- @slot Slot that is used to insert content into the Header. --\x3e\\n      <slot name=\\"header\\">\\n        <span v-if=\\"devMode\\" class=\\"slot-helper\\">HEADER</span>\\n      </slot>\\n    </header>\\n\\n    <div v-if=\\"hasContent(\'sub-header\')\\" class=\\"x-layout__sub-header x-list x-list--horizontal\\">\\n      \x3c!-- @slot Slot that can be used to insert content into the Sub Header. --\x3e\\n      <slot name=\\"sub-header\\">\\n        <span v-if=\\"devMode\\" class=\\"slot-helper\\">SUB HEADER</span>\\n      </slot>\\n    </div>\\n\\n    <div v-if=\\"hasContent(\'toolbar\')\\" class=\\"x-layout__toolbar x-list x-list--horizontal\\">\\n      \x3c!-- @slot Slot that can be used to insert content into the Toolbar. --\x3e\\n      <slot name=\\"toolbar\\">\\n        <span v-if=\\"devMode\\" class=\\"slot-helper\\">TOOLBAR</span>\\n      </slot>\\n    </div>\\n\\n    <div v-if=\\"hasContent(\'predictive\')\\" class=\\"x-layout__predictive x-list x-list--vertical\\">\\n      <BaseScroll class=\\"x-layout__predictive-scroll x-list x-list--vertical x-list__item--expand\\">\\n        \x3c!-- @slot Slot that can be used to insert content into the Predictive Layer. --\x3e\\n        <slot name=\\"predictive\\">\\n          <span v-if=\\"devMode\\" class=\\"slot-helper\\">PREDICTIVE</span>\\n        </slot>\\n      </BaseScroll>\\n    </div>\\n\\n    <main v-if=\\"hasContent(\'main\')\\" class=\\"x-layout__main\\">\\n      <MainScroll>\\n        <Scroll id=\\"main-scroll\\" class=\\"x-layout__main-scroll x-list x-list--vertical\\">\\n          \x3c!-- @slot Slot that can be used to insert content into the Main. --\x3e\\n          <slot name=\\"main\\">\\n            <span v-if=\\"devMode\\" class=\\"slot-helper\\">MAIN</span>\\n          </slot>\\n        </Scroll>\\n      </MainScroll>\\n    </main>\\n\\n    <div v-if=\\"hasContent(\'floating\')\\" class=\\"x-layout__floating x-list x-list--horizontal\\">\\n      \x3c!-- @slot Slot that can be used to insert content into the Floating. --\x3e\\n      <slot name=\\"floating\\">\\n        <span v-if=\\"devMode\\" class=\\"slot-helper\\">FLOATING</span>\\n      </slot>\\n    </div>\\n\\n    <footer v-if=\\"hasContent(\'footer\')\\" class=\\"x-layout__footer x-list x-list--horizontal\\">\\n      \x3c!-- @slot Slot that can be used to insert content into the Footer. --\x3e\\n      <slot name=\\"footer\\">\\n        <span v-if=\\"devMode\\" class=\\"slot-helper\\">FOOTER</span>\\n      </slot>\\n    </footer>\\n\\n    <BaseIdModal\\n      v-if=\\"hasContent(\'aside\')\\"\\n      :animation=\\"asideAnimation\\"\\n      modalId=\\"aside-modal\\"\\n      class=\\"x-layout__aside\\"\\n    >\\n      \x3c!-- @slot Slot that can be used to insert content into the Aside. --\x3e\\n      <slot name=\\"aside\\">\\n        <span v-if=\\"devMode\\" class=\\"slot-helper\\">ASIDE</span>\\n      </slot>\\n    </BaseIdModal>\\n  </div>\\n</template>\\n\\n<script lang=\\"ts\\">\\n  import Vue from \'vue\';\\n  import { mixins } from \'vue-class-component\';\\n  import { Component, Prop } from \'vue-property-decorator\';\\n  import MainScroll from \'../../x-modules/scroll/components/main-scroll.vue\';\\n  import Scroll from \'../../x-modules/scroll/components/scroll.vue\';\\n  import TranslateFromRight from \'../animations/translate-from-right.vue\';\\n  import BaseIdModal from \'../modals/base-id-modal.vue\';\\n  import BaseScroll from \'../scroll/base-scroll.vue\';\\n  import LayoutsMixin from \'./layouts.mixin\';\\n\\n  /**\\n   * Component for use as Layout to be filled with the rest of the Components.\\n   *\\n   * @public\\n   */\\n  @Component({\\n    components: { BaseIdModal, BaseScroll, MainScroll, Scroll }\\n  })\\n  export default class SingleColumnLayout extends mixins(LayoutsMixin) {\\n    /**\\n     * The animation used for the Main Aside.\\n     *\\n     * @public\\n     */\\n    @Prop({ default: () => TranslateFromRight })\\n    protected asideAnimation!: Vue;\\n  }\\n<\/script>\\n\\n<style scoped lang=\\"scss\\">\\n  @import \'../../design-system/utilities/dev-mode\';\\n\\n  .x-layout {\\n    display: grid;\\n    align-content: stretch;\\n    justify-content: stretch;\\n    height: 100%;\\n\\n    grid-template-rows:\\n      [page-start header-start]\\n      auto\\n      [header-end sub-header-start]\\n      auto\\n      [sub-header-end toolbar-start]\\n      auto\\n      [toolbar-end main-start]\\n      1fr\\n      [floating-start]\\n      auto\\n      [main-end floating-end footer-start]\\n      auto\\n      [footer-end page-end];\\n\\n    grid-template-columns: 1fr;\\n\\n    > * {\\n      grid-column: 1/-1;\\n      min-width: 0;\\n      min-height: 0;\\n      display: flex;\\n    }\\n\\n    &__header {\\n      grid-row: header;\\n      z-index: 1;\\n    }\\n\\n    &__sub-header {\\n      grid-row: sub-header;\\n      z-index: 1;\\n    }\\n\\n    &__toolbar {\\n      grid-row: toolbar;\\n      z-index: 1;\\n    }\\n\\n    &__predictive {\\n      grid-row-start: header-end;\\n      grid-row-end: page-end;\\n      flex-flow: column nowrap;\\n      z-index: 2;\\n    }\\n\\n    &__main {\\n      grid-row: main;\\n      flex-flow: column nowrap;\\n    }\\n\\n    &__floating {\\n      grid-row: floating;\\n      z-index: 1;\\n    }\\n\\n    &__footer {\\n      grid-row: footer;\\n    }\\n\\n    &__aside {\\n      grid-row: page;\\n      z-index: 3;\\n\\n      ::v-deep .x-modal__content {\\n        width: 100%;\\n        height: 100%;\\n        margin-inline-start: var(--x-size-margin-left-layout-single-column, 0);\\n      }\\n    }\\n\\n    &__predictive,\\n    &__floating,\\n    &__aside,\\n    .slot-helper {\\n      pointer-events: none;\\n\\n      ::v-deep > * {\\n        pointer-events: all;\\n      }\\n\\n      ::v-deep .x-list {\\n        pointer-events: none;\\n\\n        > * {\\n          pointer-events: all;\\n        }\\n      }\\n    }\\n  }\\n</style>\\n"],"names":["const"],"mappings":";;;;;AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}')}}]);