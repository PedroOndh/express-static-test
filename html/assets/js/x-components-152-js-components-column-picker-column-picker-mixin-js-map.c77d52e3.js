(window.webpackJsonp=window.webpackJsonp||[]).push([[720],{1035:function(A,e){throw new Error("Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {\"version\":3,\"file\":\"column-picker.mixin.js\",\"sources\":[\"../../../../src/components/column-picker/column-picker.mixin.ts\"],\"sourcesContent\":[\"import Vue from 'vue';\\nimport { Prop, Watch } from 'vue-property-decorator';\\nimport Component from 'vue-class-component';\\nimport { XEmit, XOn } from '../decorators/bus.decorators';\\n\\n/**\\n * Mixin to share Column Pickers logic.\\n *\\n * @public\\n */\\n@Component({\\n  model: {\\n    event: 'change'\\n  }\\n})\\nexport default class ColumnPickerMixin extends Vue {\\n  /**\\n   * The value of the selected columns number.\\n   *\\n   * @public\\n   */\\n  @Prop({ required: false })\\n  protected value?: number;\\n\\n  /**\\n   * An array of numbers that represents the number of columns to render.\\n   *\\n   * @public\\n   */\\n  @Prop({ required: true })\\n  protected columns!: number[];\\n\\n  /**\\n   * Selected column, `value` prop by default or the first `columns` item.\\n   *\\n   * @internal\\n   */\\n  @XEmit('ColumnsNumberProvided', { immediate: false })\\n  public selectedColumns = this.providedSelectedColumns;\\n\\n  /**\\n   * Retrieves the provided selected column.\\n   *\\n   * @returns The provided `value`, or the first value of the list of possible columns.\\n   * @internal\\n   */\\n  public get providedSelectedColumns(): number {\\n    return this.value ?? this.columns[0];\\n  }\\n\\n  /**\\n   * Synchronizes the selected column with the one provided by argument.\\n   *\\n   * @param columns - The column number.\\n   *\\n   * @internal\\n   */\\n  @Watch('providedSelectedColumns')\\n  @XOn('ColumnsNumberProvided')\\n  setSelectedColumns(columns: number): void {\\n    this.selectedColumns = columns;\\n  }\\n\\n  /**\\n   * Synchronizes the number of selected columns with the provided selected column value.\\n   *\\n   * @param column - The new number of columns.\\n   *\\n   * @internal\\n   */\\n  @Watch('selectedColumns')\\n  protected emitChange(column: number): void {\\n    if (this.value !== column) {\\n      this.$emit('change', column);\\n    }\\n  }\\n\\n  /**\\n   * Synchronizes the columns number before mounting the component. If the real number of selected\\n   * columns equals the provided columns, it emits the event to sync it with every other component.\\n   * If it is not equal it means that the user has already selected a number of columns, so we emit\\n   * a `change` event so developers can sync the provided value.\\n   *\\n   * @internal\\n   */\\n  beforeMount(): void {\\n    if (this.selectedColumns === this.providedSelectedColumns) {\\n      this.$x.emit('ColumnsNumberProvided', this.selectedColumns);\\n    } else {\\n      this.emitChange(this.selectedColumns);\\n    }\\n  }\\n}\\n\"],\"names\":[],\"mappings\":\";;;;;;AAKA;;;;;AAUA;IAA+C,qCAAG;IAAlD;QAAA,qEA6EC;;;;;;QAtDQ,qBAAe,GAAG,KAAI,CAAC,uBAAuB,CAAC;;KAsDvD;IA9CC,sBAAW,sDAAuB;;;;;;;aAAlC;;YACE,OAAO,MAAA,IAAI,CAAC,KAAK,mCAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACtC;;;OAAA;;;;;;;;IAWD,8CAAkB,GAAlB,UAAmB,OAAe;QAChC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;KAChC;;;;;;;;IAUS,sCAAU,GAApB,UAAqB,MAAc;QACjC,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC9B;KACF;;;;;;;;;IAUD,uCAAW,GAAX;QACE,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,uBAAuB,EAAE;YACzD,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAC7D;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACvC;KACF;IArED;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;oDACD;IAQzB;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;sDACI;IAQ7B;QADC,KAAK,CAAC,uBAAuB,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;8DACC;IAqBtD;QAFC,KAAK,CAAC,yBAAyB,CAAC;QAChC,GAAG,CAAC,uBAAuB,CAAC;+DAG5B;IAUD;QADC,KAAK,CAAC,iBAAiB,CAAC;uDAKxB;IA5DkB,iBAAiB;QALrC,SAAS,CAAC;YACT,KAAK,EAAE;gBACL,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC;OACmB,iBAAiB,CA6ErC;IAAD,wBAAC;CAAA,CA7E8C,GAAG;;;;\"}")}}]);