(window.webpackJsonp=window.webpackJsonp||[]).push([[931],{1208:function(A,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"base-suggestions.vue_rollup-plugin-vue=script.js","sources":["../../../../src/components/suggestions/base-suggestions.vue?rollup-plugin-vue=script.ts"],"sourcesContent":["\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nimport { Component, Prop } from \'vue-property-decorator\';\\nimport { Suggestion, Facet } from \'@empathyco/x-types\';\\nimport Vue from \'vue\';\\nimport { isArrayEmpty } from \'../../utils/array\';\\n\\n/**\\n * Paints a list of suggestions passed in by prop. Requires a component for a single suggestion\\n * in the default slot for working.\\n *\\n * @public\\n */\\n@Component\\nexport default class BaseSuggestions extends Vue {\\n  /**\\n   * The list of suggestions to render.\\n   *\\n   * @public\\n   */\\n  @Prop({ required: true })\\n  protected suggestions!: Suggestion[];\\n\\n  /**\\n   * Animation component that will be used to animate the suggestion.\\n   *\\n   * @public\\n   */\\n  @Prop({ default: \'ul\' })\\n  protected animation!: Vue | string;\\n\\n  /**\\n   * Number of suggestions to be rendered.\\n   *\\n   * @public\\n   */\\n  @Prop()\\n  protected maxItemsToRender?: number;\\n\\n  /**\\n   * An array with the unique keys for each suggestion. Required by the `v-for` loop.\\n   *\\n   * @returns An array with the unique keys of the suggestions.\\n   * @internal\\n   */\\n  protected get suggestionsKeys(): string[] {\\n    return this.suggestions.map(suggestion =>\\n      isArrayEmpty(suggestion.facets)\\n        ? suggestion.query\\n        : `${suggestion.query}-in-${this.getFacetsKey(suggestion.facets)}`\\n    );\\n  }\\n\\n  /**\\n   * Generates a string from the given facets.\\n   *\\n   * @param facets - The list of facets to reduce to a string.\\n   * @returns - A string representing the list of facets.\\n   * @internal\\n   */\\n  protected getFacetsKey(facets: Facet[]): string {\\n    // Component methods are bound by Vue:\\n    // eslint-disable-next-line @typescript-eslint/unbound-method\\n    return facets.map(this.getFacetKey).join(\'&\');\\n  }\\n\\n  /**\\n   * Generates a string from the given facet.\\n   *\\n   * @param facet - The facet to reduce to a string.\\n   * @returns - A string representing the facet.\\n   * @internal\\n   */\\n  protected getFacetKey(facet: Facet): string {\\n    return facet.filters.map(filter => filter.id).join(\'&\');\\n  }\\n\\n  /**\\n   * Slices the suggestions from the state.\\n   *\\n   * @returns - The list of suggestions slice by the number of items to render.\\n   *\\n   * @internal\\n   */\\n  protected get suggestionsToRender(): Suggestion[] {\\n    return this.suggestions.slice(0, this.maxItemsToRender);\\n  }\\n}\\n"],"names":[],"mappings":";;;;;AA8BA;;;;;;AAOA;IAA6C,mCAAG;IAAhD;;KAyEC;IA1CC,sBAAc,4CAAe;;;;;;;aAA7B;YAAA,iBAMC;YALC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,UAAU;gBACpC,OAAA,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC;sBAC3B,UAAU,CAAC,KAAK;sBACb,UAAU,CAAC,KAAK,YAAO,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAG;aAAA,CACrE,CAAC;SACH;;;OAAA;;;;;;;;IASS,sCAAY,GAAtB,UAAuB,MAAe;;;QAGpC,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC/C;;;;;;;;IASS,qCAAW,GAArB,UAAsB,KAAY;QAChC,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,GAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzD;IASD,sBAAc,gDAAmB;;;;;;;;aAAjC;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACzD;;;OAAA;IAjED;QADC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;wDACY;IAQrC;QADC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sDACW;IAQnC;QADC,IAAI,EAAE;6DAC6B;IAvBjB,eAAe;QADnC,SAAS;OACW,eAAe,CAyEnC;IAAD,sBAAC;CAAA,CAzE4C,GAAG;;;;"}')}}]);