(window.webpackJsonp=window.webpackJsonp||[]).push([[728],{1498:function(A,n){throw new Error('Module parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> {"version":3,"file":"module.js","sources":["../../../../../src/x-modules/tagging/store/module.ts"],"sourcesContent":["import { TaggingInfo } from \'@empathyco/x-types\';\\nimport { track } from \'./actions/track.action\';\\nimport { TaggingXStoreModule } from \'./types\';\\n\\n/**\\n * {@link XStoreModule} For the tagging module.\\n *\\n * @internal\\n */\\nexport const taggingXStoreModule: TaggingXStoreModule = {\\n  state: () => ({\\n    config: {\\n      sessionTTLMs: 30 * 60 * 1000,\\n      queryTaggingDebounceMs: 2000\\n    },\\n    consent: null,\\n    queryTaggingInfo: null\\n  }),\\n  getters: {},\\n  mutations: {\\n    setSessionDuration(state, sessionTTLMs) {\\n      state.config.sessionTTLMs = sessionTTLMs;\\n    },\\n    setQueryTaggingDebounce(state, queryTaggingDebounceMs) {\\n      state.config.queryTaggingDebounceMs = queryTaggingDebounceMs;\\n    },\\n    setConsent(state, consent) {\\n      state.consent = consent;\\n    },\\n    setQueryTaggingInfo(state, queryTaggingInfo: TaggingInfo) {\\n      state.queryTaggingInfo = queryTaggingInfo;\\n    }\\n  },\\n  actions: {\\n    track\\n  }\\n};\\n"],"names":[],"mappings":";;AAIA;;;;;IAKa,mBAAmB,GAAwB;IACtD,KAAK,EAAE,cAAM,QAAC;QACZ,MAAM,EAAE;YACN,YAAY,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;YAC5B,sBAAsB,EAAE,IAAI;SAC7B;QACD,OAAO,EAAE,IAAI;QACb,gBAAgB,EAAE,IAAI;KACvB,IAAC;IACF,OAAO,EAAE,EAAE;IACX,SAAS,EAAE;QACT,kBAAkB,YAAC,KAAK,EAAE,YAAY;YACpC,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;SAC1C;QACD,uBAAuB,YAAC,KAAK,EAAE,sBAAsB;YACnD,KAAK,CAAC,MAAM,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;SAC9D;QACD,UAAU,YAAC,KAAK,EAAE,OAAO;YACvB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SACzB;QACD,mBAAmB,EAAnB,UAAoB,KAAK,EAAE,gBAA6B;YACtD,KAAK,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;SAC3C;KACF;IACD,OAAO,EAAE;QACP,KAAK,OAAA;KACN;;;;;"}')}}]);