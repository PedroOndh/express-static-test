openapi: 3.0.1
info:
  title: Jobs
  description: 'This endpoints retrieves the List of the Jobs for the index builder or post a new job'
  contact:
    email: index@empathy.co
  version: 1.0.0
servers:
  - url: http://localhost:8080/jobs
  - url: https://index-builder-api.carrefour.gcp.empathy.dev/
  - url: https://index-builder-api.kroger.gcp.empathy.dev/
tags:
  - name: Get jobs
    description: Endpoint to retrieve the information for an specific job giving it's id
  - name: Post Job
    description: Endpoint to post a jobs to the index builder
  - name: Cancel Job
    description: Endpoint to cancel a specific job giving it's id

paths:
  /{siteId}/{clientToken}/job/{indexJobId}/:
    get:
      tags:
        - Get jobs
      summary: Info about an specific Job
      description: Find the job
      operationId: /job/{}
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string
        - name: indexJobId
          in: path
          description: Id for the Job
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataObject'

  /{siteId}/{clientToken}/job/tracking/{correlationId}/:
    get:
      tags:
        - Get jobs
      summary: Info about an specific Job
      description: Find the job using the correlationId
      operationId: /job/tracking/{}
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string
        - name: correlationId
          in: path
          description: CorrelationId for the job (previously known as jobId)
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataObject'

  /{siteId}/{clientToken}:
    get:
      tags:
        - Get jobs
      summary: Returns a list of all the jobs for the specific client
      description: Find the job
      operationId: /clientToken
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataObject'

  /feed/{siteId}/{clientToken}/{feedId}:
    get:
      tags:
        - Get jobs
      summary: Returns a list of all the jobs for the specific client
      description: Find the job
      operationId: /feedId
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string

        - name: feedId
          in: path
          description: Indentifier for the feed
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataObject'

  /submit/{siteId}/{clientToken}/{feedId}:
    post:
      tags:
        - Post Job
      summary: Submit the job the index builder
      description: Creates a job
      operationId: /submit
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string

        - name: feedId
          in: path
          description: Indentifier for the feed
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataObject'

  /config/{siteId}/{clientToken}/{feedId}:
    post:
      tags:
        - Post Job
      summary: Submit a CONFIG job to the index builder
      description: Creates a config Job
      operationId: /config
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string
        - name: feedId
          in: path
          description: Indentifier for the feed
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataObject'

  /{siteId}/{clientToken}/{jobId}:
    delete:
      tags:
        - Cancel Job
      summary: Cancels a job giving it's id
      description: Cancels a job
      operationId: /cancel
      parameters:
        - name: siteId
          in: path
          description: Identifier client name (clientId)
          required: true
          schema:
            type: string
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          description: Job identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: job in different status than queued
        403:
          description: can't match siteId and clientToken
        404:
          description: job not found

  /{clientToken}/{indexJobId}:
    delete:
      tags:
        - Cancel Job
      summary: Cancels a job giving it's id
      description: Cancels a job
      operationId: /cancel/
      parameters:
        - name: clientToken
          in: path
          description: Token for the client
          required: true
          schema:
            type: string
        - name: indexJobId
          in: path
          description: Job identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
        400:
          description: job in different status than queued
        403:
          description: can't match siteId and clientToken
        404:
          description: job not found

components:
  schemas:
    JobDataObject:
      type: object
      properties:
        id:
          type: string
        clientId:
          type: string
        date:
          example:  "2020-10-19T06:55:02.837Z"
        updatedAt:
          example:  "2020-10-19T06:55:02.837Z"
        feedId:
          type: string
        jobId:
          type: string
        opType:
          type: string
        state:
          type: string
        feedsUri:
          type: string
        pivots:
          type: object
        metrics:
          type: object
          $ref: '#/components/schemas/JobMetrics'
        transitions:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/StateObject'


    JobMetrics:
      type: object
      properties:
        relements:
          type: number
        welements:
          type: number
        rtime:
          type: number
        wtirme:
          type: number
        ttime:
          type: number

    StateObject:
      type: object
      properties:
        state:
          type: string
        date:
          type: string