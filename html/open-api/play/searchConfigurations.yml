openapi: 3.0.3
info:
  title: Search configuration endpoint
  description: The objective of this endpoint is to handle all the data required for the search tooling. Each one represents a configuration of different tools for a specific `context`.
  contact:
    email: play@empathy.co
  version: '1.0.0'
servers:
  - url: 'http://localhost:8080'
    description: local
  - url: 'https://play-api.kroger.internal.dataless.gcp.empathy.dev/'
    description: kroger dataless
  - url: 'https://play-api.carrefour.internal.dataless.gcp.empathy.dev/'
    description: carrefour dataless
paths:
  /search/configurations:
    get:
      tags:
        - search configurations
      summary: Retrieve search configurations of the default instance.
      operationId: getAll
      parameters:
        - name: enabled
          in: query
          description: Filter results by the status.
          required: false
          schema:
            type: boolean
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendent or descendent.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by this field.
          style: form
          schema:
            type: string
        - name: pivots
          in: query
          description: "Filter by pivots.<br> NOTE: All these params need the prefix 'pivots'"
          schema:
            type: object
            additionalProperties: true
            example:
              {"pivots.lang": "es"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_SearchConfiguration'

      security:
        - AUTHORIZATION:
            - global
    post:
      tags:
        - search configurations
      summary: Create a new search configuration for the default instance.
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConfiguration'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'

      security:
        - AUTHORIZATION:
            - global

  /search/configurations/publish:
    get:
      tags:
        - search configurations
      summary: Publish all the available search configurations of the default instance again. (see play worker details about publishing configurations)
      operationId: getPublish
      responses:
        '200':
          description: OK
      security:
        - AUTHORIZATION:
            - global

  /search/configurations/{id}:
    get:
      tags:
        - search configurations
      summary: Retrieve a specific search configuration of the default instance by id.
      operationId: getId
      parameters:
        - name: id
          in: path
          description: Search configuration indentifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global

    put:
      tags:
        - search configurations
      summary: Modify any field of a search configuration of the default instance.
      operationId: putId
      parameters:
        - name: id
          in: path
          description: Search configurations identifier.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global

    delete:
      tags:
        - search configurations
      summary: Delete a specific search configuration of the default instance.
      operationId: deleteId
      parameters:
        - name: id
          in: path
          description: Search configuration identifier
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global

  '/{requestInstanceId}/search/configurations':
    get:
      tags:
        - search configurations
      summary: Returns the search configurations of the given instance.
      operationId: getRequestId
      parameters:
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          schema:
            type: string
        - name: enabled
          in: query
          description: Filter results by the status.
          required: false
          schema:
            type: boolean
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendent or descendent.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by this field.
          style: form
          schema:
            type: string
        - name: pivots
          in: query
          description: "Filter by pivots.<br> NOTE: All these params need the prefix 'pivots'"
          schema:
            type: object
            additionalProperties: true
            example:
              {"pivots.lang": "es"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_SearchConfiguration'

      security:
        - AUTHORIZATION:
            - global

    post:
      tags:
        - search configurations
      summary: Create a search configurations for the given instance.
      operationId: postRequestId
      parameters:
        - name: requestInstanceId
          in: path
          description: Identifier the instance.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConfiguration'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'

      security:
        - AUTHORIZATION:
            - global

  '/{requestInstanceId}/search/configurations/publish':
    get:
      tags:
        - search configurations
      summary: Publish all the available search configurations of the given instance again. (see play worker details about publishing configurations)
      operationId: getRequestIdPublish
      parameters:
        - name: requestInstanceId
          in: path
          description: Instance identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK

      security:
        - AUTHORIZATION:
            - global

  '/{requestInstanceId}/search/configurations/{id}':
    get:
      tags:
        - search configurations
      summary: Retrieve a specific search configuration of the given instance by id.
      operationId: getRequestIdId
      parameters:
        - name: requestInstanceId
          in: path
          description: Instance identifier.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Search configuration identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global

    put:
      tags:
        - search configurations
      summary: Modify any field of a search configuration of a given instance by id.
      operationId: putRequestIdId
      parameters:
        - name: requestInstanceId
          in: path
          description: Instance identifier.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Search configuration identifier.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global

    delete:
      tags:
        - search configurations
      summary: Delete a search configuration of a given instance by id.
      operationId: deleteRequestIdId
      parameters:
        - name: requestInstanceId
          in: path
          description: Instance identifier.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Search configuration identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global

components:
  schemas:
    SearchConfiguration:
      title: SearchConfiguration
      description: Configuration of a specific context for search.
      required:
        - context
        - enabled
      type: object
      properties:
        id:
          type: string
          description: Identifier of the element.
        enabled:
          type: boolean
          description: Status of the configuration.
        name:
          description: Name of the configuration. This field is just to remember the aim of having this configuration.
          type: string
        attributes_ranking:
          $ref: '#/components/schemas/ElementsRankings'
        context:
          $ref: '#/components/schemas/SearchContext'
        facets:
          $ref: '#/components/schemas/Facets'
        metadata:
          $ref: '#/components/schemas/Metadata'
        products_ranking:
          $ref: '#/components/schemas/ElementsRankings'
    SearchContext:
      title: SearchContext
      description: Context in which the configuration will be applied.
      type: object
      properties:
        keywords:
          description: Queries in which this configuration will apply.
          type: array
          items:
            type: string
        pivots:
          description:  Mandatory filters that define the context of the configuration (for example, lang)
          type: object
          additionalProperties:
            description: Different possible values of each pivot.
            type: array
            items:
              type: string
    ElementRanking:
      title: ElementRanking
      description: Rule to specify some products that can be boosted or buried.
      required:
        - action
        - field_name
        - field_value
      type: object
      properties:
        action:
          type: string
          description: Type of the action (BOOST or BURY).
          enum:
            - BOOST
            - BURY
        field_name:
          type: string
          description: Name of the product field used to find the affected products.
        field_value:
          type: string
          description: Value of the product field used to find the affected products.
        filters:
          type: object
          description: Specific context in which this rule will be applied.
          additionalProperties:
            type: array
            items:
              type: string
        schedule:
          $ref: '#/components/schemas/Schedule'
    ElementsRankings:
      title: ElementsRankings
      type: object
      properties:
        elements:
          description: List of elementRanking rules.
          type: array
          items:
            $ref: '#/components/schemas/ElementRanking'
    Facet:
      title: Facet
      description: Facet configuration
      type: object
      properties:
        id:
          type: string
          description: Facet identifier.
        pretty_name:
          type: string
          description: Name that will be shown for this facet.
        sort_type:
          type: string
          description: Sorting criteria for facet values.
          enum:
            - ALPHABETICALLY
            - RESULTS_NUMBER
        values_ranking:
          type: array
          description: Rules to define if a facet value is boosted or buried in the facet values list.
          items:
            $ref: '#/components/schemas/ValueRanking'
    Facets:
      title: Facets
      type: object
      properties:
        elements:
          type: array
          description: List of facet configurations.
          items:
            $ref: '#/components/schemas/Facet'
    Metadata:
      title: Metadata
      description: Data of the configuration itself.
      type: object
      properties:
        created_on:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: When was created.
        updated_on:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: When was updated the last time.
        user:
          type: string
          description: Who was the last one that modified it.
    ResultList_SearchConfiguration:
      title: ResultList<SearchConfiguration>
      type: object
      properties:
        num_found:
          description: Total number of search configurations.
          type: integer
          format: int64
        results:
          description: List of search configurations.
          type: array
          items:
            $ref: '#/components/schemas/SearchConfiguration'
    Schedule:
      title: Schedule
      description: Define the starting and ending points of a configuration.
      type: object
      properties:
        activation_date:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: Activation datetime.
        deactivation_date:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: Deactivation datetime.
    ValueRanking:
      title: ValueRanking
      description: Rule to define if a value id is boosted or buried.
      type: object
      properties:
        action:
          description: Action of the rule.
          type: string
          enum:
            - BOOST
            - BURY
        id:
          type: string
          description: Identifier of the value.
    NotFound:
      title: NotFound
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-09-09T06:43:01.899+0000
          description: Datetime of the request.
        status:
          type: string
          example: 404
          description: HTTP status code of the request.
        error:
          type: string
          example: NOT_FOUND
          description: HTTP status identifier.
        details:
          type: object
          description: Specific details of the error.
          properties:
            id:
              type: string
              example: NOT_FOUND
              description: Error identifier.
            message:
              type: string
              example: No search configuration found for id 123456789L
              description: Description of the error.

  securitySchemes:
    AUTHORIZATION:
      type: apiKey
      name: AUTHORIZATION
      in: header
