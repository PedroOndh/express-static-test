openapi: 3.0.3
info:
  title: Blacklist Documentation
  description: The goal of this endpoint is manage the blacklist. List of words that will never be suggested either in empathize or querysignals.
  contact:
    email: play@empathy.co
  version: '1.0.0'
servers:
  - url: 'http://localhost:8080'
    description: local
  - url: 'https://play-api.kroger.internal.dataless.gcp.empathy.dev/'
    description: kroger dataless
  - url: 'https://play-api.carrefour.internal.dataless.gcp.empathy.dev/'
    description: carrefour dataless
tags:
  - name: blacklists
    description: Manage Blacklists
paths:
  /blacklists:
    get:
      tags:
        - blacklists
      summary: Retrieve blacklist of the default instance.
      operationId: getAll
      parameters:
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendent or descendent.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by this field.
          style: form
          schema:
            type: string
        - name: lang
          in: query
          description: Language to filter.
          style: form
          schema:
            type: string
        - name: search
          in: query
          description: Search blacklists items by terms as an exact match.
          style: form
          schema:
            type: string
            enum:
              - search
        - name: psearch
          in: query
          description: Search blacklists items by terms as a parcial match.
          style: form
          schema:
            type: string
            enum:
              - psearch
        - name: kw
          in: query
          description: Search blacklists items by terms as an exact match..
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - kw
        - name: pkw
          in: query
          description: Search blacklists items by terms as a parcial match.
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - pkw
        - name: mode
          in: query
          description: Parameter used to use the new blacklist (only allows the value:list).<br>Note:If you activate this filter it returns a list of blacklist.
          schema:
            type: string
            enum:
              - list

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResultList_DeprecatedBlacklist'
                  - $ref: '#/components/schemas/ResultList_Blacklist'
    post:
      tags:
        - blacklists
      summary: Create a new blacklist for the default instance.
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blacklist'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
      security:
        - AUTHORIZATION:
            - global
  '/blacklists/{id}':
    get:
      tags:
        - blacklists
      summary: Retrieve a specific blacklist of the default instance by id.
      operationId: getId
      parameters:
        - name: id
          in: path
          description: Identifier of the value.
          required: true
          style: simple
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    put:
      tags:
        - blacklists
      summary: Modify any field of a blacklist of the default instance.
      operationId: putId
      parameters:
        - name: id
          in: path
          description: Identifier of the value.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blacklist'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    delete:
      tags:
        - blacklists
      summary: Delete a specific blacklist of the default instance.
      operationId: deleteId
      parameters:
        - name: id
          in: path
          description: Identifier of the value.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/blacklists':
    get:
      tags:
        - blacklists
      summary: Returns the blacklist of the given instance.
      operationId: getRequest
      parameters:
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendent or descendent.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by this field.
          style: form
          schema:
            type: string
        - name: lang
          in: query
          description: Language to filter.
          style: form
          schema:
            type: string
        - name: search
          in: query
          description: Search blacklists items by terms as an exact match.
          style: form
          schema:
            type: string
            enum:
              - search
        - name: psearch
          in: query
          description: Search blacklists items by terms as a parcial match.
          style: form
          schema:
            type: string
            enum:
              - psearch
        - name: kw
          in: query
          description: Search blacklists items by terms as an exact match..
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - kw
        - name: pkw
          in: query
          description: Search blacklists items by terms as a parcial match.
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - pkw
        - name: mode
          in: query
          description: Parameter used to use the new blacklist (only allows the value:list).<br>Note:If you activate this filter it returns a list of blacklist.
          schema:
            type: string
            enum:
              - list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResultList_DeprecatedBlacklist'
                  - $ref: '#/components/schemas/ResultList_Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    post:
      tags:
        - blacklists
      summary: Create a blacklist for the given instance.
      operationId: postRequest
      parameters:
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blacklist'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/blacklists/{id}':
    get:
      tags:
        - blacklists
      summary: Retrieve a specific blacklist of the given instance by id.
      operationId: getRequestId
      parameters:
        - name: id
          in: path
          description:  Blacklist identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    put:
      tags:
        - blacklists
      summary: Modify any field of a blacklist of a given instance by id.
      operationId: putRequestId
      parameters:
        - name: id
          in: path
          description:  Blacklist identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blacklist'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    delete:
      tags:
        - blacklists
      summary: Delete a blacklist of a given instance by id.
      operationId: deleteRequestId
      parameters:
        - name: id
          in: path
          description:  Blacklist identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global

components:
  schemas:
    Blacklist:
      title: Blacklist
      required:
        - enabled
      type: object
      description: All blacklisted terms for a specific lang all together.
      properties:
        created_on:
          description: When was created.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        enabled:
          description: Filter results by the status.
          type: boolean
        id:
          type: string
          description: Blacklist identifier.
        lang:
          type: string
          description: Language for a blacklist.
        terms:
          uniqueItems: true
          type: array
          description: Words that will not appear they can several.
          items:
            type: string
        updated_on:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: When was updated.
    DeprecatedBlacklist:
      title: DeprecatedBlacklist
      deprecated: true
      description: Blacklisted term for a specific lang.
      required:
        - enabled
      type: object
      properties:
        created_on:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: When was created.
        enabled:
          type: boolean
          description: Filter results by the status.
        id:
          type: string
          description: Blacklist identifier.
        lang:
          type: string
          description: Language for a blacklist.
        terms:
          type: string
          description: Word that will not appear.
        updated_on:
          type: string
          description: When was updated.
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
    ResultList_DeprecatedBlacklist:
      title: ResultList<DeprecatedBlacklist>
      description: List the results that contains a deprecated blacklist.
      deprecated: true
      type: object
      properties:
        num_found:
          description: Total number of blacklist.
          type: integer
          format: int64
        results:
          type: array
          description: List of the blacklist.
          items:
            $ref: '#/components/schemas/DeprecatedBlacklist'
    ResultList_Blacklist:
      title: ResultList<Blacklist>
      description: List the results that contains a blacklist.
      type: object
      properties:
        num_found:
          description: Total number of blacklist.
          type: integer
          format: int64
        results:
          type: array
          description: List of the blacklist.
          items:
            $ref: '#/components/schemas/Blacklist'
    NotFound:
      title: NotFound
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-09-09T06:43:01.899+0000
          description: Datetime of the request.
        status:
          type: string
          example: 404
          description: HTTP status code of the request.
        error:
          type: string
          example: NOT_FOUND
          description: HTTP status identifier
        details:
          type: object
          description: Specific details of the error.
          properties:
            id:
              type: string
              example: NOT_FOUND
              description: Error identifier.
            message:
              type: string
              example: No blacklist configuration found for id 123456789L
              description: Description of the error.
  securitySchemes:
    AUTHORIZATION:
      type: apiKey
      name: AUTHORIZATION
      in: header
