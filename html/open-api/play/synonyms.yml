openapi: 3.0.3
info:
  title: Synonyms Documentation
  description: The goal of this endpoint is to manage the different synonyms, creating new ones or modifying the existing ones.
  contact:
    email: play@empathy.co
  version: '1.0.0'
servers:
  - url: 'http://localhost:8080'
    description: local
  - url: 'https://play-api.kroger.internal.dataless.gcp.empathy.dev/'
    description: kroger dataless
  - url: 'https://play-api.carrefour.internal.dataless.gcp.empathy.dev/'
    description: carrefour dataless
tags:
  - name: synonyms
    description: Manage Synonyms
paths:
  /synonyms:
    get:
      tags:
        - synonyms
      summary: Retrieves synonyms for the default instance.
      operationId: getAll
      parameters:
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendent or descendent.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by this field.
          style: form
          schema:
            type: string
        - name: lang
          in: query
          description: Language to filter.
          style: form
          schema:
            type: string
        - name: search
          in: query
          description: Search synonyms items by terms as an exact match.
          style: form
          schema:
            type: string
            enum:
              - search
        - name: psearch
          in: query
          description: Search synonyms items by terms as a parcial match.
          style: form
          schema:
            type: string
            enum:
              - psearch
        - name: kw
          in: query
          description: Search synonyms items by terms as an exact match.
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - kw
        - name: pkw
          in: query
          description: Search synonyms items by terms as a parcial match.
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - pkw

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_Synonym'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'

      security:
        - AUTHORIZATION:
            - global
    post:
      tags:
        - synonyms
      summary: Creates a new synonym for the default instance.
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymSupport'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'

      security:
        - AUTHORIZATION:
            - global
  '/synonyms/{id}':
    get:
      tags:
        - synonyms
      summary: Retrieves a default instanceâ€™s specific synonym by id.
      operationId: getId
      parameters:
        - name: id
          in: path
          description: Identifier of the value.
          required: true
          style: simple
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    put:
      tags:
        - synonyms
      summary: Modifies any field of a synonym of the default instance.
      operationId: putId
      parameters:
        - name: id
          in: path
          description: Identifier of the value.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymSupport'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global
    delete:
      tags:
        - synonyms
      summary: Deletes a specific synonym of the default instance.
      operationId: deleteId
      parameters:
        - name: id
          in: path
          description: Identifier of the value.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/synonyms':
    get:
      tags:
        - synonyms
      summary: Returns all the synonyms for the given instance.
      operationId: getRequest
      parameters:
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendent or descendent.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by this field.
          style: form
          schema:
            type: string
        - name: lang
          in: query
          description: Language to filter.
          style: form
          schema:
            type: string
        - name: search
          in: query
          description: Search synonyms items by terms as an exact match.
          style: form
          schema:
            type: string
            enum:
              - search
        - name: psearch
          in: query
          description: Search synonyms items by terms as a parcial match.
          style: form
          schema:
            type: string
            enum:
              - psearch
        - name: kw
          in: query
          description: Search synonyms items by terms as an exact match..
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - kw
        - name: pkw
          in: query
          description: Search synonyms items by terms as a parcial match.
          deprecated: true
          style: form
          schema:
            type: string
            enum:
              - pkw

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_Synonym'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    post:
      tags:
        - synonyms
      summary: Creates a synonym for the given instance.
      operationId: postRequest
      parameters:
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymSupport'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/synonyms/{id}':
    get:
      tags:
        - synonyms
      summary: Retrieves a given instanceâ€™s specific synonym by id.
      operationId: getRequestId
      parameters:
        - name: id
          in: path
          description:  synonym identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    put:
      tags:
        - synonyms
      summary: For the given instance and id, it modifies any synonymâ€™s field.
      operationId: putRequestId
      parameters:
        - name: id
          in: path
          description:  synonym identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynonymSupport'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    delete:
      tags:
        - synonyms
      summary: Deletes a synonym of a given instance by id.
      operationId: deleteRequestId
      parameters:
        - name: id
          in: path
          description:  synonym identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Identifier of the instance.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynonymSupport'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  /synonyms/import:
    post:
      tags:
        - synonyms
      summary: Posts a file to import many synonyms.
      operationId: importSynonymsUsingPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - lang
                - type
              type: object
              properties:
                importType:
                  type: string
                  description: importType
                  enum:
                    - CSV
                    - SOLR
                lang:
                  type: string
                  description: lang
                type:
                  type: string
                  description: type
            encoding:
              importType:
                contentType: text/plain
              type:
                contentType: text/plain
              lang:
                contentType: text/plain
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImportResponse_Synonym'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/synonyms/import':
    post:
      tags:
        - synonyms
      summary: Posts a file to import many synonyms for the given instance.
      operationId: importSynonymsRequestId
      parameters:
        - name: requestInstanceId
          in: path
          description: requestInstanceId
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - lang
                - type
              type: object
              properties:
                importType:
                  type: string
                  description: importType
                  enum:
                    - CSV
                    - SOLR
                lang:
                  type: string
                  description: lang
                type:
                  type: string
                  description: type
            encoding:
              importType:
                contentType: text/plain
              type:
                contentType: text/plain
              lang:
                contentType: text/plain
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImportResponse_Synonym'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unautorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: Not Found
      security:
        - AUTHORIZATION:
            - global

components:
  schemas:
    ResultList_Synonym:
      title: ResultList Synonym
      type: object
      properties:
        num_found:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Synonym'
    Synonym:
      title: Synonym
      required:
        - enabled
        - lang
        - type
      type: object
      properties:
        created_on:
          description: When was created.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        enabled:
          description: Filter results by the status.
          type: boolean
        hyponyms:
          type: array
          description: Word that means another.
          items:
            type: string
        id:
          description: Synonym identifier.
          type: string
        lang:
          description: Synonym language
          type: string
        synonyms:
          type: array
          description: Word that has the same meaning as another.
          items:
            type: string
        type:
          type: string
          description: Synonym type.
        updated_on:
          description: When was update.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
    SynonymSupport:
      title: Synonym Support
      required:
        - enabled
        - lang
        - type
      type: object
      properties:
        created_on:
          description: When was created.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        enabled:
          description: Filter results by the status.
          type: boolean
        hyponyms:
          type: array
          description: Word that means another.
          items:
            type: string
        id:
          description: Synonym identifier.
          type: string
        lang:
          description: Synonym language
          type: string
        synonyms:
          type: array
          description: Word that has the same meaning as another.
          items:
            type: string
        type:
          type: string
          description: Synonym type.
        updated_on:
          description: When was update.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''

    ImportResponse_Synonym:
      title: ImportResponse Synonym
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Synonym'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        failures:
          type: integer
          format: int32
        successful:
          type: integer
          format: int32

    Error:
      title: Error
      type: object
      properties:
        conflicting_elements:
          type: object
        field:
          type: array
          items:
            type: string
        id:
          type: string
          enum:
            - DUPLICATED
            - FORBIDDEN
            - INTERNAL_ERROR
            - INVALID_FIELD
            - INVALID_PARAMETER
            - NOT_FOUND
            - UNAUTHORIZED
        message:
          type: string

    NotFound:
      title: NotFound
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-09-09T06:43:01.899+0000
          description: Datetime of the request.
        status:
          type: string
          example: 404
          description: HTTP status code of the request.
        error:
          type: string
          example: NOT_FOUND
          description: HTTP status identifier
        details:
          type: object
          description: Specific details of the error.
          properties:
            id:
              type: string
              example: NOT_FOUND
              description: Error identifier.
            message:
              type: string
              example: No Synonym found for id 123456789L
              description: Description of the error.

    Unautorized:
      title: Unautorized
      type: object
      properties:
        timestamp:
          type: string
          example: 1599633810921
        status:
          type: integer
          example: 401
        error:
          type: string
          example: UNAUTHORIZED
        details:
          type: object
          properties:
            id:
              type: string
              example: UNAUTHORIZED
            message:
              type: string
              example: Full authentication is required to access this resource

    Forbidden:
      title: Forbidden
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-09-09T06:43:01.899+0000
        status:
          type: string
          example: 403
        error:
          type: string
          example: FORBIDDEN
        details:
          type: object
          properties:
            id:
              type: string
              example: FORBIDDEN
            message:
              type: string
              example: Invalid authorization
  securitySchemes:
    AUTHORIZATION:
      type: apiKey
      name: AUTHORIZATION
      in: header
