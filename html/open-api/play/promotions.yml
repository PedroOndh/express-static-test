openapi: 3.0.3
info:
  title: Promotion Documentation
  description: The goal of this endpoint is to handle all the promotions. Each promotion represents a Banner or a Promoted element.
  contact:
    email: play@empathy.co
  version: '1.0.0'
servers:
  - url: 'http://localhost:8080'
    description: local
  - url: 'https://play-api.kroger.internal.dataless.gcp.empathy.dev/'
    description: kroger dataless
  - url: 'https://play-api.carrefour.internal.dataless.gcp.empathy.dev/'
    description: carrefour dataless
tags:
  - name: promotion
    description: Manage Client Promotions
paths:
  /promotion:
    get:
      tags:
        - promotion
      summary: Retrieves promotions of the default instance.
      operationId: getAll
      parameters:
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendant or descendant.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sorts the values by this field.
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Filters by the type of promotion.
          style: form
          schema:
            type: string
            enum:
              - PROMOTED
              - BANNER
        - name: visible
          in: query
          description: Filters by visible items (those enabled always, and those enabled with the schedule started)
          style: form
          schema:
            type: boolean
        - name: search
          in: query
          description: Searchs for promotion items by terms as an exact match.
          style: form
          schema:
            type: string
        - name: psearch
          in: query
          description: Searchs for promotion items by terms as a parcial match.
          style: form
          schema:
            type: string
        - name: kw
          in: query
          description: Searchs for promotion items by terms as an exact match.
          deprecated: true
          style: form
          schema:
            type: string
        - name: pkw
          in: query
          description: Searchs for promotion items by terms as a parcial match.
          deprecated: true
          style: form
          schema:
            type: string
        - name: filters
          in: query
          description: "Filters by custom client attributes.<br> NOTE: All these params need the prefix 'filters.'"
          schema:
            type: object
            additionalProperties: true
            example:
              {"filters.scope": "desktop"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_Promotion'
      security:
        - AUTHORIZATION:
            - global
    post:
      tags:
        - promotion
      summary: Creates a new promotion for the default instance.
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
      security:
        - AUTHORIZATION:
            - global
  '/promotion/{id}':
    get:
      tags:
        - promotion
      summary: Retrieves a specific promotion of the default instance by id.
      operationId: getId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    put:
      tags:
        - promotion
      summary: Updates a promotion by identifier.
      operationId: putId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    delete:
      tags:
        - promotion
      summary: Deletes a specific promotion of the default instance.
      operationId: deleteId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  '/promotion/{id}/disable':
    put:
      tags:
        - promotion
      summary: Disables the promotion of the default instance by id.
      operationId: disable
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global

  '/promotion/{id}/enable':
    put:
      tags:
        - promotion
      summary: Enables the promotion of the default instance by id.
      operationId: enable
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/promotion':
    get:
      tags:
        - promotion
      summary: Returns all the promotion for the given instance.
      operationId: getRequest
      parameters:
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: start
          in: query
          description: Number of items to skip.
          schema:
            type: integer
            default: 0
        - name: rows
          in: query
          description: Number of items to be returned.
          style: form
          schema:
            type: integer
            default: 20
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendant or descendant.
          style: form
          schema:
            type: string
            default: ASC
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sorts the values by this field.
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Filters by the type of promotion.
          style: form
          schema:
            type: string
            enum:
              - PROMOTED
              - BANNER
        - name: visible
          in: query
          description: Filters by the visible items (those enabled always, and those enabled with the schedule started)
          style: form
          schema:
            type: boolean
        - name: search
          in: query
          description: Searchs for promotion items by terms as an exact match.
          style: form
          schema:
            type: string
        - name: psearch
          in: query
          description: Searchs for promotion items by terms as a parcial match.
          style: form
          schema:
            type: string
        - name: kw
          in: query
          description: Searchs for promotion items by terms as an exact match.
          deprecated: true
          style: form
          schema:
            type: string
        - name: pkw
          in: query
          description: Searchs for promotion items by terms as a parcial match.
          deprecated: true
          style: form
          schema:
            type: string
        - name: filters
          in: query
          description: "Filters by custom client attributes.<br> NOTE: All these params need the prefix 'filters.'"
          schema:
            type: object
            additionalProperties: true
            example:
              {"filters.scope": "desktop"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_Promotion'
      security:
        - AUTHORIZATION:
            - global
    post:
      tags:
        - promotion
      summary: Creates a promotion for the given instance.
      operationId: postRequest
      parameters:
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/promotion/{id}':
    get:
      tags:
        - promotion
      summary: Retrieves a specific promotion by id for the given instance.
      operationId: getRequestId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    put:
      tags:
        - promotion
      summary: Updates a promotion by id for the given instance.
      operationId: putRequestId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
    delete:
      tags:
        - promotion
      summary: Deletes a promotion of a given instance by id.
      operationId: deleteRequestId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/promotion/{id}/disable':
    put:
      tags:
        - promotion
      summary: Disables the promotion of an instance by id.
      operationId: disableRequestId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global
  '/{requestInstanceId}/promotion/{id}/enable':
    put:
      tags:
        - promotion
      summary: Enables the promotion of an instance by id.
      operationId: enableRequestId
      parameters:
        - name: id
          in: path
          description: Promotion's identifier.
          required: true
          style: simple
          schema:
            type: string
        - name: requestInstanceId
          in: path
          description: Instance's identifier.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      security:
        - AUTHORIZATION:
            - global

components:
  schemas:
    ResultList_Promotion:
      title: ResultList«Promotion»
      type: object
      properties:
        num_found:
          description: Total number of promotions.
          type: integer
          format: int64
        results:
          type: array
          description: List of promotions.
          items:
            $ref: '#/components/schemas/Promotion'
    Promotion:
      title: Promotion
      required:
        - enabled
        - match_all
        - keywords
        - langs
        - type
        - url
        - weight
        - title
      type: object
      properties:
        id:
          description: Promotion's identifier.
          type: string
        created_on:
          type: string
          description: When was created.
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        enabled:
          description: Status of the promotion.
          type: boolean
        filters:
          description: Custom promotion properties
          type: object
        image_url:
          description: URL with the promotion image.
          type: string
        keywords:
          type: array
          description: List of keywords for which the redirection will be applied.
          items:
            type: string
        langs:
          description: Languages where the redirection will be applied.
          type: array
          items:
            type: string
        match_all:
          description: If true, the 'keywords' field won't be taken into account and the promotion will be available for any query. If false it will be available just for the keywords list.
          type: boolean
        schedule:
          $ref: '#/components/schemas/Schedule'
        title:
          type: string
          description: Promotion's title.
        type:
          type: string
          description: Promotion's type.
          enum:
            - BANNER
            - PROMOTED
        updated_on:
          description: When was updated.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        url:
          description: URL to be redirected in order to see details of the promotion.
          type: string
        weight:
          description: Priority of the promotion. In case of more than one promotion for the same keyword this field will be used as a tiebreaker.
          type: integer
        metadata:
          $ref: '#/components/schemas/Metadata'
    Metadata:
      title: Metadata
      description: Data of the configuration itself.
      type: object
      properties:
        created_on:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: When was created.
        updated_on:
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
          description: When was updated the last time.
        user:
          type: string
          description: Who was the last one that modified it.
    Schedule:
      title: Schedule
      type: object
      properties:
        activation_date:
          description: Datetime when the promotion will start to be available.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        deactivation_date:
          description: Datetime when the promotion will stop to be available.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''

    NotFound:
      title: NotFound
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-09-09T06:43:01.899+0000
          description: Datetime of the request.
        status:
          type: string
          example: 404
          description: HTTP status code of the request.
        error:
          type: string
          example: NOT_FOUND
          description: HTTP status' identifier.
        details:
          type: object
          description: Specific details of the error.
          properties:
            id:
              type: string
              example: NOT_FOUND
              description: Error identifier.
            message:
              type: string
              example: No promotion found for id 123456789L.
              description: Description of the error.
  securitySchemes:
    AUTHORIZATION:
      type: apiKey
      name: AUTHORIZATION
      in: header
