openapi: 3.0.3
info:
  title: Instances Admin Documentation
  description: Admin Endpoint to manage playboard configurations for each customer.
  contact:
    email: play@empathy.co
  version: '1.0.0'
servers:
  - url: 'http://localhost:8080'
    description: local
  - url: 'https://play-api.kroger.internal.dataless.gcp.empathy.dev/'
    description: kroger dataless
  - url: 'https://play-api.carrefour.internal.dataless.gcp.empathy.dev/'
    description: carrefour dataless
security:
  - BearerAuth: []
paths:
  /admin/instances:
    get:
      tags:
        - Instances admin
      summary: Retrieve all instances admin configurations.
      operationId: getAllInstancesAdmin
      parameters:
        - name: rows
          in: query
          description: Number of items to be returned.
          required: false
          schema:
            type: integer
        - name: start
          in: query
          description: Number of items to skip before starting to collect the result.
          required: false
          schema:
            type: integer
        - name: sort.direction
          in: query
          description: Direction to sort results, ascendant or descendant.
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: sort.field
          in: query
          description: Sort the values by specific field.
          style: form
          schema:
            type: string
        - name: enabled
          in: query
          description: Filter by enabled/disabled state.
          required: false
          schema:
            type: boolean
        - name: instance
          in: query
          description: Id of the instance.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultList_InstanceAdmin'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - Instances admin
      summary: Create a new instance admin configuration.
      operationId: post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceAdminBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdmin'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /admin/instances/{id}:
    get:
      tags:
        - Instances admin
      summary: Return an instance admin configuration for the given id.
      operationId: getById
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdmin'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin
      summary: Update an instance admin configuration for the given id.
      operationId: put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceAdminBody'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdmin'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - Instances admin
      summary: Remove an instance admin configuration for the given id.
      operationId: delete
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdmin'
  /admin/instances/{id}/customization:
    get:
      tags:
        - Instances admin customization
      summary: Retrieve all customizations of the instances admin configurations id passed in by parameter.
      operationId: getAllInstancesAdminCustomization
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuratino.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminCustomization'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin customization
      summary: Update a customization for the instance admin configuration id passed by parameter.
      operationId: putCustomization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceAdminCustomizationBody'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminCustomization'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /admin/instances/{id}/{domain}/permissions:
    get:
      tags:
        - Instances admin permissions
      summary: Retrieve all permissions of the instances admin configurations id passed in by parameter.
      operationId: getPermissions
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
        - name: domain
          in: path
          description: Context in which permissions apply.
          required: true
          style: simple
          schema:
            type: string
            enum:
              - search
              - browse
              - global

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminPermissions'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin permissions
      summary: Update permissions for the instance admin configuration id passed by parameter.
      operationId: putPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceAdminPermissions'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
        - name: domain
          in: path
          description: Context in which permissions apply
          required: true
          style: simple
          schema:
            type: string
            enum:
              - search
              - browse
              - global
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminPermissions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/instances/{id}/{domain}/tools:
    get:
      tags:
        - Instances admin tools
      summary: Retrieve tools for the instance admin passed by parameter.
      operationId: getTools
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
        - name: domain
          in: path
          description: Context in which permissions apply.
          required: true
          style: simple
          schema:
            type: string
            enum:
              - search
              - browse
              - global

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminTools'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin tools
      summary: Update tools for the instance admin configuration id passed by parameter.
      operationId: putTools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceAdminTools'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
        - name: domain
          in: path
          description: Context in which permissions apply
          required: true
          style: simple
          schema:
            type: string
            enum:
              - search
              - browse
              - global
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminTools'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /admin/instances/{id}/catalog:
    get:
      tags:
        - Instances admin catalog configuration
      summary: Retrieve catalog configuration for the instance admin passed by parameter.
      operationId: getCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogConfig'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin catalog configuration
      summary: Update catalog for the instance admin configuration id passed by parameter.
      operationId: putCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogConfig'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /admin/instances/{id}/endpoints:
    get:
      tags:
        - Instances admin endpoints configuration
      summary: Retrieve endpoints configuration for the instance admin passed by parameter.
      operationId: getEndpoints
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminEndpoints'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin endpoints configuration
      summary: Update endpoints configuration for the instance admin configuration id passed by parameter.
      operationId: putEndpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceAdminEndpoints'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceAdminEndpoints'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /admin/instances/{id}/kpis:
    get:
      tags:
        - Instances admin kpis configuration
      summary: Get kpis configuration for the instance admin configuration id passed by parameter.
      operationId: getKpis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kpis'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kpis'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - Instances admin kpis configuration
      summary: Update kpis configuration for the instance admin configuration id passed by parameter.
      operationId: putKpis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kpis'
      parameters:
        - name: id
          in: path
          description: Identifier of the instance admin configuration.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kpis'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    InstanceAdmin:
      title: InstanceAdmin
      type: object
      properties:
        id:
          description: Generated unique id of the instance.
          type: string
        instance:
          description: Readable unique id of the instance, normally is the pretty_name without symbols, spaces and in lowercase.
          type: string
        enabled:
          description: Status of the instance.
          type: boolean
        metadata:
          $ref: '#/components/schemas/Metadata'

    ResultList_InstanceAdmin:
      title: ResultList«InstanceAdmin»
      type: object
      properties:
        num_found:
          description: Total number of instances.
          type: integer
        results:
          description: List of instances.
          type: array
          items:
            $ref: '#/components/schemas/InstanceAdmin'

    InstanceAdminBody:
      title: InstanceAdminBody
      description: Global configuration
      type: object
      properties:
        instance:
          description: Readable unique id of the instance, normally is the pretty_name without symbols, spaces and in lowercase.
          type: string
        enabled:
          description: Status of the instance.
          type: boolean

    LogoUrls:
      title: LogoUrls
      description: Different logos available for the instance
      type: object
      properties:
        imagotype:
          description: URL of an icon image and brand name.
          type: string
          format: URL
        isotype:
          description: URL of an icon image.
          type: string
          format: URL

    Metadata:
      title: Metadata
      description: Data of the configuration itself.
      type: object
      properties:
        created_on:
          description: When was created.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        updated_on:
          description: When was updated the last time.
          type: string
          example: 'yyyy-MM-dd''T''HH:mm:ss''Z'''
        user:
          description: Who was the last one that modified it.
          type: string

    InstanceAdminCustomizationBody:
      title: CustomizationBody
      description: Customization of the instance admin configuration.
      type: object
      properties:
        logo_urls:
          $ref: '#/components/schemas/LogoUrls'

    InstanceAdminCustomization:
      title: Customization
      description: Customization of the instance admin configuration.
      type: object
      properties:
        logo_urls:
          $ref: '#/components/schemas/LogoUrls'
        metadata:
          $ref: '#/components/schemas/Metadata'

    InstanceAdminPermissions:
      title: Permissions
      description: Permissions of the instance admin.
      type: array
      items:
        type: object
        properties:
          id:
            description: Identifier of the permission.
            type: string
          level:
            description: Restriction on the permission.
            type: string
            enum:
              - NONE
              - PREVIEW
              - READ
              - WRITE

    InstanceAdminTools:
      title: Tools
      description: Specific configuration of each tool.
      type: object
      properties:
        base:
          $ref: '#/components/schemas/ToolConfig'
        configuration:
          $ref: '#/components/schemas/ConfigurationsToolConfig'
        synonym:
          $ref: '#/components/schemas/SynonymsToolConfig'
    CatalogConfig:
      title: CatalogConfig
      description: Configuration of the catalog.
      type: object
      required:
        - result_mappings
      properties:
        index_token:
          description: Id of the instance that is used to identify the customer in the index service.
          type: string
        fields:
          description: Catalog fields configuration.
          type: array
          items:
            $ref: '#/components/schemas/CatalogField'
        result_mappings:
          $ref: '#/components/schemas/ResultMappings'
    ResultMappings:
      title: ResultMappings
      type: object
      description: Object that is used to map playboard known fields with the customer specific search homologous fields.
      properties:
        id:
          description: Name of the Field containing the product id.
          type: string
        image_url:
          description: Name of the field that contains the URL of an image.
          type: string
        image_url_prefix:
          description: Fixed image url prefix. This is used when each product has a relative url for images. It is not needed if the product uses absolute urls for images.
          type: string
        name:
          description: Name of the field that contains the product name.
          type: string
        url:
          description: Name of the field that contains the URL of the product.
          type: string
        url_prefix:
          description: Fixed url prefix. This is used when each product has a relative url. It is not needed if the product uses absolute urls.
          type: string
    CatalogField:
      title: CatalogField
      description: Definition of the catalog field behavior.
      type: object
      properties:
        id:
          description: Field identifier.
          type: string
        pretty_name:
          description: Pretty name of the field used to be displayed.
          type: string
        facetable:
          description: Identify the field as facetable.
          type: boolean
        rankable:
          description: Identify the field as rankable.
          type: boolean
        searchable:
          description: Identify the field as searchable.
          type: boolean

    SynonymsToolConfig:
      title: SynonymsToolConfig
      description: Configuration for the synonyms tool
      type: object
      properties:
        pivot_ids:
          type: array
          description: Values by which the catalog is segmented.
          items:
            type: string
        types:
          type: array
          description: List of the different synonym types used in the customer catalog.
          items:
            $ref: '#/components/schemas/SynonymTypeConfig'
    ToolConfig:
      title: ToolConfig
      description: Default configuration for all tools
      type: object
      properties:
        pivot_ids:
          type: array
          description: Values by which the catalog is segmented.
          items:
            type: string
    ConfigurationsToolConfig:
      title: ConfigurationsToolConfig
      description: Configuration for the "configurations" tool.
      type: object
      properties:
        attributes:
          type: array
          description: List that can be used to identify groups of products.
          items:
            type: object
            properties:
              id:
                type: string
                description: Product identifier.
              browse_id:
                type: string
                description: Browse identifier.
              facet_id:
                type: string
                description: Facet identifier.
              pretty_name:
                type: string
                description: Name of the product to be displayed
        pivot_ids:
          type: array
          description: Values by which the catalog is segmented.
          items:
            type: string
    SynonymTypeConfig:
      title: SynonymTypeConfig
      description: Configuration to define a synonym type.
      type: object
      properties:
        id:
          description: Identifier of the synonym type.
          type: string
        pretty_name:
          description: Pretty name for the synonyme type.
          type: string

    InstanceAdminEndpoints:
      title: Endpoints
      description: EndpointsConfiguration.
      type: object
      properties:
        search:
          $ref: '#/components/schemas/EndpointConfig'
        stats:
          $ref: '#/components/schemas/EndpointConfig'
        browse:
          $ref: '#/components/schemas/BrowseEndpointConfig'
    Kpis:
      title: Kpis
      description: KpisConfiguration.
      type: array
      items:
        type: string
        example: "clicks"
    EndpointConfig:
      description: Config for an endpoint.
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/EnumFilter'
          - $ref: '#/components/schemas/DateFilter'
          - $ref: '#/components/schemas/TextFilter'
    BrowseEndpointConfig:
      description: List of available filters.
      type: object
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Attribute'
        filters:
          description: List of available filters.
          type: array
          items:
            $ref: '#/components/schemas/EndpointConfig'
    Attribute:
      title: attribute
      description: Configuration for an attribute.
      type: object
      properties:
        attributes:
          type: array
          description: List that can be used to identify groups of products.
          items:
            type: object
            properties:
              id:
                type: string
                description: Product identifier.
              browse_id:
                type: string
                description: Browse identifier.
              facet_id:
                type: string
                description: Facet identifier.
              pretty_name:
                type: string
                description: Name of the product to be displayed
    EnumFilter:
      title: Enum filter
      required:
        - id
        - type
        - values
        - values_sort_type
      type: object
      properties:
        id:
          description: Id of the filter
          type: string
        type:
          description: Type of filter. In this case it will be always 'ENUM'.
          type: string
          enum:
            - ENUM
        values_sort_type:
          description: Stores the type of the configuration.
          type: string
          enum:
            - BY_DEFAULT
            - ALPHABETICALLY
        values:
          description: list of enum filter values
          type: array
          items:
            $ref: '#/components/schemas/EnumFilterValue'
        mandatory:
          description: If is required.
          type: boolean
        i18n_key:
          description: Name of the filter to be displayed.
          type: string
        pretty_name:
          description: Name of the filter to be displayed.
          type: string
    EnumFilterValue:
      description: Enum filter value
      type: object
      properties:
        id:
          description: Id of the value
          type: string
    TextFilter:
      title: Text filter
      required:
        - id
        - type
      type: object
      properties:
        id:
          description: Id of the filter
          type: string
        type:
          description: Type of filter. In this case it will be always 'realtime'.
          type: string
          enum:
            - TEXT
        mandatory:
          description: If is required.
          type: boolean
        i18n_key:
          description: Name of the filter to be displayed.
          type: string
        pretty_name:
          description: Name of the filter to be displayed.
          type: string
    DateFilter:
      title: Date filter
      required:
        - id
        - type
      type: object
      properties:
        id:
          description: Id of the filter.
          type: string
        max_date_in_millis:
          description: Maximum date that can be requested in milliseconds.
          type: integer
        max_period_in_millis:
          description: Maximum period of time that can be requested in milliseconds.
          type: integer
        min_date_in_millis:
          description: Minimum date that can be requested in milliseconds.
          type: integer
        type:
          description: Type of filter. In this case it will be always 'DATE'.
          type: string
          enum:
            - DATE
        mandatory:
          description: If is required.
          type: boolean
        i18n_key:
          description: Name of the filter to be displayed.
          type: string
        pretty_name:
          description: Name of the filter to be displayed.
          type: string
    BadRequest:
      title: Bad Request
      type: object
      properties:
        timestamp:
          type: string
          example: "2021-03-31T12:41:28.293+00:00"
        status:
          type: integer
          example: 400
        error:
          type: string
          example: Bad Request
        details:
          type: object
          properties:
            id:
              type: string
            message:
              type: string
    Unauthorized:
      title: Unautorized
      type: object
      properties:
        timestamp:
          type: string
          example: "2021-03-31T12:41:28.293+00:00"
        status:
          type: integer
          example: 401
        error:
          type: string
          example: UNAUTHORIZED
        details:
          type: object
          properties:
            id:
              type: string
              example: UNAUTHORIZED
            message:
              type: string
              example: Full authentication is required to access this resource
    Forbidden:
      title: Forbidden
      type: object
      properties:
        timestamp:
          type: string
          example: "2021-03-31T12:41:28.293+00:00"
        status:
          type: integer
          example: 403
        error:
          type: string
          example: FORBIDDEN
        details:
          type: object
          properties:
            id:
              type: string
              example: FORBIDDEN
            message:
              type: string
              example: Access is denied
    InternalServerError:
      title: Internal Server Error
      type: object
      properties:
        timestamp:
          type: string
          example: "2021-03-31T12:41:28.293+00:00"
        status:
          type: integer
          example: 500
        error:
          type: string
          example: Internal Server Error
        details:
          type: object
          properties:
            id:
              type: string
            message:
              type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT